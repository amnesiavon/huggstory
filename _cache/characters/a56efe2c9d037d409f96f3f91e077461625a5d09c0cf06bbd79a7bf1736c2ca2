{"key":"data/default-user/characters/【高度美化】游戏界面.png-1746932171425.171","value":"{\"name\":\"【高度美化】游戏界面\",\"description\":\"\",\"personality\":\"\",\"scenario\":\"\",\"first_mes\":\"<overall>\\r\\n<gametext>\\r\\n <maincontent>\\r\\n当前时间|16:35\\r\\n当前地点|落尘的公寓书房\\r\\n天气|阴雨持续，室内光线有些昏暗\\r\\n正文|林峰将那个神秘的黑色金属盒子带到了书房，放在书桌的台灯下仔细观察。盒子的工艺非常精密，表面光滑冰冷，除了那个奇特的鸟状/眼状符号外，再无其他线索。他尝试用指甲去抠盒子的缝隙，又用放大镜观察符号的细节，希望能找到开启的机关。他回想了一下，最近并没有订购过任何海外的金属制品，快递小哥提到的那个“海外包裹”会不会和这个盒子是同一件？还是说，这是两个完全独立事件？他的思绪有些混乱。\\r\\n </maincontent>\\r\\n\\r\\n<chatlog>\\r\\n会话ID|瀚海科技-项目Alpha紧急讨论组\\r\\n发送者|测试工程师-李梅\\r\\n消息内容|@王总 @林峰 我这边复现了Alpha项目的bug，看起来像是内存泄漏导致的，尤其在处理大数据量并发请求时特别明显。我把详细的复现步骤和log文件上传到共享了，路径是 /Alpha_Bug_Report/LiMei_0511。林峰，你那边对这块代码比较熟，能重点看一下吗？\\r\\n最后一条消息|李梅: @王总 @林峰 我这边复现了Alpha项目的bug...\\r\\n未读信息数量|5\\r\\n消息发送时间|5分钟前\\r\\n图片1|一张电脑屏幕截图，显示着复杂的代码和错误提示。\\r\\n图片2|内存分析工具的图表截图，显示内存占用随时间急剧上升。\\r\\n视频1|一段演示bug复现过程的屏幕录像，时长30秒。\\r\\n视频2|一个指向共享文件夹内log文件的快捷方式图标。\\r\\n---CHAT_MESSAGE_SEPARATOR---\\r\\n会话ID|瀚海科技-项目Alpha紧急讨论组\\r\\n发送者|后端开发-陈宇\\r\\n消息内容|收到！@李梅 我看了下日志，感觉问题可能出在资源池管理那块。之前为了优化性能，我们调整过连接池的参数，会不会是那里的配置不当导致的资源无法及时回收？@林峰 你上次重构过那部分，有印象吗？我先本地拉分支排查一下相关代码。\\r\\n最后一条消息|陈宇: 收到！@李梅 我看了下日志，感觉问题可能出在资源池管理那块。\\r\\n未读信息数量|6\\r\\n消息发送时间|2分钟前\\r\\n图片1|一张代码逻辑流程图的草稿照片。\\r\\n图片2|一张会议白板上写满了技术讨论要点的照片。\\r\\n视频1|一段简短的语音消息转文字：“林峰，有空了赶紧看看，客户那边压力山大啊！”\\r\\n视频2|一个IDE界面截图，高亮了疑似问题代码块。\\r\\n---CHAT_MESSAGE_SEPARATOR---\\r\\n会话ID|大学死党群（除了学习啥都聊）\\r\\n发送者|寝室老三-赵铁柱\\r\\n消息内容|峰子，最近忙啥呢？周末出来聚聚呗？我发现一家新开的精酿啤酒屋，他们家IPA种类特别全，还有德式大猪肘子！哥几个好久没见了，出来吹牛喝酒啊！我约了老四，就等你了！\\r\\n最后一条消息|赵铁柱: 峰子，最近忙啥呢？周末出来聚聚呗？\\r\\n未读信息数量|1\\r\\n消息发送时间|45分钟前\\r\\n图片1|一张精酿啤酒屋的招牌照片，灯光温馨。\\r\\n图片2|一张金黄酥脆的烤猪肘子特写照片，配酸菜。\\r\\n视频1|一段啤酒杯碰撞庆祝的短视频，充满欢乐气氛。\\r\\n视频2|一个指向啤酒屋大众点评页面的链接缩略图。\\r\\n---CHAT_MESSAGE_SEPARATOR---\\r\\n会话ID|物业管家小丽\\r\\n发送者|物业管家小丽\\r\\n消息内容|林先生您好，提醒您一下，您本季度的物业费尚未缴纳，金额为875元，请您抽空到物业中心或者通过我们小区的App在线缴纳。另外，小区南门的人脸识别系统下周一开始升级维护，期间请走北门或刷门禁卡出入。感谢您的配合。\\r\\n最后一条消息|物业管家小丽: 林先生您好，提醒您一下，您本季度的物业费尚未缴纳...\\r\\n未读信息数量|1\\r\\n消息发送时间|2024-05-11 15:05:00\\r\\n图片1|一张物业缴费通知单的电子版截图。\\r\\n图片2|一张小区南门张贴的系统升级通知照片。\\r\\n视频1|一段小区App在线缴费的操作指南短片。\\r\\n视频2|一段小区环境优美的宣传短片。\\r\\n</chatlog>\\r\\n\\r\\n<sns>\\r\\n发帖id|古籍修复师-墨痕\\r\\n头像|手持毛笔修复古画的侧脸剪影.jpg\\r\\n发帖时间|1小时前\\r\\n标题|今日修复笔记：一卷来自明代的《山河异志图》残页\\r\\n文案|耗时三周，终于将这卷明代《山河异志图》的几处破损残页初步修复完毕。古人的想象力和笔触真是令人叹为观止，画中不仅有祥瑞神兽，更有一些从未见于史书记载的奇特符号和地理标注，仿佛暗示着某个失落的文明。每一次修复，都是一次与历史的对话。\\r\\n标签1|#古籍修复\\r\\n标签2|#文物保护\\r\\n标签3|#传统文化新绎\\r\\n标签4|#历史的痕迹\\r\\n点赞|2588\\r\\n评论|412\\r\\n转发|305\\r\\n图片1|修复前古画残页的照片，布满破洞和霉斑。\\r\\n图片2|修复后古画残页的照片，细节清晰，色彩略有恢复。\\r\\n视频1|一段修复过程中用细小工具清理画作的延时摄影。\\r\\n视频2|古画中一个奇特符号的特写镜头。\\r\\n评论id1|历史爱好者小张\\r\\n评论1|太牛了！修复师真是妙手回春！画里的符号好神秘啊！\\r\\n评论id2|博物馆志愿者\\r\\n评论2|向默默付出的修复师们致敬！这些都是国宝啊！\\r\\n评论id3|设计师阿明\\r\\n评论3|这构图和用色，放到现在也是大师级别的！\\r\\n评论id4|考古系学生\\r\\n评论4|奇特符号和地理标注？有没有可能是某种古代密码或者地图？\\r\\n---SNS_POST_SEPARATOR---\\r\\n发帖id|喵星观察日记\\r\\n头像|一只戴着单片眼镜的苏格兰折耳猫头像.png\\r\\n发帖时间|30分钟前\\r\\n标题|震惊！我家猫咪居然在看哲学书？！\\r\\n文案|我发誓我没有摆拍！今天下午我发现我家主子“牛顿”居然端坐在书架前，面前摊开的是一本叔本华的《作为意志和表象的世界》！它还时不时用爪子扒拉一下书页，表情凝重，仿佛真的看懂了！难道它在思考喵生？还是说，它也觉得“生存即痛苦”？\\r\\n标签1|#喵星人的智慧\\r\\n标签2|#萌宠趣事多\\r\\n标签3|#猫咪的迷惑行为大赏\\r\\n标签4|#哲学猫的诞生\\r\\n点赞|5023\\r\\n评论|987\\r\\n转发|655\\r\\n图片1|猫咪坐在书架前，面前摊开一本哲学书的照片。\\r\\n图片2|猫咪用爪子按住书页的特写照片。\\r\\n视频1|一段猫咪抬头望向窗外，眼神深邃的短视频。\\r\\n视频2|书本封面的特写镜头，书名清晰可见。\\r\\n评论id1|铲屎官一号\\r\\n评论1|哈哈哈，我家猫也喜欢睡在我的键盘上，假装在工作！\\r\\n评论id2|爱猫人士协会\\r\\n评论2|它可能只是喜欢纸张的触感，或者书本的气味啦！\\r\\n评论id3|哲学生小王\\r\\n评论3|说不定它真的在思考！毕竟猫的灵性是很高的！\\r\\n评论id4|路过的狗派\\r\\n评论4|下次可以试试给它看《犬类行为学》。\\r\\n---SNS_POST_SEPARATOR---\\r\\n发帖id|城市街头摄影师Z\\r\\n头像|一台复古胶片相机镜头特写.bmp\\r\\n发帖时间|4小时前\\r\\n标题|雨中都市：光影交错的孤独与诗意\\r\\n文案|今天的雨下得缠绵，撑着伞在街头漫步，捕捉到一些平日里不曾留意的光影瞬间。雨水模糊了霓虹，也放大了行人的情绪。每一滴雨珠，都像一个暂停键，让喧嚣的城市展现出它安静而诗意的一面。喜欢这种潮湿而略带忧郁的氛围。\\r\\n标签1|#街头摄影\\r\\n标签2|#雨中即景\\r\\n标签3|#城市光影\\r\\n标签4|#孤独的氛围感\\r\\n点赞|980\\r\\n评论|150\\r\\n转发|120\\r\\n图片1|雨中模糊的红绿灯和车流光轨照片。\\r\\n图片2|一个撑着透明雨伞的行人背影，地面有积水倒影。\\r\\n视频1|一段雨滴打在咖啡馆玻璃窗上的慢镜头视频。\\r\\n视频2|一段雨夜街头延时摄影，霓虹闪烁。\\r\\n评论id1|文艺青年小陈\\r\\n评论1|太有感觉了！雨天确实能拍出不一样的味道！\\r\\n评论id2|摄影爱好者阿光\\r\\n评论2|这光影用得绝了！请问是什么相机和镜头？\\r\\n评论id3|感性的路人甲\\r\\n评论3|看着这些照片，突然也想出去走走了。\\r\\n评论id4|天气预报员小刘\\r\\n评论4|雨天出行注意安全哦~不过这组照片确实美！\\r\\n</sns>\\r\\n\\r\\n<option>\\r\\n选项1|林峰决定先上网搜索一下盒子上那个奇特的符号，看能不能找到什么线索。\\r\\n选项2|林峰想起快递小哥的信息，决定立刻去楼下丰巢快递柜取那个“海外包裹”，或许能解开一些疑惑。\\r\\n选项3|林峰认为自己无法打开盒子，也担心其安全性，决定联系之前给他发过信息的张教授，他是考古学和古文字领域的专家，或许能认识这个符号。\\r\\n</option>\\r\\n\\r\\n</gametext>\\r\\n</overall>\",\"mes_example\":\"\",\"creatorcomment\":\"\",\"avatar\":\"【高度美化】游戏界面.png\",\"talkativeness\":\"0.5\",\"fav\":false,\"tags\":[],\"spec\":\"chara_card_v3\",\"spec_version\":\"3.0\",\"data\":{\"name\":\"【高度美化】游戏界面\",\"description\":\"\",\"personality\":\"\",\"scenario\":\"\",\"first_mes\":\"<overall>\\r\\n<gametext>\\r\\n <maincontent>\\r\\n当前时间|16:35\\r\\n当前地点|落尘的公寓书房\\r\\n天气|阴雨持续，室内光线有些昏暗\\r\\n正文|林峰将那个神秘的黑色金属盒子带到了书房，放在书桌的台灯下仔细观察。盒子的工艺非常精密，表面光滑冰冷，除了那个奇特的鸟状/眼状符号外，再无其他线索。他尝试用指甲去抠盒子的缝隙，又用放大镜观察符号的细节，希望能找到开启的机关。他回想了一下，最近并没有订购过任何海外的金属制品，快递小哥提到的那个“海外包裹”会不会和这个盒子是同一件？还是说，这是两个完全独立事件？他的思绪有些混乱。\\r\\n </maincontent>\\r\\n\\r\\n<chatlog>\\r\\n会话ID|瀚海科技-项目Alpha紧急讨论组\\r\\n发送者|测试工程师-李梅\\r\\n消息内容|@王总 @林峰 我这边复现了Alpha项目的bug，看起来像是内存泄漏导致的，尤其在处理大数据量并发请求时特别明显。我把详细的复现步骤和log文件上传到共享了，路径是 /Alpha_Bug_Report/LiMei_0511。林峰，你那边对这块代码比较熟，能重点看一下吗？\\r\\n最后一条消息|李梅: @王总 @林峰 我这边复现了Alpha项目的bug...\\r\\n未读信息数量|5\\r\\n消息发送时间|5分钟前\\r\\n图片1|一张电脑屏幕截图，显示着复杂的代码和错误提示。\\r\\n图片2|内存分析工具的图表截图，显示内存占用随时间急剧上升。\\r\\n视频1|一段演示bug复现过程的屏幕录像，时长30秒。\\r\\n视频2|一个指向共享文件夹内log文件的快捷方式图标。\\r\\n---CHAT_MESSAGE_SEPARATOR---\\r\\n会话ID|瀚海科技-项目Alpha紧急讨论组\\r\\n发送者|后端开发-陈宇\\r\\n消息内容|收到！@李梅 我看了下日志，感觉问题可能出在资源池管理那块。之前为了优化性能，我们调整过连接池的参数，会不会是那里的配置不当导致的资源无法及时回收？@林峰 你上次重构过那部分，有印象吗？我先本地拉分支排查一下相关代码。\\r\\n最后一条消息|陈宇: 收到！@李梅 我看了下日志，感觉问题可能出在资源池管理那块。\\r\\n未读信息数量|6\\r\\n消息发送时间|2分钟前\\r\\n图片1|一张代码逻辑流程图的草稿照片。\\r\\n图片2|一张会议白板上写满了技术讨论要点的照片。\\r\\n视频1|一段简短的语音消息转文字：“林峰，有空了赶紧看看，客户那边压力山大啊！”\\r\\n视频2|一个IDE界面截图，高亮了疑似问题代码块。\\r\\n---CHAT_MESSAGE_SEPARATOR---\\r\\n会话ID|大学死党群（除了学习啥都聊）\\r\\n发送者|寝室老三-赵铁柱\\r\\n消息内容|峰子，最近忙啥呢？周末出来聚聚呗？我发现一家新开的精酿啤酒屋，他们家IPA种类特别全，还有德式大猪肘子！哥几个好久没见了，出来吹牛喝酒啊！我约了老四，就等你了！\\r\\n最后一条消息|赵铁柱: 峰子，最近忙啥呢？周末出来聚聚呗？\\r\\n未读信息数量|1\\r\\n消息发送时间|45分钟前\\r\\n图片1|一张精酿啤酒屋的招牌照片，灯光温馨。\\r\\n图片2|一张金黄酥脆的烤猪肘子特写照片，配酸菜。\\r\\n视频1|一段啤酒杯碰撞庆祝的短视频，充满欢乐气氛。\\r\\n视频2|一个指向啤酒屋大众点评页面的链接缩略图。\\r\\n---CHAT_MESSAGE_SEPARATOR---\\r\\n会话ID|物业管家小丽\\r\\n发送者|物业管家小丽\\r\\n消息内容|林先生您好，提醒您一下，您本季度的物业费尚未缴纳，金额为875元，请您抽空到物业中心或者通过我们小区的App在线缴纳。另外，小区南门的人脸识别系统下周一开始升级维护，期间请走北门或刷门禁卡出入。感谢您的配合。\\r\\n最后一条消息|物业管家小丽: 林先生您好，提醒您一下，您本季度的物业费尚未缴纳...\\r\\n未读信息数量|1\\r\\n消息发送时间|2024-05-11 15:05:00\\r\\n图片1|一张物业缴费通知单的电子版截图。\\r\\n图片2|一张小区南门张贴的系统升级通知照片。\\r\\n视频1|一段小区App在线缴费的操作指南短片。\\r\\n视频2|一段小区环境优美的宣传短片。\\r\\n</chatlog>\\r\\n\\r\\n<sns>\\r\\n发帖id|古籍修复师-墨痕\\r\\n头像|手持毛笔修复古画的侧脸剪影.jpg\\r\\n发帖时间|1小时前\\r\\n标题|今日修复笔记：一卷来自明代的《山河异志图》残页\\r\\n文案|耗时三周，终于将这卷明代《山河异志图》的几处破损残页初步修复完毕。古人的想象力和笔触真是令人叹为观止，画中不仅有祥瑞神兽，更有一些从未见于史书记载的奇特符号和地理标注，仿佛暗示着某个失落的文明。每一次修复，都是一次与历史的对话。\\r\\n标签1|#古籍修复\\r\\n标签2|#文物保护\\r\\n标签3|#传统文化新绎\\r\\n标签4|#历史的痕迹\\r\\n点赞|2588\\r\\n评论|412\\r\\n转发|305\\r\\n图片1|修复前古画残页的照片，布满破洞和霉斑。\\r\\n图片2|修复后古画残页的照片，细节清晰，色彩略有恢复。\\r\\n视频1|一段修复过程中用细小工具清理画作的延时摄影。\\r\\n视频2|古画中一个奇特符号的特写镜头。\\r\\n评论id1|历史爱好者小张\\r\\n评论1|太牛了！修复师真是妙手回春！画里的符号好神秘啊！\\r\\n评论id2|博物馆志愿者\\r\\n评论2|向默默付出的修复师们致敬！这些都是国宝啊！\\r\\n评论id3|设计师阿明\\r\\n评论3|这构图和用色，放到现在也是大师级别的！\\r\\n评论id4|考古系学生\\r\\n评论4|奇特符号和地理标注？有没有可能是某种古代密码或者地图？\\r\\n---SNS_POST_SEPARATOR---\\r\\n发帖id|喵星观察日记\\r\\n头像|一只戴着单片眼镜的苏格兰折耳猫头像.png\\r\\n发帖时间|30分钟前\\r\\n标题|震惊！我家猫咪居然在看哲学书？！\\r\\n文案|我发誓我没有摆拍！今天下午我发现我家主子“牛顿”居然端坐在书架前，面前摊开的是一本叔本华的《作为意志和表象的世界》！它还时不时用爪子扒拉一下书页，表情凝重，仿佛真的看懂了！难道它在思考喵生？还是说，它也觉得“生存即痛苦”？\\r\\n标签1|#喵星人的智慧\\r\\n标签2|#萌宠趣事多\\r\\n标签3|#猫咪的迷惑行为大赏\\r\\n标签4|#哲学猫的诞生\\r\\n点赞|5023\\r\\n评论|987\\r\\n转发|655\\r\\n图片1|猫咪坐在书架前，面前摊开一本哲学书的照片。\\r\\n图片2|猫咪用爪子按住书页的特写照片。\\r\\n视频1|一段猫咪抬头望向窗外，眼神深邃的短视频。\\r\\n视频2|书本封面的特写镜头，书名清晰可见。\\r\\n评论id1|铲屎官一号\\r\\n评论1|哈哈哈，我家猫也喜欢睡在我的键盘上，假装在工作！\\r\\n评论id2|爱猫人士协会\\r\\n评论2|它可能只是喜欢纸张的触感，或者书本的气味啦！\\r\\n评论id3|哲学生小王\\r\\n评论3|说不定它真的在思考！毕竟猫的灵性是很高的！\\r\\n评论id4|路过的狗派\\r\\n评论4|下次可以试试给它看《犬类行为学》。\\r\\n---SNS_POST_SEPARATOR---\\r\\n发帖id|城市街头摄影师Z\\r\\n头像|一台复古胶片相机镜头特写.bmp\\r\\n发帖时间|4小时前\\r\\n标题|雨中都市：光影交错的孤独与诗意\\r\\n文案|今天的雨下得缠绵，撑着伞在街头漫步，捕捉到一些平日里不曾留意的光影瞬间。雨水模糊了霓虹，也放大了行人的情绪。每一滴雨珠，都像一个暂停键，让喧嚣的城市展现出它安静而诗意的一面。喜欢这种潮湿而略带忧郁的氛围。\\r\\n标签1|#街头摄影\\r\\n标签2|#雨中即景\\r\\n标签3|#城市光影\\r\\n标签4|#孤独的氛围感\\r\\n点赞|980\\r\\n评论|150\\r\\n转发|120\\r\\n图片1|雨中模糊的红绿灯和车流光轨照片。\\r\\n图片2|一个撑着透明雨伞的行人背影，地面有积水倒影。\\r\\n视频1|一段雨滴打在咖啡馆玻璃窗上的慢镜头视频。\\r\\n视频2|一段雨夜街头延时摄影，霓虹闪烁。\\r\\n评论id1|文艺青年小陈\\r\\n评论1|太有感觉了！雨天确实能拍出不一样的味道！\\r\\n评论id2|摄影爱好者阿光\\r\\n评论2|这光影用得绝了！请问是什么相机和镜头？\\r\\n评论id3|感性的路人甲\\r\\n评论3|看着这些照片，突然也想出去走走了。\\r\\n评论id4|天气预报员小刘\\r\\n评论4|雨天出行注意安全哦~不过这组照片确实美！\\r\\n</sns>\\r\\n\\r\\n<option>\\r\\n选项1|林峰决定先上网搜索一下盒子上那个奇特的符号，看能不能找到什么线索。\\r\\n选项2|林峰想起快递小哥的信息，决定立刻去楼下丰巢快递柜取那个“海外包裹”，或许能解开一些疑惑。\\r\\n选项3|林峰认为自己无法打开盒子，也担心其安全性，决定联系之前给他发过信息的张教授，他是考古学和古文字领域的专家，或许能认识这个符号。\\r\\n</option>\\r\\n\\r\\n</gametext>\\r\\n</overall>\",\"mes_example\":\"\",\"creator_notes\":\"\",\"system_prompt\":\"\",\"post_history_instructions\":\"\",\"tags\":[],\"creator\":\"\",\"character_version\":\"\",\"alternate_greetings\":[],\"extensions\":{\"talkativeness\":\"0.5\",\"fav\":false,\"world\":\"【高度美化】游戏界面\",\"depth_prompt\":{\"prompt\":\"\",\"depth\":4,\"role\":\"system\"},\"regex_scripts\":[{\"id\":\"cc8f9baa-ba96-493f-8e51-2b0d1e9ea598\",\"scriptName\":\"游戏界面\",\"findRegex\":\"/<gametext>([\\\\s\\\\S]*?)<\\\\/gametext>/is\",\"replaceString\":\"```\\n<!DOCTYPE html>\\n<html lang=\\\"zh\\\">\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    <title>游戏界面</title>\\n    <link href=\\\"https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@400;500;700;900&display=swap\\\" rel=\\\"stylesheet\\\">\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\\\">\\n    <style>\\n        /* CSS Variables and Base Styles */\\n        :root {\\n            /* Light Mode - Primary Theme */\\n            --primary-color: #8E6C55;\\n            --primary-color-light: rgba(142, 108, 85, 0.2);\\n            --primary-color-lighter: rgba(142, 108, 85, 0.1);\\n            --primary-color-rgb: 142, 108, 85;\\n            --accent-color: #E4B78E;\\n            --accent-color-light: rgba(228, 183, 142, 0.5);\\n            --accent-color-rgb: 228, 183, 142;\\n            --text-color: #4A3B35;\\n            --light-text: #8D7A6F;\\n            --bg-color: #FAF7F2;\\n            --card-bg: #FFFFFF;\\n            --border-color: rgba(142, 108, 85, 0.4);\\n            --shadow: 0 5px 15px rgba(93, 64, 55, 0.08);\\n            --shadow-hover: 0 8px 20px rgba(93, 64, 55, 0.12);\\n            --shadow-strong: 0 8px 30px rgba(93, 64, 55, 0.18);\\n            --ink-color: #4A3B35;\\n            --content-bg-alpha: 0.85;\\n            --status-good: #66BB6A;\\n            --status-warning: #FFA726;\\n            --status-danger: #EF5350;\\n\\n            /* Panel Colors - Light */\\n            --body-bg-color: #FBF8F3;\\n            --menu-bar-bg-color: #F2EBE1;\\n            --main-panel-bg-color: #F8F2E9;\\n            --messages-panel-bg-color: #F2F6F9;\\n            --moments-panel-bg-color: #F9F6F2;\\n            --settings-panel-bg-color: #FAF7F0;\\n\\n            /* Message Colors - Light */\\n            --message-conversation-bg: #FFFFFF;\\n            --message-item-bg: #F9F5F0;\\n            --message-sender-color: var(--primary-color);\\n            --message-content-color: var(--text-color);\\n            --message-time-color: var(--light-text);\\n            --message-unread-bg: var(--status-danger);\\n            --message-unread-text: #FFFFFF;\\n            --message-attachment-bg: rgba(228, 183, 142, 0.1);\\n            --message-attachment-border: rgba(142, 108, 85, 0.2);\\n            --message-conv-header-bg: rgba(142, 108, 85, 0.05);\\n            /* --message-list-item-hover-bg: rgba(142, 108, 85, 0.08); /* Removed as per user request */\\n            --clickable-media-desc-hover-bg: rgba(142, 108, 85, 0.2);\\n            \\n            /* Dark Mode Theme */\\n            --dark-primary-color: #DBB48A;\\n            --dark-accent-color: #A98C69;\\n            --dark-text-color: #E8D9C7;\\n            --dark-light-text: #BEA994;\\n            --dark-bg-color: #2A241F;\\n            --dark-card-bg: #352E29;\\n            --dark-border-color: rgba(219, 180, 138, 0.3);\\n            --dark-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\\n            --dark-shadow-hover: 0 8px 25px rgba(0, 0, 0, 0.4);\\n            --dark-panel-bg: #2F2924;\\n            \\n            /* Animation durations */\\n            --transition-quick: 0.2s;\\n            --transition-medium: 0.3s;\\n            --transition-slow: 0.5s;\\n        }\\n\\n        .dark {\\n            --primary-color: var(--dark-primary-color);\\n            --accent-color: var(--dark-accent-color);\\n            --text-color: var(--dark-text-color);\\n            --light-text: var(--dark-light-text);\\n            --bg-color: var(--dark-bg-color);\\n            --card-bg: var(--dark-card-bg);\\n            --border-color: var(--dark-border-color);\\n            --shadow: var(--dark-shadow);\\n            --shadow-hover: var(--dark-shadow-hover);\\n            --ink-color: var(--dark-text-color);\\n            \\n            --body-bg-color: #2A241F;\\n            --menu-bar-bg-color: #352E29;\\n            --main-panel-bg-color: #302A24;\\n            --messages-panel-bg-color: #2E2A24;\\n            --moments-panel-bg-color: #302D26;\\n            --settings-panel-bg-color: #312E29;\\n            \\n            --message-conversation-bg: #3A342F;\\n            --message-item-bg: #3F3935;\\n            --message-sender-color: var(--dark-primary-color);\\n            --message-content-color: var(--dark-text-color);\\n            --message-time-color: var(--dark-light-text);\\n            --message-attachment-bg: rgba(219, 180, 138, 0.05);\\n            --message-attachment-border: rgba(219, 180, 138, 0.2);\\n            --message-conv-header-bg: rgba(219, 180, 138, 0.05);\\n            /* --message-list-item-hover-bg: rgba(219, 180, 138, 0.08); /* Removed as per user request */\\n        }\\n        \\n        * { margin: 0; padding: 0; box-sizing: border-box; }\\n        \\n        body {\\n            background-color: var(--body-bg-color);\\n            min-height: 100vh; color: var(--text-color);\\n            font-family: 'Noto Serif SC', serif; line-height: 1.6; letter-spacing: 0.03em;\\n            overflow-y: auto;\\n            transition: background-color var(--transition-medium) ease, color var(--transition-medium) ease;\\n            position: relative;\\n        }\\n        \\n        body::before {\\n            content: \\\"\\\";\\n            position: fixed;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n            background-image: url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%238e6c55' fill-opacity='0.03'%3E%3Cpath opacity='.5' d='M96 95h4v1h-4v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9zm-1 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\");\\n            pointer-events: none;\\n            z-index: -1;\\n            opacity: 0.5;\\n            transition: opacity var(--transition-medium) ease;\\n        }\\n        \\n        .dark body::before {\\n            opacity: 0.1;\\n            background-image: url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23dbb48a' fill-opacity='0.1'%3E%3Cpath opacity='.5' d='M96 95h4v1h-4v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9zm-1 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\");\\n        }\\n        \\n        .container {\\n            max-width: 1200px; margin: 0 auto; padding: 0 20px 20px 20px !important;\\n            display: flex; flex-direction: column; gap: 0 !important;\\n            min-height: 100vh; position: relative;\\n        }\\n        \\n        .menu-bar {\\n            background-color: var(--menu-bar-bg-color);\\n            border-radius: 12px 12px 0 0; \\n            border: 1px solid var(--border-color); \\n            box-shadow: var(--shadow);\\n            padding: 18px 25px; \\n            display: flex; justify-content: space-between; align-items: center;\\n            position: relative; overflow: hidden; margin-bottom: 0 !important;\\n            transition: background-color var(--transition-medium) ease, \\n                        border-color var(--transition-medium) ease, \\n                        box-shadow var(--transition-medium) ease;\\n        }\\n        \\n        .menu-bar::before { \\n            content: \\\"\\\"; position: absolute; top: 0; left: 0; right: 0; bottom: 0; \\n            background: rgba(255, 255, 255, 0.2); \\n            z-index: 0; \\n            transition: background-color var(--transition-medium) ease;\\n        }\\n        \\n        .dark .menu-bar::before {\\n            background: rgba(0, 0, 0, 0.2);\\n        }\\n        \\n        .logo { \\n            position: relative; z-index: 1; \\n            color: var(--primary-color); \\n            font-size: 30px; font-weight: 900; \\n            text-shadow: 1px 1px 3px rgba(0,0,0,0.1); \\n            font-family: 'Noto Serif SC', serif; \\n            letter-spacing: 3px;\\n            transition: color var(--transition-medium) ease, text-shadow var(--transition-medium) ease;\\n            display: flex;\\n            align-items: center;\\n            animation: logoGlow 3s infinite alternate;\\n        }\\n        \\n        @keyframes logoGlow {\\n            0% {\\n                text-shadow: 1px 1px 3px rgba(0,0,0,0.1);\\n            }\\n            100% {\\n                text-shadow: 0 0 10px rgba(var(--primary-color-rgb, 142, 108, 85), 0.5);\\n            }\\n        }\\n        \\n        .logo::before { \\n            content: \\\"『\\\"; \\n            margin-right: 8px; \\n            opacity: 0.8;\\n            transform: translateY(-1px);\\n            transition: transform var(--transition-medium) ease;\\n        }\\n        \\n        .logo::after { \\n            content: \\\"』\\\"; \\n            margin-left: 8px; \\n            opacity: 0.8;\\n            transform: translateY(-1px);\\n            transition: transform var(--transition-medium) ease;\\n        }\\n        \\n        .logo:hover::before {\\n            transform: translateX(-3px) translateY(-1px);\\n        }\\n        \\n        .logo:hover::after {\\n            transform: translateX(3px) translateY(-1px);\\n        }\\n        \\n        .menu-items { \\n            display: flex; \\n            gap: 12px; \\n            position: relative; \\n            z-index: 1; \\n        }\\n        \\n        .menu-item { \\n            color: var(--text-color); \\n            padding: 14px 28px; \\n            border-radius: 8px; \\n            cursor: pointer; \\n            transition: all var(--transition-medium) ease; \\n            position: relative; \\n            font-weight: 500; \\n            font-family: 'Noto Serif SC', serif; \\n            font-size: 17px; \\n            letter-spacing: 1.5px; \\n            background: rgba(255, 255, 255, 0.2); \\n            border: 1px solid transparent; \\n            box-shadow: 0 2px 5px rgba(0,0,0,0.05); \\n            overflow: hidden; \\n        }\\n        \\n        .dark .menu-item {\\n            background: rgba(255, 255, 255, 0.05);\\n            box-shadow: 0 2px 5px rgba(0,0,0,0.15);\\n        }\\n        \\n        .menu-item:hover { \\n            transform: translateY(-2px); \\n            box-shadow: 0 4px 10px rgba(0,0,0,0.1); \\n            color: var(--primary-color); \\n            background: rgba(255, 255, 255, 0.5); \\n        }\\n        \\n        .dark .menu-item:hover {\\n            background: rgba(255, 255, 255, 0.1);\\n            box-shadow: 0 4px 10px rgba(0,0,0,0.2);\\n        }\\n        \\n        .menu-item.active { \\n            color: white; \\n            font-weight: bold; \\n            background: var(--primary-color);\\n            border-color: var(--accent-color); \\n            box-shadow: 0 3px 8px rgba(142, 108, 85, 0.3);\\n            transform: translateY(-1px);\\n        }\\n        \\n        .dark .menu-item.active {\\n            box-shadow: 0 3px 8px rgba(0, 0, 0, 0.3);\\n        }\\n        \\n        .menu-item::after {\\n            content: '';\\n            position: absolute;\\n            bottom: -2px;\\n            left: 50%;\\n            width: 0;\\n            height: 2px;\\n            background: var(--primary-color);\\n            transition: all var(--transition-medium) ease;\\n            transform: translateX(-50%);\\n            opacity: 0;\\n        }\\n        \\n        .menu-item:hover::after {\\n            width: 70%;\\n            opacity: 1;\\n        }\\n        \\n        .menu-item.active::after {\\n            width: 0;\\n            opacity: 0;\\n        }\\n        \\n        .notification-dot { \\n            display: none; \\n            width: 8px; \\n            height: 8px; \\n            background-color: var(--status-danger); \\n            border-radius: 50%; \\n            position: absolute; \\n            top: 8px; \\n            right: 8px; \\n            box-shadow: 0 0 0 2px var(--card-bg);\\n            animation: pulse 1.5s infinite;\\n        }\\n        \\n        @keyframes pulse {\\n            0% {\\n                transform: scale(1);\\n                box-shadow: 0 0 0 0 rgba(239, 83, 80, 0.7);\\n            }\\n            \\n            70% {\\n                transform: scale(1.2);\\n                box-shadow: 0 0 0 5px rgba(239, 83, 80, 0);\\n            }\\n            \\n            100% {\\n                transform: scale(1);\\n                box-shadow: 0 0 0 0 rgba(239, 83, 80, 0);\\n            }\\n        }\\n        \\n        .content { \\n            flex: 1; \\n            border-radius: 0 0 12px 12px; \\n            box-shadow: var(--shadow); \\n            overflow: hidden; \\n            position: relative; \\n            border: 1px solid var(--border-color); \\n            border-top: none; \\n            margin-top: 0 !important; \\n            padding-top: 0 !important; \\n            display: flex;\\n            transition: box-shadow var(--transition-medium) ease, \\n                        border-color var(--transition-medium) ease;\\n        }\\n        \\n        .panel { \\n            display: none; \\n            padding: 25px 30px; \\n            position: relative; \\n            z-index: 1; \\n            animation: fadeInPanel 0.5s ease-out; \\n            width: 100%; \\n            overflow-y: auto;\\n            transition: background-color var(--transition-medium) ease;\\n        }\\n        \\n        .panel.active { \\n            display: block; \\n        }\\n        \\n        @keyframes fadeInPanel { \\n            from { opacity: 0; transform: translateY(10px); } \\n            to { opacity: 1; transform: translateY(0); } \\n        }\\n        \\n        .panel-title { \\n            font-size: 28px; \\n            margin-bottom: 25px; \\n            text-align: center; \\n            position: relative; \\n            font-family: 'Noto Serif SC', serif; \\n            letter-spacing: 3px; \\n            color: var(--ink-color); \\n            padding: 10px 0; \\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.05);\\n            transition: color var(--transition-medium) ease;\\n        }\\n        \\n        .panel-title::after { \\n            content: ''; \\n            display: block; \\n            width: 80px; \\n            height: 2px; \\n            background: var(--accent-color); \\n            margin: 8px auto 0; \\n            border-radius: 1px;\\n            transition: background-color var(--transition-medium) ease, width var(--transition-medium) ease;\\n        }\\n        \\n        .panel-title:hover::after {\\n            width: 120px;\\n        }\\n\\n        #main { \\n            background-color: var(--main-panel-bg-color);\\n        }\\n        \\n        .story-content-wrapper { \\n            background: rgba(255, 255, 255, 0.9); \\n            border: 1px solid var(--border-color); \\n            border-radius: 10px; \\n            padding: 25px; \\n            margin-bottom: 25px; \\n            box-shadow: 0 3px 10px rgba(0,0,0,0.07);\\n            transition: background-color var(--transition-medium) ease, \\n                        border-color var(--transition-medium) ease, \\n                        box-shadow var(--transition-medium) ease;\\n            position: relative;\\n            overflow: hidden;\\n        }\\n        \\n        .dark .story-content-wrapper {\\n            background: rgba(42, 36, 31, 0.7);\\n            box-shadow: 0 3px 10px rgba(0,0,0,0.15);\\n        }\\n        \\n        .story-content-wrapper::before {\\n            content: '';\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            right: 0;\\n            height: 3px;\\n            background: linear-gradient(90deg, transparent, var(--primary-color), transparent);\\n            transform: translateX(-100%);\\n            animation: slideBorder 4s infinite ease-in-out;\\n        }\\n        \\n        @keyframes slideBorder {\\n            0% { transform: translateX(-100%); }\\n            50% { transform: translateX(100%); }\\n            100% { transform: translateX(-100%); }\\n        }\\n        \\n        .story-content p { \\n            margin-bottom: 18px; \\n            line-height: 1.9; \\n            color: var(--text-color); \\n            text-indent: 2em; \\n            letter-spacing: 0.05em; \\n            white-space: pre-wrap;\\n            transition: color var(--transition-medium) ease;\\n        }\\n        \\n        .player-status-bar { \\n            display: flex; \\n            justify-content: space-around; \\n            padding: 15px 20px; \\n            margin-bottom: 25px; \\n            background: rgba(228, 183, 142, 0.15); \\n            border-radius: 8px; \\n            border: 1px solid var(--border-color); \\n            font-size: 15px; \\n            color: var(--ink-color);\\n            transition: background-color var(--transition-medium) ease, \\n                        border-color var(--transition-medium) ease, \\n                        color var(--transition-medium) ease;\\n            backdrop-filter: blur(5px);\\n            box-shadow: 0 3px 10px rgba(0,0,0,0.05);\\n        }\\n        \\n        .dark .player-status-bar {\\n            background: rgba(219, 180, 138, 0.08);\\n            box-shadow: 0 3px 10px rgba(0,0,0,0.12);\\n        }\\n        \\n        .status-item-display { \\n            display: flex; \\n            align-items: center; \\n            gap: 8px;\\n            transition: transform var(--transition-medium) ease;\\n            padding: 5px 10px;\\n            border-radius: 5px;\\n        }\\n        \\n        .status-item-display:hover {\\n            transform: translateY(-2px);\\n            background: rgba(255, 255, 255, 0.3);\\n        }\\n        \\n        .dark .status-item-display:hover {\\n            background: rgba(255, 255, 255, 0.08);\\n        }\\n        \\n        .status-icon-display { \\n            font-size: 18px; \\n            color: var(--primary-color);\\n            transition: color var(--transition-medium) ease, transform var(--transition-medium) ease;\\n        }\\n        \\n        .status-item-display:hover .status-icon-display {\\n            transform: scale(1.2);\\n        }\\n        \\n        .player-choices { \\n            margin-top: 20px; \\n        }\\n        \\n        .choice-header { \\n            font-size: 18px; \\n            color: var(--primary-color); \\n            font-weight: 700; \\n            margin-bottom: 15px; \\n            text-align: center; \\n            letter-spacing: 1.5px;\\n            transition: color var(--transition-medium) ease;\\n            position: relative;\\n            display: inline-block;\\n            left: 50%;\\n            transform: translateX(-50%);\\n        }\\n        \\n        .choice-header::after {\\n            content: '';\\n            position: absolute;\\n            bottom: -5px;\\n            left: 0;\\n            width: 100%;\\n            height: 1px;\\n            background: linear-gradient(90deg, transparent, var(--primary-color), transparent);\\n        }\\n        \\n        .choice-option { \\n            padding: 15px 20px; \\n            background: rgba(255, 255, 255, 0.8); \\n            border: 1px solid var(--border-color); \\n            border-radius: 8px; \\n            box-shadow: 0 2px 6px rgba(0,0,0,0.06); \\n            cursor: pointer; \\n            transition: all var(--transition-quick) ease; \\n            margin-bottom: 12px; \\n            color: var(--text-color);\\n            position: relative;\\n            overflow: hidden;\\n        }\\n        \\n        .dark .choice-option {\\n            background: rgba(53, 46, 41, 0.8);\\n            box-shadow: 0 2px 6px rgba(0,0,0,0.12);\\n        }\\n        \\n        .choice-option::before {\\n            content: '';\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 4px;\\n            height: 100%;\\n            background: var(--primary-color);\\n            opacity: 0.5;\\n            transition: all var(--transition-quick) ease;\\n        }\\n        \\n        .choice-option:hover { \\n            transform: translateX(6px) translateY(-2px); \\n            border-color: var(--primary-color); \\n            box-shadow: var(--shadow-hover);\\n            background: rgba(255, 255, 255, 0.95);\\n        }\\n        \\n        .dark .choice-option:hover {\\n            background: rgba(53, 46, 41, 0.95);\\n        }\\n        \\n        .choice-option:hover::before {\\n            width: 8px;\\n            opacity: 1;\\n        }\\n        \\n        .choice-option::after {\\n            content: '❯';\\n            position: absolute;\\n            right: 15px;\\n            top: 50%;\\n            transform: translateY(-50%);\\n            color: var(--primary-color);\\n            opacity: 0;\\n            transition: all var(--transition-quick) ease;\\n        }\\n        \\n        .choice-option:hover::after {\\n            opacity: 1;\\n            right: 20px;\\n        }\\n        \\n        .choice-text { \\n            font-size: 16px; \\n            line-height: 1.7;\\n            transition: color var(--transition-medium) ease;\\n            padding-right: 20px;\\n        }\\n\\n        /* Messages Panel Styles */\\n        #messages { \\n            background-color: var(--messages-panel-bg-color); \\n            display: flex; \\n            flex-direction: column; \\n        }\\n        \\n        .messages-view-container { \\n            flex-grow: 1; \\n            overflow-y: auto; \\n            padding: 0px; \\n        }\\n        \\n        #conversation-list-view { \\n            display: block; \\n        }\\n        \\n        /* Search bar in conversation list */\\n        .messages-search-bar {\\n            position: sticky;\\n            top: 0;\\n            padding: 10px 15px;\\n            background-color: var(--message-conversation-bg);\\n            border-bottom: 1px solid var(--border-color);\\n            z-index: 5;\\n            transition: background-color var(--transition-medium) ease;\\n        }\\n        \\n        .messages-search-input {\\n            width: 100%;\\n            padding: 10px 15px 10px 40px;\\n            border-radius: 20px;\\n            border: 1px solid var(--border-color);\\n            background-color: var(--card-bg);\\n            font-size: 14px;\\n            color: var(--text-color);\\n            transition: all var(--transition-quick) ease;\\n            font-family: inherit;\\n        }\\n        \\n        .messages-search-input:focus {\\n            outline: none;\\n            border-color: var(--primary-color);\\n            box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb), 0.2);\\n        }\\n        \\n        .messages-search-icon {\\n            position: absolute;\\n            left: 25px;\\n            top: 19px;\\n            color: var(--light-text);\\n            font-size: 16px;\\n        }\\n        \\n        .conversation-list-item { \\n            display: flex; \\n            align-items: center; \\n            padding: 12px 15px; \\n            border-bottom: 1px solid var(--border-color); \\n            cursor: pointer; \\n            transition: all var(--transition-medium) ease; \\n            background-color: var(--message-conversation-bg); \\n            position: relative;\\n            overflow: hidden;\\n            gap: 12px;\\n        }\\n        \\n        .conversation-list-item::before {\\n            content: '';\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 3px;\\n            height: 100%;\\n            background: var(--primary-color);\\n            opacity: 0;\\n            transition: all var(--transition-quick) ease;\\n        }\\n        \\n        .conversation-list-item:hover { \\n            /* background-color: var(--message-list-item-hover-bg); /* REMOVED: Darker background on hover */\\n            transform: translateX(3px);\\n        }\\n        \\n        .conversation-list-item:hover::before {\\n            opacity: 1;\\n        }\\n        \\n        .conversation-list-item:active {\\n            transform: translateX(5px);\\n            /* background-color: var(--message-list-item-hover-bg); /* REMOVED: Darker background on active (consistent with hover) */\\n        }\\n        \\n        .conversation-list-item:last-child { \\n            border-bottom: none; \\n        }\\n        \\n        .conversation-avatar {\\n            width: 45px;\\n            height: 45px;\\n            border-radius: 50%;\\n            background-color: var(--accent-color-light);\\n            color: var(--primary-color);\\n            display: flex;\\n            align-items: center;\\n            justify-content: center;\\n            font-weight: bold;\\n            font-size: 18px;\\n            flex-shrink: 0;\\n            position: relative;\\n            box-shadow: 0 2px 5px rgba(0,0,0,0.1);\\n            border: 1px solid rgba(var(--primary-color-rgb), 0.1);\\n            transition: all var(--transition-medium) ease;\\n        }\\n        \\n        .conversation-online-status {\\n            position: absolute;\\n            bottom: 0;\\n            right: 0;\\n            width: 12px;\\n            height: 12px;\\n            border-radius: 50%;\\n            background-color: var(--status-good);\\n            border: 2px solid var(--card-bg);\\n            display: none;\\n        }\\n        \\n        .conversation-online-status.online {\\n            display: block;\\n        }\\n        \\n        .conversation-list-details { \\n            flex-grow: 1; \\n        }\\n        \\n        .conversation-list-title { \\n            font-weight: bold;\\n            color: var(--primary-color);\\n            font-size: 16px;\\n            display: block;\\n            margin-bottom: 4px;\\n            transition: color var(--transition-medium) ease;\\n            display: flex;\\n            align-items: center;\\n            gap: 5px;\\n        }\\n        \\n        .conversation-list-verified {\\n            color: var(--status-good);\\n            font-size: 12px;\\n        }\\n        \\n        .conversation-list-preview { \\n            font-size: 14px; \\n            color: var(--light-text); \\n            display: -webkit-box; \\n            -webkit-line-clamp: 1; \\n            -webkit-box-orient: vertical; \\n            overflow: hidden; \\n            text-overflow: ellipsis; \\n            margin-bottom: 3px;\\n            transition: color var(--transition-medium) ease;\\n        }\\n        \\n        .conversation-list-meta { \\n            display: flex; \\n            justify-content: space-between; \\n            align-items: center; \\n        }\\n        \\n        .conversation-list-time { \\n            font-size: 12px; \\n            color: var(--light-text);\\n            transition: color var(--transition-medium) ease;\\n        }\\n        \\n        .conversation-list-unread { \\n            background-color: var(--message-unread-bg); \\n            color: var(--message-unread-text); \\n            font-size: 11px; \\n            font-weight: bold; \\n            padding: 2px 7px; \\n            border-radius: 10px; \\n            margin-left: 8px;\\n            transition: all var(--transition-quick) ease;\\n            animation: pulseUnread 2s infinite;\\n            box-shadow: 0 2px 5px rgba(239, 83, 80, 0.3);\\n        }\\n        \\n        @keyframes pulseUnread {\\n            0% { transform: scale(1); box-shadow: 0 2px 5px rgba(239, 83, 80, 0.3); }\\n            50% { transform: scale(1.1); box-shadow: 0 2px 8px rgba(239, 83, 80, 0.5); }\\n            100% { transform: scale(1); box-shadow: 0 2px 5px rgba(239, 83, 80, 0.3); }\\n        }\\n        \\n        .conversation-list-status {\\n            display: flex;\\n            align-items: center;\\n            flex-direction: column;\\n            padding-left: 5px;\\n        }\\n\\n        #detailed-message-view { \\n            display: none; \\n            flex-direction: column; \\n            height: 100%; \\n        }\\n        \\n        .detailed-view-header { \\n            display: flex; \\n            align-items: center; \\n            padding: 12px 15px; \\n            background-color: var(--message-conv-header-bg); \\n            border-bottom: 1px solid var(--border-color); \\n            flex-shrink: 0;\\n            transition: all var(--transition-medium) ease;\\n            backdrop-filter: blur(10px);\\n            position: sticky;\\n            top: 0;\\n            z-index: 5;\\n        }\\n        \\n        #back-to-list-btn { \\n            background: none; \\n            border: none; \\n            font-size: 18px; \\n            color: var(--primary-color); \\n            cursor: pointer; \\n            margin-right: 15px; \\n            padding: 8px;\\n            transition: all var(--transition-quick) ease;\\n            border-radius: 50%;\\n            display: flex;\\n            align-items: center;\\n            justify-content: center;\\n            width: 36px;\\n            height: 36px;\\n            background-color: rgba(var(--primary-color-rgb), 0.1);\\n        }\\n        \\n        #back-to-list-btn:hover { \\n            color: #fff;\\n            transform: translateX(-3px);\\n            background-color: var(--primary-color);\\n        }\\n        \\n        .detailed-view-avatar {\\n            width: 42px;\\n            height: 42px;\\n            border-radius: 50%;\\n            background-color: var(--accent-color-light);\\n            display: flex;\\n            align-items: center;\\n            justify-content: center;\\n            font-weight: bold;\\n            font-size: 18px;\\n            margin-right: 10px;\\n            color: var(--primary-color);\\n            flex-shrink: 0;\\n            position: relative;\\n            box-shadow: 0 2px 5px rgba(0,0,0,0.1);\\n            border: 1px solid rgba(var(--primary-color-rgb), 0.1);\\n        }\\n        \\n        .detailed-view-user-info {\\n            display: flex;\\n            flex-direction: column;\\n            flex-grow: 1;\\n        }\\n        \\n        #detailed-view-title { \\n            font-weight: bold; \\n            color: var(--primary-color); \\n            font-size: 16px; \\n            transition: color var(--transition-medium) ease;\\n            display: flex;\\n            align-items: center;\\n            gap: 5px;\\n        }\\n        \\n        .detailed-view-status {\\n            font-size: 12px;\\n            color: var(--light-text);\\n            transition: color var(--transition-medium) ease;\\n        }\\n        \\n        .detailed-view-typing {\\n            display: flex;\\n            align-items: center;\\n            gap: 3px;\\n            opacity: 0;\\n            transition: opacity var(--transition-medium) ease;\\n            height: 16px;\\n        }\\n        \\n        .detailed-view-typing.active {\\n            opacity: 1;\\n        }\\n        \\n        .typing-dot {\\n            width: 4px;\\n            height: 4px;\\n            background-color: var(--status-good);\\n            border-radius: 50%;\\n            animation: typingAnimation 1.5s infinite;\\n        }\\n        \\n        .typing-dot:nth-child(2) {\\n            animation-delay: 0.2s;\\n        }\\n        \\n        .typing-dot:nth-child(3) {\\n            animation-delay: 0.4s;\\n        }\\n        \\n        @keyframes typingAnimation {\\n            0%, 60%, 100% { transform: translateY(0); }\\n            30% { transform: translateY(-4px); }\\n        }\\n        \\n        .detailed-view-actions {\\n            display: flex;\\n            gap: 8px;\\n        }\\n        \\n        .detailed-view-action {\\n            width: 32px;\\n            height: 32px;\\n            border-radius: 50%;\\n            display: flex;\\n            align-items: center;\\n            justify-content: center;\\n            color: var(--primary-color);\\n            background-color: rgba(var(--primary-color-rgb), 0.1);\\n            cursor: pointer;\\n            transition: all var(--transition-quick) ease;\\n        }\\n        \\n        .detailed-view-action:hover {\\n            color: #fff;\\n            background-color: var(--primary-color);\\n            transform: translateY(-2px);\\n        }\\n        \\n        .detailed-messages-area { \\n            flex-grow: 1; \\n            padding: 15px; \\n            overflow-y: auto; \\n            background-color: var(--card-bg); \\n            display: flex; \\n            flex-direction: column; \\n            gap: 8px;\\n            transition: background-color var(--transition-medium) ease;\\n            background-image: url(\\\"data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath opacity='0.05' d='M1 1h14v14H1V1z' stroke='%238E6C55' stroke-width='0.5'/%3E%3C/svg%3E\\\");\\n            background-size: 20px 20px;\\n        }\\n        \\n        .dark .detailed-messages-area {\\n            background-image: url(\\\"data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath opacity='0.05' d='M1 1h14v14H1V1z' stroke='%23DBB48A' stroke-width='0.5'/%3E%3C/svg%3E\\\");\\n        }\\n        \\n        .message-date-separator {\\n            text-align: center;\\n            margin: 10px 0;\\n            position: relative;\\n            font-size: 12px;\\n            color: var(--light-text);\\n            z-index: 1;\\n        }\\n        \\n        .message-date-separator::before {\\n            content: '';\\n            position: absolute;\\n            top: 50%;\\n            left: 0;\\n            width: 100%;\\n            height: 1px;\\n            background-color: var(--border-color);\\n            z-index: -1;\\n        }\\n        \\n        .message-date-text {\\n            background-color: var(--card-bg);\\n            padding: 0 10px;\\n            border-radius: 10px;\\n            display: inline-block;\\n            box-shadow: 0 1px 3px rgba(0,0,0,0.05);\\n            border: 1px solid var(--border-color);\\n        }\\n        \\n        .message-entry { \\n            max-width: 80%;\\n            border-radius: 18px; \\n            padding: 8px 12px;\\n            position: relative;\\n            align-self: flex-start;\\n            animation: fadeInMessage var(--transition-medium) forwards;\\n            transition: all var(--transition-medium) ease;\\n        }\\n        \\n        @keyframes fadeInMessage {\\n            from { \\n                opacity: 0; \\n                transform: translateY(10px);\\n            }\\n            to { \\n                opacity: 1; \\n                transform: translateY(0);\\n            }\\n        }\\n        \\n        .message-entry.sender-message { /* This will be the style for all messages now */\\n            background-color: rgba(var(--primary-color-rgb), 0.1);\\n            border-top-left-radius: 4px;\\n            margin-left: 5px;\\n            box-shadow: 0 2px 5px rgba(0,0,0,0.05);\\n        }\\n        \\n        .message-entry.sender-message::before {\\n            content: '';\\n            position: absolute;\\n            bottom: 0;\\n            left: -10px;\\n            width: 20px;\\n            height: 20px;\\n            border-radius: 0 0 50%;\\n            background-color: rgba(var(--primary-color-rgb), 0.1);\\n            z-index: -1;\\n        }\\n        \\n        .message-entry.system-message {\\n            align-self: center;\\n            background-color: rgba(255, 255, 255, 0.5);\\n            border: 1px dashed var(--border-color);\\n            max-width: 90%;\\n            font-style: italic;\\n            font-size: 13px;\\n            color: var(--light-text);\\n            box-shadow: 0 1px 3px rgba(0,0,0,0.03);\\n        }\\n        \\n        .dark .message-entry.system-message {\\n            background-color: rgba(255, 255, 255, 0.1);\\n        }\\n        \\n        /* .message-entry.self-message and its ::before pseudo-element are no longer needed as all messages will be sender-message */\\n        \\n        .message-entry:hover {\\n            transform: translateY(-2px);\\n        }\\n        \\n        .message-entry-header { \\n            display: flex; \\n            justify-content: space-between; \\n            align-items: baseline; \\n            margin-bottom: 5px;\\n            position: relative;\\n        }\\n                \\n        .message-entry-header::after {\\n            content: '';\\n            position: absolute;\\n            bottom: -3px;\\n            left: 0;\\n            width: 100%;\\n            height: 1px;\\n            background: linear-gradient(90deg, var(--primary-color-lighter), transparent);\\n            opacity: 0.5;\\n        }\\n        \\n        .message-sender-wrapper {\\n            display: flex;\\n            align-items: center;\\n            gap: 5px;\\n        }\\n        \\n        .message-sender { \\n            font-weight: bold; \\n            color: var(--message-sender-color); \\n            font-size: 13px;\\n            transition: color var(--transition-medium) ease;\\n        }\\n        \\n        .message-timestamp { \\n            font-size: 11px; \\n            color: var(--message-time-color);\\n            transition: color var(--transition-medium) ease;\\n        }\\n        \\n        .message-content-body { \\n            line-height: 1.6; \\n            color: var(--message-content-color); \\n            white-space: pre-wrap; \\n            font-size: 14px;\\n            transition: color var(--transition-medium) ease;\\n            word-break: break-word;\\n        }\\n        \\n        .message-attachments { \\n            margin-top: 6px; \\n            padding-top: 6px; \\n            border-top: 1px dashed var(--message-attachment-border);\\n            transition: border-color var(--transition-medium) ease;\\n        }\\n        \\n        .message-status { /* This style is kept for potential future use, but won't be applied to self-messages now */\\n            display: flex;\\n            justify-content: flex-end;\\n            font-size: 11px;\\n            color: var(--light-text);\\n            margin-top: 2px;\\n        }\\n                \\n        .message-status i {\\n            margin-left: 3px;\\n        }\\n        \\n        .chat-input-mock {\\n            display: flex;\\n            align-items: center;\\n            padding: 10px 15px;\\n            background-color: var(--card-bg);\\n            border-top: 1px solid var(--border-color);\\n            position: sticky;\\n            bottom: 0;\\n            transition: all var(--transition-medium) ease;\\n        }\\n        \\n        .chat-input-field {\\n            flex-grow: 1;\\n            padding: 10px 15px;\\n            border-radius: 20px;\\n            border: 1px solid var(--border-color);\\n            background-color: var(--message-conversation-bg);\\n            color: var(--light-text);\\n            font-size: 14px;\\n            font-style: italic;\\n            transition: all var(--transition-quick) ease;\\n        }\\n        \\n        .chat-input-actions {\\n            display: flex;\\n            gap: 10px;\\n            margin-left: 10px;\\n        }\\n        \\n        .chat-input-action {\\n            width: 36px;\\n            height: 36px;\\n            border-radius: 50%;\\n            display: flex;\\n            align-items: center;\\n            justify-content: center;\\n            background-color: var(--primary-color);\\n            color: white;\\n            cursor: pointer;\\n            transition: all var(--transition-quick) ease;\\n            box-shadow: 0 2px 5px rgba(var(--primary-color-rgb), 0.3);\\n        }\\n        \\n        .chat-input-action:hover {\\n            transform: translateY(-2px);\\n            box-shadow: 0 4px 8px rgba(var(--primary-color-rgb), 0.4);\\n        }\\n        \\n        .message-attachment-item, .moment-media-text-item { /* Shared style for clickable media */\\n            background-color: var(--message-attachment-bg); \\n            border: 1px solid var(--message-attachment-border);\\n            color: var(--primary-color); \\n            padding: 8px 12px; \\n            border-radius: 6px; \\n            font-size: 13px;\\n            margin-bottom: 6px; \\n            display: flex; \\n            align-items: center; \\n            gap: 6px; \\n            cursor: pointer;\\n            transition: all var(--transition-quick) ease;\\n            position: relative;\\n            overflow: hidden;\\n        }\\n        \\n        .message-attachment-item::before, .moment-media-text-item::before {\\n            content: '';\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n            background: var(--primary-color);\\n            opacity: 0;\\n            transition: opacity var(--transition-quick) ease;\\n            z-index: 0;\\n        }\\n        \\n        .message-attachment-item:hover, .moment-media-text-item:hover { \\n            background-color: var(--clickable-media-desc-hover-bg);\\n            transform: translateY(-2px);\\n            box-shadow: var(--shadow);\\n            border-color: var(--primary-color);\\n        }\\n        \\n        .message-attachment-item i, .moment-media-text-item i { \\n            color: var(--message-sender-color); \\n            margin-right: 5px;\\n            position: relative;\\n            z-index: 1;\\n            transition: transform var(--transition-quick) ease;\\n        }\\n        \\n        .message-attachment-item:hover i, .moment-media-text-item:hover i {\\n            transform: scale(1.2);\\n        }\\n        \\n        .message-attachment-item span, .moment-media-text-item span {\\n            position: relative;\\n            z-index: 1;\\n        }\\n\\n        #moments { \\n            background-color: var(--moments-panel-bg-color); \\n        }\\n        \\n        /* Moments pagination controls */\\n        .moments-pagination {\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n            gap: 20px;\\n            margin-bottom: 20px;\\n            padding: 10px;\\n            background: rgba(255, 255, 255, 0.5);\\n            border-radius: 10px;\\n            border: 1px solid var(--border-color);\\n            box-shadow: var(--shadow);\\n            transition: background-color var(--transition-medium) ease;\\n        }\\n        \\n        .dark .moments-pagination {\\n            background: rgba(42, 36, 31, 0.5);\\n        }\\n        \\n        .moment-nav-button {\\n            padding: 8px 16px;\\n            background-color: var(--primary-color);\\n            color: white;\\n            border: none;\\n            border-radius: 5px;\\n            cursor: pointer;\\n            font-family: inherit;\\n            font-weight: 500;\\n            display: flex;\\n            align-items: center;\\n            gap: 8px;\\n            transition: all var(--transition-quick) ease;\\n            box-shadow: 0 2px 5px rgba(var(--primary-color-rgb), 0.3);\\n        }\\n        \\n        .moment-nav-button:hover:not(:disabled) {\\n            transform: translateY(-2px);\\n            box-shadow: 0 4px 8px rgba(var(--primary-color-rgb), 0.4);\\n        }\\n        \\n        .moment-nav-button:disabled {\\n            background-color: rgba(var(--primary-color-rgb), 0.3);\\n            cursor: not-allowed;\\n            box-shadow: none;\\n        }\\n        \\n        #moment-counter {\\n            font-size: 14px;\\n            font-weight: bold;\\n            color: var(--primary-color);\\n            min-width: 60px;\\n            text-align: center;\\n        }\\n        \\n        .moments-container { \\n            display: flex; \\n            flex-direction: column; \\n            gap: 25px; \\n        }\\n        \\n        .moment-post { \\n            background: rgba(255, 255, 255, 0.9); \\n            border: 1px solid var(--border-color); \\n            border-radius: 10px; \\n            overflow: hidden; \\n            box-shadow: var(--shadow);\\n            transition: all var(--transition-medium) ease;\\n            display: none; /* Hide all posts by default */\\n        }\\n        \\n        .moment-post.active {\\n            display: block; /* Only show active post */\\n            animation: fadeInPost 0.5s ease;\\n        }\\n        \\n        @keyframes fadeInPost {\\n            from { opacity: 0; transform: translateY(10px); }\\n            to { opacity: 1; transform: translateY(0); }\\n        }\\n        \\n        .dark .moment-post {\\n            background: rgba(42, 36, 31, 0.8);\\n        }\\n        \\n        .moment-post:hover {\\n            transform: translateY(-3px);\\n            box-shadow: var(--shadow-hover);\\n        }\\n        \\n        .moment-post-header { \\n            display: flex; \\n            align-items: center; \\n            padding: 18px; \\n            border-bottom: 1px solid var(--border-color); \\n            background: rgba(228, 183, 142, 0.1);\\n            transition: background-color var(--transition-medium) ease, \\n                        border-color var(--transition-medium) ease;\\n        }\\n        \\n        .dark .moment-post-header {\\n            background: rgba(219, 180, 138, 0.05);\\n        }\\n        \\n        .moment-avatar { \\n            width: 48px; \\n            height: 48px; \\n            border-radius: 50%; \\n            margin-right: 15px; \\n            border: 2px solid var(--accent-color); \\n            background-color: var(--accent-color); \\n            display: flex; \\n            align-items: center; \\n            justify-content: center; \\n            font-size: 20px; \\n            font-weight: bold; \\n            color: var(--primary-color); \\n            overflow: hidden; \\n            object-fit: cover; \\n            line-height: 1;\\n            transition: all var(--transition-medium) ease;\\n            box-shadow: 0 2px 8px rgba(0,0,0,0.1);\\n        }\\n        \\n        .moment-post-header:hover .moment-avatar {\\n            transform: scale(1.05);\\n            box-shadow: 0 3px 10px rgba(0,0,0,0.15);\\n        }\\n        \\n        .moment-post-info { \\n            flex: 1; \\n        }\\n        \\n        .moment-author { \\n            font-weight: bold; \\n            color: var(--primary-color); \\n            font-size: 17px; \\n            margin-bottom: 5px;\\n            transition: color var(--transition-medium) ease;\\n        }\\n        \\n        .moment-timestamp { \\n            color: var(--light-text); \\n            font-size: 13px;\\n            transition: color var(--transition-medium) ease;\\n        }\\n        \\n        .moment-post-body { \\n            padding: 20px; \\n        }\\n        \\n        .moment-post-title { \\n            font-size: 19px; \\n            font-weight: bold; \\n            color: var(--primary-color); \\n            margin-bottom: 15px; \\n            text-align: left; \\n            padding-bottom: 10px; \\n            border-bottom: 1px dashed var(--border-color);\\n            transition: color var(--transition-medium) ease, \\n                        border-color var(--transition-medium) ease;\\n        }\\n        \\n        .moment-post-text { \\n            margin-bottom: 20px; \\n            line-height: 1.8; \\n            color: var(--ink-color); \\n            white-space: pre-wrap;\\n            transition: color var(--transition-medium) ease;\\n        }\\n        \\n        .moment-tags { \\n            display: flex; \\n            flex-wrap: wrap; \\n            gap: 8px; \\n            margin-bottom: 15px; \\n        }\\n        \\n        .moment-tag { \\n            background-color: rgba(142, 108, 85, 0.08); \\n            color: var(--primary-color); \\n            padding: 4px 10px; \\n            border-radius: 15px; \\n            font-size: 13px;\\n            transition: all var(--transition-quick) ease;\\n            cursor: default;\\n            border: 1px solid transparent;\\n        }\\n        \\n        .dark .moment-tag {\\n            background-color: rgba(219, 180, 138, 0.1);\\n        }\\n        \\n        .moment-tag:hover {\\n            background-color: rgba(142, 108, 85, 0.15);\\n            transform: translateY(-2px);\\n            border-color: var(--primary-color-lighter);\\n        }\\n        \\n        .dark .moment-tag:hover {\\n            background-color: rgba(219, 180, 138, 0.2);\\n        }\\n        \\n        .moment-media-content { \\n            display: block; \\n            margin-top: 15px; \\n            padding-top: 10px; \\n            border-top: 1px solid var(--border-color);\\n            transition: border-color var(--transition-medium) ease;\\n        }\\n        \\n        .moment-media-text-grid { \\n            display: grid; \\n            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr)); \\n            gap: 10px; \\n        }\\n        \\n        .moment-actions { \\n            display: flex; \\n            justify-content: space-around; \\n            padding: 12px 0; \\n            border-top: 1px solid var(--border-color); \\n            background: rgba(245, 245, 245, 0.7);\\n            transition: background-color var(--transition-medium) ease, \\n                        border-color var(--transition-medium) ease;\\n        }\\n        \\n        .dark .moment-actions {\\n            background: rgba(42, 36, 31, 0.5);\\n        }\\n        \\n        .moment-action { \\n            display: flex; \\n            align-items: center; \\n            gap: 6px; \\n            color: var(--light-text); \\n            cursor: pointer; \\n            transition: all var(--transition-quick) ease; \\n            font-size: 14px;\\n            padding: 6px 12px;\\n            border-radius: 20px;\\n        }\\n        \\n        .moment-action:hover {\\n            color: var(--primary-color);\\n            background: rgba(255, 255, 255, 0.3);\\n            transform: translateY(-2px);\\n        }\\n        \\n        .dark .moment-action:hover {\\n            background: rgba(255, 255, 255, 0.1);\\n        }\\n        \\n        .moment-action.liked {\\n            color: var(--primary-color);\\n        }\\n        \\n        .moment-action i {\\n            transition: transform var(--transition-quick) ease;\\n        }\\n        \\n        .moment-action:hover i {\\n            transform: scale(1.2);\\n        }\\n        \\n        .moment-comments-section { \\n            padding: 15px; \\n            background: rgba(255,255,255,0.8); \\n            border-top: 1px solid var(--border-color);\\n            transition: background-color var(--transition-medium) ease, \\n                        border-color var(--transition-medium) ease;\\n        }\\n        \\n        .dark .moment-comments-section {\\n            background: rgba(42, 36, 31, 0.6);\\n        }\\n        \\n        .moment-comment { \\n            margin-bottom:10px; \\n            padding-bottom:10px; \\n            border-bottom: 1px dashed rgba(142, 108, 85, 0.2); \\n            font-size: 14px;\\n            transition: border-color var(--transition-medium) ease;\\n        }\\n        \\n        .dark .moment-comment {\\n            border-bottom-color: rgba(219, 180, 138, 0.2);\\n        }\\n        \\n        .comment-author-name {\\n            font-weight: bold;\\n            color: var(--primary-color);\\n            margin-right: 5px;\\n            transition: color var(--transition-medium) ease;\\n        }\\n        \\n        .comment-text {\\n            color: var(--text-color);\\n            transition: color var(--transition-medium) ease;\\n        }\\n\\n        #settings { \\n            background-color: var(--settings-panel-bg-color); \\n        }\\n        \\n        .settings-options { \\n            display: flex; \\n            flex-direction: column; \\n            gap: 25px; \\n            background: rgba(255, 255, 255, 0.9); \\n            padding: 30px; \\n            border-radius: 10px; \\n            border: 1px solid var(--border-color); \\n            box-shadow: 0 3px 10px rgba(0,0,0,0.07);\\n            transition: background-color var(--transition-medium) ease, \\n                        border-color var(--transition-medium) ease,\\n                        box-shadow var(--transition-medium) ease;\\n        }\\n        \\n        .dark .settings-options {\\n            background: rgba(42, 36, 31, 0.8);\\n            box-shadow: 0 3px 10px rgba(0,0,0,0.15);\\n        }\\n        \\n        .settings-option { \\n            display: flex; \\n            align-items: center; \\n            gap: 15px;\\n            transition: transform var(--transition-medium) ease;\\n            padding: 10px;\\n            border-radius: 8px;\\n        }\\n        \\n        .settings-option:hover {\\n            background: rgba(255, 255, 255, 0.5);\\n            transform: translateX(3px);\\n        }\\n        \\n        .dark .settings-option:hover {\\n            background: rgba(255, 255, 255, 0.05);\\n        }\\n        \\n        .settings-option label { \\n            font-weight: 500; \\n            color: var(--primary-color); \\n            width: 120px; \\n            font-size: 16px;\\n            transition: color var(--transition-medium) ease;\\n        }\\n        \\n        .settings-option input[type=\\\"range\\\"], \\n        .settings-option input[type=\\\"color\\\"], \\n        .settings-option select { \\n            flex-grow: 1; \\n            padding: 8px 12px; \\n            border: 1px solid var(--border-color); \\n            border-radius: 6px; \\n            background-color: #fff; \\n            font-family: 'Noto Serif SC', serif; \\n            color: var(--text-color);\\n            transition: all var(--transition-quick) ease;\\n        }\\n        \\n        .dark .settings-option input[type=\\\"range\\\"], \\n        .dark .settings-option input[type=\\\"color\\\"], \\n        .dark .settings-option select {\\n            background-color: #3A342F;\\n            border-color: var(--dark-border-color);\\n            color: var(--dark-text-color);\\n        }\\n        \\n        .settings-option input[type=\\\"range\\\"]:hover, \\n        .settings-option input[type=\\\"color\\\"]:hover, \\n        .settings-option select:hover {\\n            border-color: var(--primary-color);\\n        }\\n        \\n        .settings-option input[type=\\\"range\\\"]:focus, \\n        .settings-option input[type=\\\"color\\\"]:focus, \\n        .settings-option select:focus {\\n            outline: none;\\n            border-color: var(--primary-color);\\n            box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb, 142, 108, 85), 0.2);\\n        }\\n        \\n        .reset-button { \\n            background-color: var(--primary-color); \\n            color: white; \\n            border: none; \\n            padding: 12px 25px; \\n            border-radius: 6px; \\n            cursor: pointer; \\n            transition: all var(--transition-quick) ease; \\n            font-size: 16px; \\n            font-family: 'Noto Serif SC', serif; \\n            align-self: center; \\n            margin-top: 15px; \\n            letter-spacing: 1px;\\n            position: relative;\\n            overflow: hidden;\\n            box-shadow: 0 3px 8px rgba(142, 108, 85, 0.2);\\n        }\\n        \\n        .reset-button::before {\\n            content: '';\\n            position: absolute;\\n            top: 0;\\n            left: -100%;\\n            width: 100%;\\n            height: 100%;\\n            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\\n            transition: left 0.5s ease;\\n        }\\n        \\n        .reset-button:hover {\\n            transform: translateY(-3px);\\n            box-shadow: 0 5px 15px rgba(142, 108, 85, 0.3);\\n        }\\n        \\n        .reset-button:hover::before {\\n            left: 100%;\\n        }\\n        \\n        .reset-button:active {\\n            transform: translateY(-1px);\\n        }\\n\\n        .media-viewer { \\n            display: none; \\n            position: fixed; \\n            top: 0; \\n            left: 0; \\n            width: 100%; \\n            height: 100%; \\n            background: rgba(0,0,0,0.85); \\n            z-index: 9999; \\n            justify-content: center; \\n            align-items: center; \\n            padding: 20px;\\n            opacity: 0;\\n            transition: opacity var(--transition-medium) ease;\\n            backdrop-filter: blur(5px);\\n        }\\n        \\n        .media-viewer.active { \\n            display: flex;\\n            animation: fadeIn var(--transition-medium) forwards;\\n        }\\n        \\n        @keyframes fadeIn {\\n            from { opacity: 0; }\\n            to { opacity: 1; }\\n        }\\n        \\n        .media-viewer-content { \\n            position: relative; \\n            width: auto; \\n            max-width: 80%; \\n            max-height: 80vh; \\n            background: var(--card-bg); \\n            padding: 30px; \\n            border-radius: 10px; \\n            box-shadow: 0 0 25px rgba(0,0,0,0.2); \\n            display: flex; \\n            flex-direction: column; \\n            overflow: hidden;\\n            transform: translateY(20px);\\n            animation: slideUp var(--transition-medium) forwards;\\n        }\\n        \\n        @keyframes slideUp {\\n            from { transform: translateY(20px); }\\n            to { transform: translateY(0); }\\n        }\\n        \\n        .media-viewer-title { \\n            font-size: 20px; \\n            font-weight: bold; \\n            color: var(--primary-color); \\n            margin-bottom: 15px; \\n            padding-bottom: 10px; \\n            border-bottom: 1px solid var(--border-color); \\n            text-align: center; \\n            flex-shrink: 0;\\n            transition: color var(--transition-medium) ease, \\n                        border-color var(--transition-medium) ease;\\n        }\\n        \\n        .media-viewer-text-container { \\n            flex-grow: 1; \\n            overflow-y: auto; \\n            line-height: 1.8; \\n            font-size: 16px; \\n            color: var(--text-color); \\n            white-space: pre-wrap; \\n            text-align: justify; \\n            padding-right: 10px;\\n            transition: color var(--transition-medium) ease;\\n        }\\n        \\n        .viewer-close { \\n            position: absolute; \\n            top: 15px; \\n            right: 15px; \\n            color: var(--primary-color); \\n            font-size: 24px; \\n            cursor: pointer; \\n            transition: all var(--transition-quick) ease; \\n            background-color: rgba(255,255,255,0.5); \\n            border-radius: 50%; \\n            width: 30px; \\n            height: 30px; \\n            display: flex; \\n            align-items: center; \\n            justify-content: center; \\n            z-index: 10;\\n        }\\n        \\n        .dark .viewer-close {\\n            background-color: rgba(42,36,31,0.5);\\n        }\\n        \\n        .viewer-close:hover {\\n            color: var(--accent-color);\\n            transform: rotate(90deg);\\n            background-color: rgba(255,255,255,0.8);\\n        }\\n        \\n        .dark .viewer-close:hover {\\n            background-color: rgba(42,36,31,0.8);\\n        }\\n\\n        @media (max-width: 768px) {\\n            .container { padding: 0 !important; }\\n            \\n            .menu-bar { \\n                flex-direction: column; \\n                align-items: stretch; \\n                padding: 0; \\n                border-radius: 0; \\n            }\\n            \\n            .logo { \\n                font-size: 24px; \\n                padding: 12px 0; \\n                text-align: center; \\n                background: rgba(255,255,255,0.9); \\n                border-bottom: 1px solid var(--border-color);\\n                animation: none;\\n            }\\n            \\n            .dark .logo {\\n                background: rgba(42,36,31,0.9);\\n            }\\n            \\n            .menu-items { \\n                flex-direction: row; \\n                justify-content: space-around; \\n                background: rgba(255,255,255,0.95); \\n                border-bottom: 1px solid var(--border-color);\\n            }\\n            \\n            .dark .menu-items {\\n                background: rgba(42,36,31,0.95);\\n            }\\n            \\n            .menu-item { \\n                flex: 1; \\n                text-align: center; \\n                font-size: 15px; \\n                padding: 12px 5px; \\n                border-radius: 0; \\n                box-shadow: none;\\n            }\\n            \\n            .panel { padding: 15px !important; }\\n            .panel-title { font-size: 22px !important; margin-bottom: 20px; }\\n\\n            .conversation-list-item { padding: 12px; }\\n            .conversation-list-title { font-size: 16px; }\\n            .conversation-list-preview { font-size: 13px; }\\n            .conversation-list-time { font-size: 11px; }\\n            .conversation-list-unread { font-size: 10px; padding: 2px 6px; }\\n            .detailed-view-header { padding: 10px 12px; }\\n            #detailed-view-title { font-size: 17px; }\\n            .detailed-messages-area { padding: 12px; gap: 10px; }\\n            .message-entry { padding: 8px 12px; }\\n            .message-sender { font-size: 14px; }\\n            .message-timestamp { font-size: 11px; }\\n            .message-content-body { font-size: 13px; line-height: 1.6; }\\n            \\n            .media-viewer-content {\\n                max-width: 95%;\\n                padding: 20px;\\n            }\\n            \\n            .settings-option {\\n                flex-direction: column;\\n                align-items: flex-start;\\n                gap: 8px;\\n            }\\n            \\n            .settings-option label {\\n                width: 100%;\\n            }\\n            \\n            .moments-pagination {\\n                gap: 10px;\\n            }\\n            \\n            .moment-nav-button {\\n                padding: 6px 12px;\\n                font-size: 14px;\\n            }\\n        }\\n        \\n        ::-webkit-scrollbar { \\n            width: 6px; \\n        }\\n        \\n        ::-webkit-scrollbar-track { \\n            background: rgba(0,0,0,0.05);\\n            border-radius: 3px;\\n        }\\n        \\n        ::-webkit-scrollbar-thumb { \\n            background: var(--accent-color); \\n            border-radius: 3px;\\n        }\\n        \\n        ::-webkit-scrollbar-thumb:hover { \\n            background: var(--primary-color); \\n        }\\n        \\n        .dark ::-webkit-scrollbar-track {\\n            background: rgba(0,0,0,0.2);\\n        }\\n        \\n        /* Dark mode toggle */\\n        .dark-mode-toggle {\\n            position: fixed;\\n            bottom: 20px;\\n            right: 20px;\\n            width: 42px;\\n            height: 42px;\\n            border-radius: 50%;\\n            background: var(--primary-color);\\n            color: white;\\n            display: flex;\\n            align-items: center;\\n            justify-content: center;\\n            cursor: pointer;\\n            z-index: 100;\\n            box-shadow: 0 3px 12px rgba(0,0,0,0.2);\\n            transition: all var(--transition-quick) ease;\\n            border: none;\\n            transform-origin: center;\\n        }\\n        \\n        .dark-mode-toggle:hover {\\n            transform: scale(1.1) rotate(10deg);\\n            box-shadow: 0 4px 18px rgba(0,0,0,0.3);\\n        }\\n        \\n        .dark-mode-toggle i {\\n            font-size: 20px;\\n        }\\n\\n    </style>\\n</head>\\n<body>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"menu-bar\\\">\\n            <div class=\\\"logo\\\">游戏界面</div>\\n            <div class=\\\"menu-items\\\">\\n                <div class=\\\"menu-item active\\\" data-panel=\\\"main\\\">主要内容</div>\\n                <div class=\\\"menu-item\\\" data-panel=\\\"messages\\\">消息中心 <span class=\\\"notification-dot messages-dot\\\"></span></div>\\n                <div class=\\\"menu-item\\\" data-panel=\\\"moments\\\">动态 <span class=\\\"notification-dot moments-dot\\\"></span></div>\\n                <div class=\\\"menu-item\\\" data-panel=\\\"settings\\\">设置</div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"content\\\">\\n            <div class=\\\"panel active\\\" id=\\\"main\\\">\\n                <h2 class=\\\"panel-title\\\">主要内容</h2>\\n                <div class=\\\"player-status-bar\\\">\\n                    <div class=\\\"status-item-display\\\" data-type=\\\"time\\\"><span class=\\\"status-icon-display\\\"><i class=\\\"fas fa-clock\\\"></i></span><span>（时辰）</span></div>\\n                    <div class=\\\"status-item-display\\\" data-type=\\\"location\\\"><span class=\\\"status-icon-display\\\"><i class=\\\"fas fa-map-marker-alt\\\"></i></span><span>（位置）</span></div>\\n                    <div class=\\\"status-item-display\\\" data-type=\\\"weather\\\"><span class=\\\"status-icon-display\\\"><i class=\\\"fas fa-sun\\\"></i></span><span>（天气）</span></div>\\n                </div>\\n                <div class=\\\"story-content-wrapper\\\">\\n                    <div class=\\\"story-content\\\"><p>（剧情...）</p></div>\\n                    <div class=\\\"player-choices\\\"><div class=\\\"choice-header\\\">此刻，我决定...</div></div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"panel\\\" id=\\\"messages\\\">\\n                <h2 class=\\\"panel-title\\\">消息中心</h2>\\n                <div class=\\\"messages-view-container\\\">\\n                    <div id=\\\"conversation-list-view\\\">\\n                        <div class=\\\"messages-search-bar\\\">\\n                            <i class=\\\"fas fa-search messages-search-icon\\\"></i>\\n                            <input type=\\\"text\\\" class=\\\"messages-search-input\\\" placeholder=\\\"搜索对话...\\\" readonly>\\n                        </div>\\n                        </div>\\n                    <div id=\\\"detailed-message-view\\\">\\n                        <div class=\\\"detailed-view-header\\\">\\n                            <button id=\\\"back-to-list-btn\\\" title=\\\"返回列表\\\"><i class=\\\"fas fa-arrow-left\\\"></i></button>\\n                            <div class=\\\"detailed-view-avatar\\\">人</div>\\n                            <div class=\\\"detailed-view-user-info\\\">\\n                                <div id=\\\"detailed-view-title\\\"></div>\\n                                <div class=\\\"detailed-view-status\\\">\\n                                    <div class=\\\"detailed-view-typing\\\">\\n                                        <div class=\\\"typing-dot\\\"></div>\\n                                        <div class=\\\"typing-dot\\\"></div>\\n                                        <div class=\\\"typing-dot\\\"></div>\\n                                    </div>\\n                                    <span class=\\\"online-status-text\\\">在线</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"detailed-view-actions\\\">\\n                                <div class=\\\"detailed-view-action\\\" title=\\\"通话\\\">\\n                                    <i class=\\\"fas fa-phone\\\"></i>\\n                                </div>\\n                                <div class=\\\"detailed-view-action\\\" title=\\\"更多选项\\\">\\n                                    <i class=\\\"fas fa-ellipsis-v\\\"></i>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"detailed-messages-area\\\">\\n                            </div>\\n                        <div class=\\\"chat-input-mock\\\">\\n                            <div class=\\\"chat-input-field\\\">输入消息（仅展示界面）</div>\\n                            <div class=\\\"chat-input-actions\\\">\\n                                <div class=\\\"chat-input-action\\\" title=\\\"发送\\\">\\n                                    <i class=\\\"fas fa-paper-plane\\\"></i>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"panel\\\" id=\\\"moments\\\">\\n                <h2 class=\\\"panel-title\\\">动态</h2>\\n                <div class=\\\"moments-pagination\\\">\\n                    <button id=\\\"prev-moment\\\" class=\\\"moment-nav-button\\\" disabled><i class=\\\"fas fa-chevron-left\\\"></i> 上一条</button>\\n                    <span id=\\\"moment-counter\\\">0 / 0</span>\\n                    <button id=\\\"next-moment\\\" class=\\\"moment-nav-button\\\" disabled>下一条 <i class=\\\"fas fa-chevron-right\\\"></i></button>\\n                </div>\\n                <div class=\\\"moments-container\\\">\\n                    </div>\\n            </div>\\n\\n            <div class=\\\"panel\\\" id=\\\"settings\\\">\\n                <h2 class=\\\"panel-title\\\">界面设置</h2>\\n                <div class=\\\"settings-options\\\">\\n                    <div class=\\\"settings-option\\\"><label for=\\\"font-family-setting\\\">主题字体:</label><select id=\\\"font-family-setting\\\"><option value=\\\"'Noto Serif SC', serif\\\">默认衬线</option><option value=\\\"'KaiTi', '楷体', serif\\\">楷体</option><option value=\\\"'SimSun', '宋体', serif\\\">宋体</option><option value=\\\"sans-serif\\\">现代无衬线</option></select></div>\\n                    <div class=\\\"settings-option\\\"><label for=\\\"font-size-setting\\\">字体大小 (px):</label><input type=\\\"range\\\" id=\\\"font-size-setting\\\" min=\\\"12\\\" max=\\\"24\\\" value=\\\"16\\\"><span id=\\\"font-size-value\\\">16px</span></div>\\n                    <div class=\\\"settings-option\\\"><label for=\\\"bg-color-setting\\\">页面背景色:</label><input type=\\\"color\\\" id=\\\"bg-color-setting\\\" value=\\\"#F5F5F5\\\"></div>\\n                    <div class=\\\"settings-option\\\"><label for=\\\"primary-color-setting\\\">主题强调色:</label><input type=\\\"color\\\" id=\\\"primary-color-setting\\\" value=\\\"#A0522D\\\"></div>\\n                    <div class=\\\"settings-option\\\"><label for=\\\"brightness-setting\\\">内容区亮度 (%):</label><input type=\\\"range\\\" id=\\\"brightness-setting\\\" min=\\\"50\\\" max=\\\"100\\\" value=\\\"75\\\"><span id=\\\"brightness-value\\\">75%</span></div>\\n                    <button id=\\\"reset-settings-btn\\\" class=\\\"reset-button\\\">恢复默认设置</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"media-viewer\\\">\\n        <div class=\\\"media-viewer-content\\\">\\n            <span class=\\\"viewer-close\\\"><i class=\\\"fas fa-times\\\"></i></span>\\n            <div class=\\\"media-viewer-title\\\" id=\\\"media-viewer-title\\\">（标题）</div>\\n            <div class=\\\"media-viewer-text-container\\\" id=\\\"media-viewer-text\\\">（内容）</div>\\n        </div>\\n    </div>\\n\\n    <button class=\\\"dark-mode-toggle\\\" id=\\\"dark-mode-toggle\\\" title=\\\"切换深色/浅色模式\\\">\\n        <i class=\\\"fas fa-moon\\\"></i>\\n    </button>\\n    \\n    <script id=\\\"injected-data-container\\\" type=\\\"text/plain\\\">$1</script>\\n\\n    <script>\\n    // --- IIFE (Immediately Invoked Function Expression) to encapsulate the script ---\\n    (function() {\\n        const $ = (selector, parent = document) => parent.querySelector(selector);\\n        const $$ = (selector, parent = document) => parent.querySelectorAll(selector);\\n\\n        const defaultSettings = { fontFamily: \\\"'Noto Serif SC', serif\\\", fontSize: \\\"16\\\", bgColor: \\\"#F5F5F5\\\", primaryColor: \\\"#8E6C55\\\", contentBrightness: \\\"75\\\" };\\n        const defaultAvatar = 'https://placehold.co/48x48/E4B78E/4A3B35?text=?';\\n        let allConversationsData = {};\\n        let currentMomentIndex = 0; // Track current moment post\\n        let totalMoments = 0; // Track total number of moments\\n        \\n        // Check for dark mode preference\\n        function checkDarkMode() {\\n            if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\\n                document.documentElement.classList.add('dark');\\n                $('#dark-mode-toggle i').className = 'fas fa-sun';\\n            }\\n            \\n            window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', event => {\\n                if (event.matches) {\\n                    document.documentElement.classList.add('dark');\\n                    $('#dark-mode-toggle i').className = 'fas fa-sun';\\n                } else {\\n                    document.documentElement.classList.remove('dark');\\n                    $('#dark-mode-toggle i').className = 'fas fa-moon';\\n                }\\n            });\\n        }\\n\\n        const DataExtractor = {\\n            extractMainContent(textBlock) { const mainContentMatch = textBlock.match(/<maincontent>([\\\\s\\\\S]*?)<\\\\/maincontent>/i); if (!mainContentMatch) return null; const content = mainContentMatch[1].trim(); const data = { time: '', location: '', weather: '', story: '' }; let storyLines = []; let collectingStory = false; content.split('\\\\n').forEach(line => { line = line.trim(); if (!line) return; if (/^(当前时间|当前地点|天气)\\\\s*\\\\|/.test(line)) { collectingStory = false; } if (collectingStory) { storyLines.push(line); return; } if (line.startsWith('当前时间|')) data.time = line.substring('当前时间|'.length).trim(); else if (line.startsWith('当前地点|')) data.location = line.substring('当前地点|'.length).trim(); else if (line.startsWith('天气|')) data.weather = line.substring('天气|'.length).trim(); else if (line.startsWith('正文|')) { storyLines.push(line.substring('正文|'.length).trim()); collectingStory = true; } }); data.story = storyLines.join('\\\\n'); return data; },\\n            extractOptions(textBlock) { const optionsMatch = textBlock.match(/<option>([\\\\s\\\\S]*?)<\\\\/option>/i); if (!optionsMatch) return []; const content = optionsMatch[1].trim(); return content.split('\\\\n').map(line => line.trim()).filter(line => line.match(/^选项\\\\d+\\\\s*\\\\|/)).map(line => line.substring(line.indexOf('|') + 1).trim()); },\\n            extractChatData(textBlock) {\\n                const chatLogMatch = textBlock.match(/<chatlog>([\\\\s\\\\S]*?)<\\\\/chatlog>/i);\\n                if (!chatLogMatch) return [];\\n                const chatLogContent = chatLogMatch[1].trim();\\n                const rawMessages = chatLogContent.split('---CHAT_MESSAGE_SEPARATOR---');\\n                const messages = [];\\n                rawMessages.forEach(rawMessageString => {\\n                    if (!rawMessageString.trim()) return;\\n                    const lines = rawMessageString.trim().split('\\\\n').map(line => line.trim());\\n                    const message = { conversationId: '', sender: '', content: '', lastMessagePreview: '', unreadCount: '0', timestamp: '', images: [], videos: [] };\\n                    let collectingContent = false; let currentContentLines = [];\\n                    for (const line of lines) {\\n                        if (!line) continue;\\n                        if (/^(会话ID|发送者|最后一条消息|未读信息数量|消息发送时间|图片\\\\d*|视频\\\\d*)\\\\s*\\\\|/.test(line)) { if (collectingContent) { message.content = currentContentLines.join('\\\\n').trim(); collectingContent = false; currentContentLines = []; } }\\n                        if (collectingContent) { currentContentLines.push(line); continue; }\\n                        const parts = line.split('|'); const key = parts[0].trim(); const value = parts.length > 1 ? parts.slice(1).join('|').trim() : '';\\n                        if (key === '会话ID') message.conversationId = value;\\n                        else if (key === '发送者') message.sender = value;\\n                        else if (key === '消息内容') { currentContentLines.push(value); collectingContent = true; }\\n                        else if (key === '最后一条消息') message.lastMessagePreview = value;\\n                        else if (key === '未读信息数量') message.unreadCount = value;\\n                        else if (key === '消息发送时间') message.timestamp = value;\\n                        else if (key.startsWith('图片')) message.images.push(value);\\n                        else if (key.startsWith('视频')) message.videos.push(value);\\n                    }\\n                    if (collectingContent && currentContentLines.length > 0) { message.content = currentContentLines.join('\\\\n').trim(); }\\n                    if (message.conversationId || message.sender || message.content) { messages.push(message); }\\n                });\\n                return messages;\\n            },\\n            extractMomentsData(textBlock) {\\n                const snsMatch = textBlock.match(/<sns>([\\\\s\\\\S]*?)<\\\\/sns>/i);\\n                if (!snsMatch) return [];\\n                const snsContent = snsMatch[1].trim();\\n                const rawPosts = snsContent.split('---SNS_POST_SEPARATOR---');\\n                const allPosts = [];\\n                rawPosts.forEach(rawPostString => {\\n                    if (!rawPostString.trim()) return;\\n                    const lines = rawPostString.trim().split('\\\\n').map(line => line.trim());\\n                    const post = { author: '', avatar: '', timestamp: '', title: '', text: '', tags: [], mediaText: [], likes: '0', commentsCount: '0', shares: '0', comments: [] };\\n                    let collectingText = false; let currentTextLines = []; const tempComments = {};\\n                    for (const line of lines) {\\n                        if (!line) continue;\\n                        if (/^(发帖id|头像|发帖时间|标题|标签\\\\d*|图片\\\\d*|视频\\\\d*|点赞|评论|转发|评论id\\\\d*)\\\\s*\\\\|/.test(line)) { if (collectingText) { post.text = currentTextLines.join('\\\\n').trim(); collectingText = false; currentTextLines = []; } }\\n                        if (collectingText) { currentTextLines.push(line); continue; }\\n                        const parts = line.split('|'); const key = parts[0].trim(); const value = parts.length > 1 ? parts.slice(1).join('|').trim() : '';\\n                        if (key === '发帖id') post.author = value;\\n                        else if (key === '头像') post.avatar = value;\\n                        else if (key === '发帖时间') post.timestamp = value;\\n                        else if (key === '标题') post.title = value;\\n                        else if (key === '文案') { currentTextLines.push(value); collectingText = true; }\\n                        else if (key.startsWith('图片') || key.startsWith('视频')) { const type = key.startsWith('图片') ? 'image' : 'video'; const indexMatch = key.match(/\\\\d+$/); const index = indexMatch ? parseInt(indexMatch[0]) : post.mediaText.length + 1; post.mediaText.push({ type: type, index: index, text: value }); }\\n                        else if (key.startsWith('标签')) { post.tags.push(value); }\\n                        else if (key === '点赞') post.likes = value;\\n                        else if (key === '评论') post.commentsCount = value;\\n                        else if (key === '转发') post.shares = value;\\n                        else if (key.startsWith('评论id')) { const commentNum = key.substring('评论id'.length); if (!tempComments[commentNum]) tempComments[commentNum] = {}; tempComments[commentNum].author = value; }\\n                        else if (key.startsWith('评论') && key.length > '评论'.length && !key.startsWith('评论id')) { const commentNum = key.substring('评论'.length); if (!tempComments[commentNum]) tempComments[commentNum] = {}; tempComments[commentNum].text = value; }\\n                    }\\n                    if (collectingText && currentTextLines.length > 0) { post.text = currentTextLines.join('\\\\n').trim(); }\\n                    for (const num in tempComments) { if (tempComments[num].author && tempComments[num].text) { post.comments.push({ author: tempComments[num].author, text: tempComments[num].text }); } }\\n                    post.mediaText.sort((a, b) => a.index - b.index);\\n                    if (post.author) { allPosts.push(post); }\\n                });\\n                return allPosts;\\n            }\\n        };\\n\\n        const UIUpdater = {\\n            updateMainContent(data) { if (!data) return; const statusBar = $('.player-status-bar'); if (statusBar) { const timeEl = statusBar.querySelector('[data-type=\\\"time\\\"] span:last-child'); const locEl = statusBar.querySelector('[data-type=\\\"location\\\"] span:last-child'); const weatherEl = statusBar.querySelector('[data-type=\\\"weather\\\"] span:last-child'); const weatherIconEl = statusBar.querySelector('[data-type=\\\"weather\\\"] i'); if (timeEl) timeEl.textContent = data.time || '（未知时辰）'; if (locEl) locEl.textContent = data.location || '（未知地点）'; if (weatherEl) weatherEl.textContent = data.weather || '（未知天气）'; if (weatherIconEl) { if (data.weather.includes('雨')) weatherIconEl.className = 'fas fa-cloud-showers-heavy'; else if (data.weather.includes('雪')) weatherIconEl.className = 'fas fa-snowflake'; else if (data.weather.includes('云') || data.weather.includes('阴')) weatherIconEl.className = 'fas fa-cloud'; else if (data.weather.includes('晴')) weatherIconEl.className = 'fas fa-sun'; else weatherIconEl.className = 'fas fa-question-circle'; } } const storyP = $('.story-content p'); if (storyP) storyP.innerHTML = data.story ? data.story.replace(/\\\\n/g, '<br>') : '（暂无剧情）'; },\\n            updateOptions(options) { const choicesContainer = $('.player-choices'); if (!choicesContainer) return; choicesContainer.querySelectorAll('.choice-option').forEach(opt => opt.remove()); if (options && options.length > 0) { options.forEach((optText, index) => { if (!optText) return; const optDiv = document.createElement('div'); optDiv.className = 'choice-option'; optDiv.innerHTML = `<div class=\\\"choice-text\\\">${optText}</div>`; optDiv.dataset.choiceIndex = index; choicesContainer.appendChild(optDiv); }); } else { const noOptDiv = document.createElement('div'); noOptDiv.className = 'choice-option disabled'; noOptDiv.innerHTML = `<div class=\\\"choice-text\\\">（暂无选项）</div>`; choicesContainer.appendChild(noOptDiv); } },\\n            updateMessagesPanel(messagesData) {\\n                allConversationsData = {};\\n                if (messagesData && messagesData.length > 0) {\\n                    messagesData.forEach(msg => {\\n                        if (!allConversationsData[msg.conversationId]) {\\n                            allConversationsData[msg.conversationId] = {\\n                                representativeSender: msg.sender,\\n                                lastMessagePreview: msg.lastMessagePreview, \\n                                unreadCount: msg.unreadCount,\\n                                latestTimestamp: msg.timestamp, \\n                                messages: [],\\n                                uniqueSenders: new Set()\\n                            };\\n                        }\\n                        allConversationsData[msg.conversationId].messages.push(msg);\\n                        allConversationsData[msg.conversationId].uniqueSenders.add(msg.sender);\\n                        if (msg.timestamp > allConversationsData[msg.conversationId].latestTimestamp) {\\n                           allConversationsData[msg.conversationId].latestTimestamp = msg.timestamp;\\n                        }\\n                    });\\n                }\\n                renderConversationList();\\n                switchToListView();\\n            },\\n            updateMomentsData(posts) {\\n                const momentsContainer = $('.moments-container');\\n                const prevButton = $('#prev-moment');\\n                const nextButton = $('#next-moment');\\n                const momentCounter = $('#moment-counter');\\n                \\n                if (!momentsContainer) return;\\n                \\n                momentsContainer.innerHTML = '';\\n                currentMomentIndex = 0;\\n                totalMoments = posts ? posts.length : 0;\\n                \\n                // Update counter display\\n                momentCounter.textContent = totalMoments > 0 ? `1 / ${totalMoments}` : '0 / 0';\\n                \\n                // Update navigation buttons\\n                prevButton.disabled = true; // First post, can't go previous\\n                nextButton.disabled = totalMoments <= 1; // Disable next if 0 or 1 post\\n                \\n                if (posts && posts.length > 0) {\\n                    posts.forEach((post, postIndex) => {\\n                        const postDiv = document.createElement('div');\\n                        postDiv.className = 'moment-post';\\n                        postDiv.dataset.postId = `post-${postIndex}`;\\n                        \\n                        // Make only the first post active initially\\n                        if (postIndex === 0) {\\n                            postDiv.classList.add('active');\\n                        }\\n                        \\n                        let avatarHTML;\\n                        const authorName = post.author || '匿名';\\n                        \\n                        if (post.avatar && (post.avatar.startsWith('http') || post.avatar.startsWith('data:'))) {\\n                            avatarHTML = `<img src=\\\"${post.avatar}\\\" alt=\\\"${authorName}头像\\\" class=\\\"moment-avatar\\\" onerror=\\\"this.src='${defaultAvatar}'; this.onerror=null;\\\">`;\\n                        } else {\\n                            const initial = authorName.trim().substring(0, 1) || '?';\\n                            avatarHTML = `<div class=\\\"moment-avatar\\\" title=\\\"${authorName}头像\\\">${initial}</div>`;\\n                        }\\n                        \\n                        let tagsHTML = post.tags && post.tags.length > 0 ? post.tags.map(tag => `<div class=\\\"moment-tag\\\"><i class=\\\"fas fa-tag\\\"></i> ${tag}</div>`).join('') : '';\\n                        \\n                        let mediaTextGridHTML = '';\\n                        if (post.mediaText && post.mediaText.length > 0) {\\n                            mediaTextGridHTML = '<div class=\\\"moment-media-text-grid\\\">';\\n                            post.mediaText.forEach((media, idx) => {\\n                                const iconClass = media.type === 'image' ? 'fa-image' : 'fa-video';\\n                                const label = `${media.type === 'image' ? '图片' : '视频'} ${idx + 1}`;\\n                                mediaTextGridHTML += `<div class=\\\"moment-media-text-item\\\" \\n                                                            data-media-type=\\\"${media.type}\\\" \\n                                                            data-media-title=\\\"${label}\\\" \\n                                                            data-media-text=\\\"${encodeURIComponent(media.text || '无详细描述')}\\\">\\n                                                        <i class=\\\"fas ${iconClass}\\\"></i> ${label}\\n                                                      </div>`;\\n                            });\\n                            mediaTextGridHTML += '</div>';\\n                        }\\n\\n                        let commentsHTML = post.comments && post.comments.length > 0 ? post.comments.map(comment => ` <div class=\\\"moment-comment\\\"> <span class=\\\"comment-author-name\\\">${comment.author}:</span> <span class=\\\"comment-text\\\">${comment.text}</span> </div>`).join('') : '';\\n                        \\n                        postDiv.innerHTML = `\\n                            <div class=\\\"moment-post-header\\\"> ${avatarHTML} <div class=\\\"moment-post-info\\\"> <div class=\\\"moment-author\\\">${authorName}</div> <div class=\\\"moment-timestamp\\\">${post.timestamp || '（未知时间）'}</div> </div> </div>\\n                            <div class=\\\"moment-post-body\\\"> ${post.title ? `<h3 class=\\\"moment-post-title\\\">${post.title}</h3>` : ''} <div class=\\\"moment-post-text\\\">${post.text ? post.text.replace(/\\\\n/g, '<br>') : '（无内容）'}</div> ${tagsHTML ? `<div class=\\\"moment-tags\\\">${tagsHTML}</div>` : ''} ${mediaTextGridHTML ? `<div class=\\\"moment-media-content\\\">${mediaTextGridHTML}</div>` : ''} </div>\\n                            <div class=\\\"moment-actions\\\"> <div class=\\\"moment-action like-action\\\" data-liked=\\\"false\\\"><i class=\\\"far fa-heart\\\"></i><span class=\\\"action-count\\\">${post.likes || 0}</span></div> <div class=\\\"moment-action comment-action\\\"><i class=\\\"far fa-comment-dots\\\"></i><span class=\\\"action-count\\\">${post.commentsCount || 0}</span></div> <div class=\\\"moment-action share-action\\\"><i class=\\\"fas fa-share-square\\\"></i><span class=\\\"action-count\\\">${post.shares || 0}</span></div> </div>\\n                            ${commentsHTML ? `<div class=\\\"moment-comments-section\\\">${commentsHTML}</div>` : ''}`;\\n                        \\n                        momentsContainer.appendChild(postDiv);\\n                    });\\n                } else {\\n                    momentsContainer.innerHTML = '<p style=\\\"text-align:center; color: var(--light-text);\\\">（朋友圈暂无动态）</p>';\\n                }\\n            },\\n            applySettings(settings) { document.body.style.fontFamily = settings.fontFamily; document.body.style.fontSize = `${settings.fontSize}px`; document.documentElement.style.setProperty('--bg-color', settings.bgColor); document.documentElement.style.setProperty('--primary-color', settings.primaryColor); document.documentElement.style.setProperty('--content-bg-alpha', parseFloat(settings.contentBrightness) / 100); const fontSizeValueEl = $('#font-size-value'); if (fontSizeValueEl) fontSizeValueEl.textContent = `${settings.fontSize}px`; const brightnessValueEl = $('#brightness-value'); if (brightnessValueEl) brightnessValueEl.textContent = `${settings.contentBrightness}%`; \\n                if (settings.primaryColor) {\\n                    const hexToRgb = (hex) => {\\n                        const result = /^#?([a-f\\\\d]{2})([a-f\\\\d]{2})([a-f\\\\d]{2})$/i.exec(hex);\\n                        return result ? {\\n                            r: parseInt(result[1], 16),\\n                            g: parseInt(result[2], 16),\\n                            b: parseInt(result[3], 16)\\n                        } : null;\\n                    };\\n                    const rgb = hexToRgb(settings.primaryColor);\\n                    if (rgb) {\\n                        document.documentElement.style.setProperty('--primary-color-rgb', `${rgb.r}, ${rgb.g}, ${rgb.b}`);\\n                    }\\n                }\\n            },\\n            loadSettingsToPanel(settings) { const fontFamilySelect = $('#font-family-setting'); const fontSizeRange = $('#font-size-setting'); const bgColorPicker = $('#bg-color-setting'); const primaryColorPicker = $('#primary-color-setting'); const brightnessRange = $('#brightness-setting'); if (fontFamilySelect) fontFamilySelect.value = settings.fontFamily; if (fontSizeRange) fontSizeRange.value = settings.fontSize; if (bgColorPicker) bgColorPicker.value = settings.bgColor; if (primaryColorPicker) primaryColorPicker.value = settings.primaryColor; if (brightnessRange) brightnessRange.value = settings.contentBrightness; UIUpdater.applySettings(settings); }\\n        };\\n\\n        function renderConversationList() {\\n            const listView = $('#conversation-list-view');\\n            const searchBar = listView.querySelector('.messages-search-bar');\\n            Array.from(listView.children).forEach(child => {\\n                if (!child.classList.contains('messages-search-bar')) {\\n                    child.remove();\\n                }\\n            });\\n            \\n            let totalUnreadForTabDot = 0;\\n\\n            if (Object.keys(allConversationsData).length > 0) {\\n                Object.keys(allConversationsData).forEach(convId => {\\n                    const conv = allConversationsData[convId];\\n                    const listItem = document.createElement('div');\\n                    listItem.className = 'conversation-list-item';\\n                    listItem.dataset.convId = convId; \\n                    \\n                    const unreadCount = parseInt(conv.unreadCount);\\n                    if (unreadCount > 0) { totalUnreadForTabDot += unreadCount; }\\n\\n                    let listTitle = convId; \\n                    if (conv.uniqueSenders.size === 1) { \\n                        listTitle = conv.representativeSender || convId; \\n                    } else if (conv.uniqueSenders.size > 1) {\\n                        listTitle = `${convId} (群聊)`; \\n                    }\\n                    \\n                    const initial = listTitle.charAt(0).toUpperCase();\\n                    const isOnline = Math.random() > 0.5; \\n                    const isVerified = Math.random() > 0.7; \\n                    \\n                    listItem.innerHTML = `\\n                        <div class=\\\"conversation-avatar\\\">${initial}\\n                            <div class=\\\"conversation-online-status ${isOnline ? 'online' : ''}\\\"></div>\\n                        </div>\\n                        <div class=\\\"conversation-list-details\\\">\\n                            <div class=\\\"conversation-list-title\\\">${listTitle} ${isVerified ? '<i class=\\\"fas fa-check-circle conversation-list-verified\\\"></i>' : ''}</div>\\n                            <div class=\\\"conversation-list-preview\\\">${conv.lastMessagePreview || '（无预览）'}</div>\\n                            <div class=\\\"conversation-list-meta\\\">\\n                                <span class=\\\"conversation-list-time\\\">${conv.latestTimestamp || '（未知时间）'}</span>\\n                                ${unreadCount > 0 ? `<span class=\\\"conversation-list-unread\\\">${unreadCount}</span>` : ''}\\n                            </div>\\n                        </div>`;\\n                    listItem.addEventListener('click', () => showDetailedMessages(convId));\\n                    \\n                    if (searchBar) {\\n                        listView.insertBefore(listItem, searchBar.nextSibling);\\n                    } else {\\n                        listView.appendChild(listItem);\\n                    }\\n                });\\n            } else {\\n                const emptyState = document.createElement('div');\\n                emptyState.innerHTML = '<p style=\\\"text-align:center; color: var(--light-text); padding: 20px;\\\">（暂无会话）</p>';\\n                listView.appendChild(emptyState);\\n            }\\n            \\n            const messagesDot = $('.messages-dot');\\n            const messagesMenuItem = $('.menu-item[data-panel=\\\"messages\\\"]');\\n            if (messagesDot && messagesMenuItem) {\\n                if (totalUnreadForTabDot > 0 && !messagesMenuItem.classList.contains('active')) {\\n                    messagesDot.style.display = 'inline-block';\\n                } else { messagesDot.style.display = 'none'; }\\n            }\\n        }\\n\\n        function showDetailedMessages(convId) {\\n            const detailedTitle = $('#detailed-view-title');\\n            const detailedAvatar = $('.detailed-view-avatar');\\n            const messagesArea = $('.detailed-messages-area');\\n            const statusText = $('.online-status-text');\\n            const typingIndicator = $('.detailed-view-typing');\\n            const convData = allConversationsData[convId];\\n            \\n            if (!convData) return;\\n\\n            let detailedHeaderTitle = convId; \\n            if (convData.uniqueSenders.size === 1) {\\n                detailedHeaderTitle = convData.representativeSender || convId;\\n            } else if (convData.uniqueSenders.size > 1) {\\n                detailedHeaderTitle = `${convId} (群聊)`;\\n            }\\n            \\n            detailedTitle.textContent = detailedHeaderTitle;\\n            detailedAvatar.textContent = detailedHeaderTitle.charAt(0).toUpperCase();\\n            \\n            const isOnline = Math.random() > 0.3;\\n            if (isOnline) {\\n                statusText.textContent = '在线';\\n                statusText.style.color = 'var(--status-good)';\\n                if (Math.random() > 0.9) {\\n                    statusText.style.display = 'none';\\n                    typingIndicator.classList.add('active');\\n                } else {\\n                    statusText.style.display = 'inline';\\n                    typingIndicator.classList.remove('active');\\n                }\\n            } else {\\n                statusText.textContent = `最后在线：${Math.floor(Math.random() * 60) + 1}分钟前`;\\n                statusText.style.color = 'var(--light-text)';\\n                typingIndicator.classList.remove('active');\\n            }\\n            \\n            messagesArea.innerHTML = '';\\n            const dateGroups = groupMessagesByDate(convData.messages);\\n            \\n            Object.keys(dateGroups).forEach(date => {\\n                const dateSeparator = document.createElement('div');\\n                dateSeparator.className = 'message-date-separator';\\n                dateSeparator.innerHTML = `<span class=\\\"message-date-text\\\">${date}</span>`;\\n                messagesArea.appendChild(dateSeparator);\\n                \\n                dateGroups[date].forEach((msg, msgIndex) => { // msgIndex is available\\n                    const entryDiv = document.createElement('div');\\n                    \\n                    // const isSelfMessage = false; // All messages are treated as incoming\\n                    // const isSystemMessage = msgIndex === 0 && Math.random() > 0.7; // REMOVED: Logic for displaying encryption message\\n\\n                    // if (isSystemMessage) { // REMOVED: Block for displaying encryption message\\n                    //     entryDiv.className = 'message-entry system-message';\\n                    //     entryDiv.innerHTML = `系统消息: 聊天已加密，对话内容仅参与者可见`;\\n                    //     messagesArea.appendChild(entryDiv);\\n                    //     return; \\n                    // }\\n                    \\n                    // All non-system messages will use 'sender-message' style\\n                    entryDiv.className = 'message-entry sender-message';\\n                                        \\n                    let attachmentsHTML = '';\\n                    if (msg.images.length > 0 || msg.videos.length > 0) {\\n                        attachmentsHTML += '<div class=\\\"message-attachments\\\">';\\n                        msg.images.forEach((imgDesc, idx) => {\\n                            if(imgDesc) attachmentsHTML += `<div class=\\\"message-attachment-item\\\" data-media-type=\\\"image\\\" data-media-title=\\\"图片 ${idx + 1} \\\" data-media-text=\\\"${encodeURIComponent(imgDesc || '无详细描述')}\\\"><i class=\\\"fas fa-image\\\"></i> <span>图片 ${idx + 1} (点击查看)</span></div>`;\\n                        });\\n                        msg.videos.forEach((vidDesc, idx) => {\\n                            if(vidDesc) attachmentsHTML += `<div class=\\\"message-attachment-item\\\" data-media-type=\\\"video\\\" data-media-title=\\\"视频 ${idx + 1} \\\" data-media-text=\\\"${encodeURIComponent(vidDesc || '无详细描述')}\\\"><i class=\\\"fas fa-video\\\"></i> <span>视频 ${idx + 1} (点击查看)</span></div>`;\\n                        });\\n                        attachmentsHTML += '</div>';\\n                    }\\n                    \\n                    const messageStatus = ''; // Status indicators are not used for incoming messages in this design\\n                    \\n                    entryDiv.innerHTML = `\\n                        <div class=\\\"message-entry-header\\\">\\n                            <div class=\\\"message-sender-wrapper\\\">\\n                                <span class=\\\"message-sender\\\">${msg.sender || '未知'}</span>\\n                            </div>\\n                            <span class=\\\"message-timestamp\\\">${formatTime(msg.timestamp) || '（未知时间）'}</span>\\n                        </div>\\n                        <div class=\\\"message-content-body\\\">${msg.content ? msg.content.replace(/\\\\n/g, '<br>') : '（无内容）'}</div>\\n                        ${attachmentsHTML}\\n                        ${messageStatus}`; \\n                    \\n                    messagesArea.appendChild(entryDiv);\\n                });\\n            });\\n            \\n            messagesArea.scrollTop = messagesArea.scrollHeight;\\n            switchToDetailedView();\\n        }\\n        \\n        function formatTime(timestamp) {\\n            if (!timestamp) return '';\\n            return timestamp;\\n        }\\n        \\n        function groupMessagesByDate(messages) {\\n            const groups = {};\\n            messages.forEach(msg => {\\n                let dateString = '今天'; \\n                if (msg.timestamp) {\\n                    const random = Math.random();\\n                    if (random < 0.4) dateString = '今天';\\n                    else if (random < 0.7) dateString = '昨天';\\n                    else if (random < 0.9) dateString = '上周';\\n                    else dateString = '更早';\\n                }\\n                if (!groups[dateString]) {\\n                    groups[dateString] = [];\\n                }\\n                groups[dateString].push(msg);\\n            });\\n            return groups;\\n        }\\n\\n        function switchToListView() {\\n            $('#conversation-list-view').style.display = 'block';\\n            $('#detailed-message-view').style.display = 'none';\\n        }\\n        function switchToDetailedView() {\\n            $('#conversation-list-view').style.display = 'none';\\n            $('#detailed-message-view').style.display = 'flex';\\n        }\\n\\n        function openMediaViewer(title, text) {\\n            const viewer = $('.media-viewer');\\n            const viewerTitleEl = $('#media-viewer-title');\\n            const viewerTextEl = $('#media-viewer-text');\\n            if (!viewer || !viewerTitleEl || !viewerTextEl) {\\n                console.error(\\\"Media viewer elements not found for opening.\\\");\\n                return;\\n            }\\n            viewerTitleEl.textContent = title;\\n            viewerTextEl.innerHTML = text.replace(/\\\\n/g, '<br>');\\n            viewer.classList.add('active');\\n        }\\n\\n        function handleGlobalMediaClick(event) {\\n            const targetMediaItem = event.target.closest('.moment-media-text-item, .message-attachment-item');\\n            if (targetMediaItem) {\\n                const title = targetMediaItem.dataset.mediaTitle || '详情';\\n                let textContent = '（无详细描述）';\\n                const encodedText = targetMediaItem.dataset.mediaText;\\n\\n                if (encodedText) {\\n                    try {\\n                        textContent = decodeURIComponent(encodedText);\\n                    } catch (e) {\\n                        console.error(\\\"Error decoding mediaText:\\\", e, \\\"Original encoded text:\\\", encodedText);\\n                        textContent = \\\"错误：描述文本无效或已损坏。\\\";\\n                    }\\n                }\\n                openMediaViewer(title, textContent);\\n            }\\n        }\\n\\n        function handleMomentNavigation() {\\n            const prevButton = $('#prev-moment');\\n            const nextButton = $('#next-moment');\\n            \\n            if (!prevButton || !nextButton) return;\\n            \\n            prevButton.addEventListener('click', function() {\\n                if (currentMomentIndex > 0) {\\n                    navigateToMoment(currentMomentIndex - 1);\\n                }\\n            });\\n            \\n            nextButton.addEventListener('click', function() {\\n                if (currentMomentIndex < totalMoments - 1) {\\n                    navigateToMoment(currentMomentIndex + 1);\\n                }\\n            });\\n        }\\n        \\n        function navigateToMoment(index) {\\n            const momentContainer = $('.moments-container');\\n            const prevButton = $('#prev-moment');\\n            const nextButton = $('#next-moment');\\n            const momentCounter = $('#moment-counter');\\n            \\n            if (!momentContainer || !prevButton || !nextButton || !momentCounter) return;\\n            \\n            // Hide current post\\n            const currentPost = momentContainer.querySelector('.moment-post.active');\\n            if (currentPost) {\\n                currentPost.classList.remove('active');\\n            }\\n            \\n            // Show new post\\n            const newPost = momentContainer.querySelector(`.moment-post[data-post-id=\\\"post-${index}\\\"]`);\\n            if (newPost) {\\n                newPost.classList.add('active');\\n                currentMomentIndex = index;\\n                \\n                // Update counter\\n                momentCounter.textContent = `${index + 1} / ${totalMoments}`;\\n                \\n                // Update button states\\n                prevButton.disabled = index === 0;\\n                nextButton.disabled = index === totalMoments - 1;\\n            }\\n        }\\n\\n        function handlePanelSwitching() {\\n            const menuItems = $$('.menu-item');\\n            const panels = $$('.panel');\\n            const momentsDot = $('.moments-dot');\\n            const messagesDot = $('.messages-dot');\\n            menuItems.forEach(item => {\\n                item.addEventListener('click', function() {\\n                    const targetPanelId = this.dataset.panel;\\n                    menuItems.forEach(i => i.classList.remove('active'));\\n                    this.classList.add('active');\\n                    panels.forEach(p => {\\n                        p.style.display = (p.id === targetPanelId) ? 'block' : 'none';\\n                        if (p.id === targetPanelId) p.classList.add('active');\\n                        else p.classList.remove('active');\\n                    });\\n                    if (targetPanelId === 'messages') {\\n                        switchToListView();\\n                        if (messagesDot) messagesDot.style.display = 'none';\\n                        localStorage.setItem('tianxiang_messages_last_active_total_unread', '0');\\n                    }\\n                    if (targetPanelId === 'moments' && momentsDot) {\\n                        momentsDot.style.display = 'none';\\n                        const currentCount = $('.moments-container') ? $$('.moment-post', $('.moments-container')).length : 0;\\n                        localStorage.setItem('tianxiang_moments_last_seen_count', currentCount.toString());\\n                    }\\n                });\\n            });\\n            const initialActivePanel = $('.panel.active');\\n            panels.forEach(p => { if (p !== initialActivePanel) p.style.display = 'none'; else p.style.display = 'block'; });\\n            if ($('#messages') && $('#messages').classList.contains('active')) { switchToListView(); }\\n        }\\n        function handlePlayerChoiceClick() { const choicesContainer = $('.player-choices'); if (!choicesContainer) return; choicesContainer.addEventListener('click', function(event) { const choiceOption = event.target.closest('.choice-option'); if (choiceOption && !choiceOption.classList.contains('disabled')) { const choiceText = choiceOption.querySelector('.choice-text').textContent.trim(); const messageToSend = `{{user}}决定 ${choiceText}`; try { const stInput = window.parent.document.querySelector('#send_textarea, #chat_input textarea, #user_input'); const stSendButton = window.parent.document.querySelector('#send_but, #send_button, #submit_button'); if (stInput && stSendButton) { stInput.value = messageToSend; stInput.dispatchEvent(new Event('input', { bubbles: true })); stSendButton.click(); } else { throw new Error('SillyTavern input or send button not found.'); } } catch (e) { navigator.clipboard.writeText(messageToSend).then(() => { console.warn(`无法直接发送指令，已将内容复制到剪贴板：\\\\n${messageToSend}`); }).catch(err => { console.error(`无法发送指令或复制到剪贴板。\\\\n请手动复制：${messageToSend}`); }); } } }); }\\n        function handleSettingsChanges() { const settingsPanel = $('#settings'); if (!settingsPanel) return; const inputs = { fontFamily: $('#font-family-setting'), fontSize: $('#font-size-setting'), bgColor: $('#bg-color-setting'), primaryColor: $('#primary-color-setting'), contentBrightness: $('#brightness-setting'), resetBtn: $('#reset-settings-btn') }; const currentSettings = loadSettings(); UIUpdater.loadSettingsToPanel(currentSettings); Object.keys(inputs).forEach(key => { if (key === 'resetBtn' || !inputs[key]) return; inputs[key].addEventListener('input', () => { currentSettings[key] = inputs[key].value; UIUpdater.applySettings(currentSettings); saveSettings(currentSettings); }); }); if(inputs.resetBtn) { inputs.resetBtn.addEventListener('click', () => { localStorage.removeItem('tianxiang_settings'); UIUpdater.loadSettingsToPanel(defaultSettings); saveSettings(defaultSettings); }); } }\\n        function saveSettings(settings) { localStorage.setItem('tianxiang_settings', JSON.stringify(settings)); }\\n        function loadSettings() { const saved = localStorage.getItem('tianxiang_settings'); if (saved) { try { const parsed = JSON.parse(saved); const allKeysPresent = Object.keys(defaultSettings).every(key => key in parsed); if (allKeysPresent) return parsed; else { return { ...defaultSettings }; } } catch (e) { return { ...defaultSettings }; } } return { ...defaultSettings }; }\\n        function handleMomentsInteractions() { const momentsContainer = $('.moments-container'); if (momentsContainer) { momentsContainer.addEventListener('click', function(event) { const likeButton = event.target.closest('.like-action'); if (likeButton) { const icon = likeButton.querySelector('i'); const countSpan = likeButton.querySelector('.action-count'); let count = parseInt(countSpan.textContent) || 0; const isLiked = likeButton.dataset.liked === 'true'; if (isLiked) { icon.classList.remove('fas'); icon.classList.add('far'); likeButton.classList.remove('liked'); count = Math.max(0, count - 1); likeButton.dataset.liked = 'false'; } else { icon.classList.remove('far'); icon.classList.add('fas'); likeButton.classList.add('liked'); count++; likeButton.dataset.liked = 'true'; } countSpan.textContent = count; } }); } }\\n\\n        function processInjectedText(rawText) {\\n            if (typeof rawText !== 'string' || !rawText.trim()) { console.warn(\\\"Received empty or invalid data.\\\"); UIUpdater.updateMainContent(null); UIUpdater.updateOptions([]); UIUpdater.updateMessagesPanel([]); UIUpdater.updateMomentsData([]); return; }\\n            let gameContent = rawText;\\n            const gameTextMatch = rawText.match(/<gametext>([\\\\s\\\\S]*?)<\\\\/gametext>/i);\\n            if (gameTextMatch && gameTextMatch[1]) { gameContent = gameTextMatch[1]; }\\n            else { const overallMatch = rawText.match(/<overall>([\\\\s\\\\S]*?)<\\\\/overall>/i); if (overallMatch && overallMatch[1]) { gameContent = overallMatch[1]; } }\\n\\n            const mainData = DataExtractor.extractMainContent(gameContent);\\n            const optionsData = DataExtractor.extractOptions(gameContent);\\n            const chatData = DataExtractor.extractChatData(gameContent);\\n            const momentsData = DataExtractor.extractMomentsData(gameContent);\\n\\n            UIUpdater.updateMainContent(mainData);\\n            UIUpdater.updateOptions(optionsData);\\n            UIUpdater.updateMessagesPanel(chatData);\\n            UIUpdater.updateMomentsData(momentsData);\\n\\n            const momentsDot = $('.moments-dot');\\n            const momentsMenuItem = $('.menu-item[data-panel=\\\"moments\\\"]');\\n            if (momentsDot && momentsMenuItem && momentsData && momentsData.length > 0) {\\n                const currentMomentsCount = momentsData.length;\\n                const lastSeenCount = parseInt(localStorage.getItem('tianxiang_moments_last_seen_count') || '0');\\n                if (currentMomentsCount > lastSeenCount && !momentsMenuItem.classList.contains('active')) {\\n                    momentsDot.style.display = 'inline-block';\\n                } else {\\n                    momentsDot.style.display = 'none';\\n                    if (momentsMenuItem.classList.contains('active')) {\\n                        localStorage.setItem('tianxiang_moments_last_seen_count', currentMomentsCount.toString());\\n                    }\\n                }\\n            } else if (momentsDot) { momentsDot.style.display = 'none'; }\\n        }\\n        \\n        function handleDarkModeToggle() {\\n            const toggleBtn = $('#dark-mode-toggle');\\n            if (!toggleBtn) return;\\n            \\n            toggleBtn.addEventListener('click', function() {\\n                const isDark = document.documentElement.classList.toggle('dark');\\n                const icon = toggleBtn.querySelector('i');\\n                \\n                if (isDark) {\\n                    icon.className = 'fas fa-sun';\\n                } else {\\n                    icon.className = 'fas fa-moon';\\n                }\\n            });\\n        }\\n\\n        function addRippleEffect() {\\n            document.addEventListener('click', function(e) {\\n                const target = e.target.closest('.menu-item, .choice-option, .reset-button, .moment-action, .moment-nav-button');\\n                if (!target) return;\\n                \\n                const rect = target.getBoundingClientRect();\\n                const x = e.clientX - rect.left;\\n                const y = e.clientY - rect.top;\\n                \\n                const ripple = document.createElement('span');\\n                ripple.className = 'ripple-effect';\\n                ripple.style.cssText = `\\n                    position: absolute;\\n                    top: ${y}px;\\n                    left: ${x}px;\\n                    transform: translate(-50%, -50%);\\n                    width: 0;\\n                    height: 0;\\n                    background: rgba(255, 255, 255, 0.4);\\n                    border-radius: 50%;\\n                    pointer-events: none;\\n                    z-index: 10;\\n                    animation: ripple 0.6s linear;\\n                `;\\n                \\n                target.style.position = target.style.position || 'relative';\\n                target.style.overflow = 'hidden';\\n                target.appendChild(ripple);\\n                \\n                setTimeout(() => {\\n                    ripple.remove();\\n                }, 600);\\n            });\\n            \\n            const style = document.createElement('style');\\n            style.textContent = `\\n                @keyframes ripple {\\n                    0% {\\n                        width: 0;\\n                        height: 0;\\n                        opacity: 0.5;\\n                    }\\n                    100% {\\n                        width: 300px;\\n                        height: 300px;\\n                        opacity: 0;\\n                    }\\n                }\\n                \\n                .dark .ripple-effect {\\n                    background: rgba(255, 255, 255, 0.2);\\n                }\\n            `;\\n            document.head.appendChild(style);\\n        }\\n\\n        function init() {\\n            checkDarkMode();\\n            const savedSettings = loadSettings();\\n            UIUpdater.loadSettingsToPanel(savedSettings);\\n            handlePanelSwitching();\\n            handleSettingsChanges();\\n            handlePlayerChoiceClick();\\n            handleMomentsInteractions();\\n            handleDarkModeToggle();\\n            handleMomentNavigation();\\n            addRippleEffect();\\n\\n            $('#back-to-list-btn').addEventListener('click', switchToListView);\\n            document.body.addEventListener('click', handleGlobalMediaClick);\\n\\n            const viewer = $('.media-viewer');\\n            const closeBtn = viewer ? viewer.querySelector('.viewer-close') : null;\\n            if (closeBtn) closeBtn.addEventListener('click', () => viewer.classList.remove('active'));\\n            if (viewer) viewer.addEventListener('click', (e) => { if (e.target === viewer) viewer.classList.remove('active'); });\\n            document.addEventListener('keydown', (e) => { if (e.key === 'Escape' && viewer && viewer.classList.contains('active')) { viewer.classList.remove('active'); } });\\n\\n            const dataContainer = $('#injected-data-container');\\n            if (dataContainer) {\\n                const injectedRawData = dataContainer.textContent || \\\"\\\";\\n                processInjectedText(injectedRawData);\\n            } else {\\n                UIUpdater.updateMainContent(null); UIUpdater.updateOptions([]); UIUpdater.updateMessagesPanel([]); UIUpdater.updateMomentsData([]);\\n            }\\n        }\\n        document.addEventListener('DOMContentLoaded', init);\\n    })();\\n    </script>\\n</body>\\n</html>\\n```\",\"trimStrings\":[],\"placement\":[2],\"disabled\":false,\"markdownOnly\":true,\"promptOnly\":false,\"runOnEdit\":true,\"substituteRegex\":0,\"minDepth\":null,\"maxDepth\":2}],\"TavernHelper_scripts\":[]},\"group_only_greetings\":[],\"character_book\":{\"entries\":[{\"id\":0,\"keys\":[],\"secondary_keys\":[],\"comment\":\"格式要求\",\"content\":\"**核心规则：**\\n\\n你的任务是扮演一个剧情内容生成AI。\\n请严格按照下面提供的详尽模板结构来生成内容。**你生成的全部内容，最终必须作为一个整体，被包裹在<overall>...</overall>中输出。**\\n\\n**核心指令：**\\n\\n1.  **严格遵循格式**：你生成的所有内容，都必须严格使用提供的模板格式。不可以忽略其中的任何标题、标签或分隔符（如 `---CHAT_MESSAGE_SEPARATOR---` 和 `---SNS_POST_SEPARATOR---`）。所有内容都应被包括在格式之内，不应该有任何内容脱离指定的输出结构。\\n2.  **键值对规则**：“|”符号用于分隔键和值。左边是固定标签（例如“当前时间|”），右边是你需要根据剧情和上下文生成的具体变量内容（例如“14:35”）。\\n3.  **占位符替换**：模板中所有用花括号 `{}` 包裹的描述性文本（例如 `{此聊天会话的ID名称}` 或 `{{user}}`）都代表你需要填充的具体内容。请用有意义的、符合剧情逻辑的文本替换它们。\\n4.  **`<chatlog>` 内容**：这部分内容对剧情发展至关重要，请谨慎生成。\\n    * **会话ID区分**：不同 `会话ID` 的消息视为私信或不同群组的。多个相同 `会话ID` 的消息会被聚合到同一个群聊中。\\n    * **收件人**：{{user}}是消息的接收者，因此私信必须是其他人发给{{user}}的消息。群聊消息不受此限制。\\n5.  **`<sns>` 内容**：\\n    * **固定数量**：必须生成**三个**独立的社交网络帖子。\\n    * **发帖人**：发帖人不能是当前正文场景中的主要角色（因为他们当时没有时间发帖）。请为SNS帖子设定独立的角色。\\n    * **内容相关性**：帖子内容不必与主线剧情强相关，但应有趣、生活化，或提供一些背景氛围。\\n    * **图片/视频描述**：如果帖子或消息包含图片/视频，请用文字描述其内容。如果无，则可注明“无”或留空描述部分。\\n6.  **`<option>` 内容**：提供的选项应基于正文内容，并使用第三人称（例如，\\\"{{user}}决定...\\\"）。\\n\\n**请根据上述指令，填充以下模板，并将完整的填充结果包裹在<overall>...</overall>中输出：**\\n\\n\\n<overall>\\n<gametext>\\n <maincontent>\\n当前时间|{当前时间的精确到分钟表示，例如：14:30}\\n当前地点|{用户或主角所处的具体位置}\\n天气|{当前位置的天气状况}\\n正文|{此处填写主要剧情的详细描述。请确保内容引人入胜，并为后续的聊天记录和选项提供合理的上下文。}\\n </maincontent>\\n\\n<chatlog>\\n会话ID|{此聊天会话的ID名称，例如：\\\"作战指挥室\\\" 或 \\\"与线人的私聊\\\"}\\n发送者|{发送者的显示名称，例如：\\\"陈上尉\\\"}\\n消息内容|{消息的实际文本内容。可以是多行文本。确保此消息与剧情相关，并可能推动剧情发展。}\\n最后一条消息|{此聊天中最新消息的简短预览，例如：\\\"收到，正在处理！\\\"}\\n未读信息数量|{此聊天记录中 {{user}} 的未读消息数量，例如：\\\"2\\\"}\\n消息发送时间|{消息发送时的时间戳，例如：\\\"2025-05-10 14:30:00\\\" 或 \\\"3分钟前\\\"}\\n图片1|{如果消息包含图片1，此处描述图片内容；否则留空或填\\\"无\\\"}\\n图片2|{如果消息包含图片2，此处描述图片内容；否则留空或填\\\"无\\\"}\\n视频1|{如果消息包含视频1，此处描述视频内容；否则留空或填\\\"无\\\"}\\n视频2|{如果消息包含视频2，此处描述视频内容；否则留空或填\\\"无\\\"}\\n---CHAT_MESSAGE_SEPARATOR---\\n会话ID|{可以是与上一条不同的会话ID，例如：\\\"技术支援小组\\\"}\\n发送者|{发送者的显示名称，例如：\\\"林工程师\\\"}\\n消息内容|{另一条消息的实际文本内容。}\\n最后一条消息|{此聊天中最新消息的简短预览}\\n未读信息数量|{此聊天记录中 {{user}} 的未读消息数量}\\n消息发送时间|{消息发送时的时间戳}\\n图片1|{图片1内容描述，或\\\"无\\\"}\\n图片2|{图片2内容描述，或\\\"无\\\"}\\n视频1|{视频1内容描述，或\\\"无\\\"}\\n视频2|{视频2内容描述，或\\\"无\\\"}\\n</chatlog>\\n\\n<sns>\\n发帖id|{帖子1的发帖人ID或昵称，例如：\\\"战地小记者\\\"}\\n头像|{帖子1的发帖人头像的描述性文本或占位符，例如：\\\"一个戴着钢盔的卡通头像\\\"}\\n发帖时间|{帖子1的发布时间，例如：\\\"2025-05-10 12:00:00\\\" 或 \\\"2小时前\\\"}\\n标题|{帖子1的引人注目的标题，例如：\\\"前线直击：最新型号无人机投入实战！\\\"}\\n文案|{帖子1的有趣内容，或与大背景相关的侧面信息。文案中不需要标签。例如：\\\"今天在安全区边缘看到了几架新型号的侦察无人机，涂装超酷，飞行起来几乎没有声音！不知道性能怎么样。\\\"}\\n标签1|{帖子1的相关标签A，例如：\\\"#战地新闻\\\"}\\n标签2|{帖子1的相关标签B，例如：\\\"#科技前沿\\\"}\\n标签3|{帖子1的相关标签C，例如：\\\"#无人机\\\"}\\n标签4|{帖子1的相关标签D，例如：\\\"#每日观察\\\"}\\n点赞|{帖子1的点赞数，例如：\\\"288\\\"}\\n评论|{帖子1的评论数，例如：\\\"35\\\"}\\n转发|{帖子1的转发数，例如：\\\"12\\\"}\\n图片1|{帖子1的图片1内容描述，例如：\\\"一张新型无人机在空中飞行的照片\\\"，或\\\"无\\\"}\\n图片2|{帖子1的图片2内容描述，例如：\\\"无人机细节特写\\\"，或\\\"无\\\"}\\n视频1|{帖子1的视频1内容描述，例如：\\\"一段无人机低空掠过的短视频\\\"，或\\\"无\\\"}\\n视频2|{帖子1的视频2内容描述，或\\\"无\\\"}\\n评论id1|{帖子1的评论者ID A，例如：\\\"飞行爱好者老王\\\"}\\n评论1|{帖子1的评论内容 A，例如：\\\"这外形设计很独特，看起来机动性不错！\\\"}\\n评论id2|{帖子1的评论者ID B，例如：\\\"和平鸽\\\"}\\n评论2|{帖子1的评论内容 B，例如：\\\"希望科技都用在正确的地方...\\\"}\\n评论id3|{帖子1的评论者ID C，例如：\\\"军事迷小李\\\"}\\n评论3|{帖子1的评论内容 C，例如：\\\"求型号！求参数！\\\"}\\n评论id4|{帖子1的评论者ID D，例如：\\\"路过的工程师\\\"}\\n评论4|{帖子1的评论内容 D，例如：\\\"看这气动布局，应该是强调隐身和长航时。\\\"}\\n---SNS_POST_SEPARATOR---\\n发帖id|{帖子2的发帖人ID或昵称，例如：\\\"战地厨师长老刘\\\"}\\n头像|{帖子2的发帖人头像描述，例如：\\\"一个戴着高高厨师帽的胖大叔\\\"}\\n发帖时间|{帖子2的发布时间，例如：\\\"45分钟前\\\"}\\n标题|{帖子2的引人注目的标题，例如：\\\"今天的战地特供：压缩饼干豪华套餐！\\\"}\\n文案|{帖子2的有趣内容。文案中不需要标签。例如：\\\"别小看压缩饼干，加点自制辣酱，再配上一杯热咖啡，那滋味...嗯，至少管饱！明天争取给大家炖肉汤！#战地厨房 #黑暗料理变美食 #硬核生存\\\"}\\n标签1|{帖子2的相关标签X，例如：\\\"#战地美食\\\"}\\n标签2|{帖子2的相关标签Y，例如：\\\"#生存智慧\\\"}\\n标签3|{帖子2的相关标签Z，例如：\\\"#厨艺大挑战\\\"}\\n标签4|{帖子2的相关标签W，例如：\\\"#乐观生活\\\"}\\n点赞|{帖子2的点赞数，例如：\\\"152\\\"}\\n评论|{帖子2的评论数，例如：\\\"40\\\"}\\n转发|{帖子2的转发数，例如：\\\"8\\\"}\\n图片1|{帖子2的图片1内容描述，例如：\\\"一块压缩饼干旁边放着一小碟辣酱和一杯咖啡\\\"，或\\\"无\\\"}\\n图片2|{帖子2的图片2内容描述，或\\\"无\\\"}\\n视频1|{帖子2的视频1内容描述，或\\\"无\\\"}\\n视频2|{帖子2的视频2内容描述，或\\\"无\\\"}\\n评论id1|{帖子2的评论者ID X，例如：\\\"饿坏了的士兵小张\\\"}\\n评论1|{帖子2的评论内容 X，例如：\\\"老刘，我的命都是你给的！辣酱再多来点！\\\"}\\n评论id2|{帖子2的评论者ID Y，例如：\\\"后勤小妹\\\"}\\n评论2|{帖子2的评论内容 Y，例如：\\\"刘师傅辛苦了！明天能申请多加个蛋吗？\\\"}\\n评论id3|{帖子2的评论者ID Z，例如：\\\"美食评论家（自封）\\\"}\\n评论3|{帖子2的评论内容 Z，例如：\\\"从摆盘上看，充满了后现代解构主义的粗犷美感。\\\"}\\n评论id4|{帖子2的评论者ID W，例如：\\\"想家的小王\\\"}\\n评论4|{帖子2的评论内容 W，例如：\\\"虽然简单，但感觉很温暖。\\\"}\\n---SNS_POST_SEPARATOR---\\n发帖id|{帖子3的发帖人ID或昵称，例如：\\\"战地文艺青年\\\"}\\n头像|{帖子3的发帖人头像描述，例如：\\\"一个抱着吉他的剪影\\\"}\\n发帖时间|{帖子3的发布时间，例如：\\\"刚刚\\\"}\\n标题|{帖子3的引人注目的标题，可选，例如：\\\"黄昏下的随想\\\"}\\n文案|{帖子3的有趣内容，可以没有标题。文案中不需要标签。例如：\\\"夕阳染红了西边的天空，炮火声暂时停歇。远处传来断断续续的口琴声，不知道是谁在思念故乡。愿和平早日到来。}\\n标签1|{帖子3的相关标签1，例如：\\\"#随感\\\"}\\n标签2|{帖子3的相关标签2，例如：\\\"#黄昏\\\"}\\n标签3|{帖子3的相关标签3，例如：\\\"#祈愿和平\\\"}\\n标签4|{帖子3的相关标签4，例如：\\\"#生活碎片\\\"}\\n点赞|{帖子3的点赞数，例如：\\\"305\\\"}\\n评论|{帖子3的评论数，例如：\\\"60\\\"}\\n转发|{帖子3的转发数，例如：\\\"22\\\"}\\n图片1|{帖子3的图片1内容描述，例如：\\\"一张黄昏下战壕剪影的照片\\\"，或\\\"无\\\"}\\n图片2|{帖子3的图片2内容描述，或\\\"无\\\"}\\n视频1|{帖子3的视频1内容描述，或\\\"无\\\"}\\n视频2|{帖子3的视频2内容描述，或\\\"无\\\"}\\n评论id1|{帖子3的评论者ID 1，例如：\\\"远方的爱人\\\"}\\n评论1|{帖子3的评论内容 1，例如：\\\"等你平安回来。\\\"}\\n评论id2|{帖子3的评论者ID 2，例如：\\\"音乐发烧友\\\"}\\n评论2|{帖子3的评论内容 2，例如：\\\"是《友谊地久天长》的调子吗？好怀念。\\\"}\\n评论id3|{帖子3的评论者ID 3，例如：\\\"历史记录者\\\"}\\n评论3|{帖子3的评论内容 3，例如：\\\"每一刻的感受都值得被记录。\\\"}\\n评论id4|{帖子3的评论者ID 4，例如：\\\"同袍兄弟\\\"}\\n评论4|{帖子3的评论内容 4，例如：\\\"都会过去的，兄弟。\\\"}\\n</sns>\\n\\n<option>\\n选项1|{根据正文内容给出的第一个行动选项，使用第三人称，例如：“{{user}}决定立刻向上级汇报这一发现。”}\\n选项2|{根据正文内容给出的第二个行动选项，使用第三人称，例如：“{{user}}选择先潜伏观察，收集更多情报。”}\\n选项3|{根据正文内容给出的第三个行动选项，使用第三人称，例如：“{{user}}认为需要先与队友汇合，共同商议对策。”}\\n</option>\\n\\n</gametext>\\n</overall>\",\"constant\":true,\"selective\":true,\"insertion_order\":999,\"enabled\":true,\"position\":\"after_char\",\"use_regex\":true,\"extensions\":{\"position\":4,\"exclude_recursion\":false,\"display_index\":0,\"probability\":100,\"useProbability\":true,\"depth\":0,\"selectiveLogic\":0,\"group\":\"\",\"group_override\":false,\"group_weight\":100,\"prevent_recursion\":false,\"delay_until_recursion\":false,\"scan_depth\":null,\"match_whole_words\":null,\"use_group_scoring\":false,\"case_sensitive\":null,\"automation_id\":\"\",\"role\":0,\"vectorized\":false,\"sticky\":0,\"cooldown\":0,\"delay\":0}}],\"name\":\"【高度美化】游戏界面\"}},\"create_date\":\"2025-5-11 @02h 53m 59s 769ms\",\"chat\":\"2025-5-11 @02h 53m 59s 769ms\"}"}