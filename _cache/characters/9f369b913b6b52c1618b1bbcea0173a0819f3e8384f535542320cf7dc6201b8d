{"key":"data/default-user/characters/地图导航模块.png-1745460655398.2942","value":"{\"name\":\"地图导航模块\",\"description\":\" \",\"personality\":\"\",\"scenario\":\"\",\"first_mes\":\"局部正则上移,世界书设为全局,欢迎把本系统集成到你的卡里!留个连接帮忙推广下,谢谢!\\r\\n需要安装前端助手!\\r\\n\\r\\n\\r\\n<map_data>\\r\\n [MOVEBLOCK:NO]\\r\\n [Aki的工具\\r\\n - World Builder:AKI\\r\\n - Character Builder:\\r\\n - 百度贴吧评论系统: ]\\r\\n [住宅区街道\\r\\n - 哲家门口: \\r\\n - 千纱家门口:千纱\\r\\n - 公园入口: ]\\r\\n [商业街\\r\\n - 便利店:妈妈\\r\\n - 游戏厅:灯山 雪\\r\\n - 书店: ]\\r\\n </map_data>\",\"mes_example\":\"\",\"creatorcomment\":\"\",\"avatar\":\"none\",\"chat\":\"地图导航模块 - 2025-04-16@01h58m55s\",\"talkativeness\":\"0.5\",\"fav\":false,\"tags\":[],\"spec\":\"chara_card_v3\",\"spec_version\":\"3.0\",\"data\":{\"name\":\"地图导航模块\",\"description\":\" \",\"personality\":\"\",\"scenario\":\"\",\"first_mes\":\"局部正则上移,世界书设为全局,欢迎把本系统集成到你的卡里!留个连接帮忙推广下,谢谢!\\r\\n需要安装前端助手!\\r\\n\\r\\n\\r\\n<map_data>\\r\\n [MOVEBLOCK:NO]\\r\\n [Aki的工具\\r\\n - World Builder:AKI\\r\\n - Character Builder:\\r\\n - 百度贴吧评论系统: ]\\r\\n [住宅区街道\\r\\n - 哲家门口: \\r\\n - 千纱家门口:千纱\\r\\n - 公园入口: ]\\r\\n [商业街\\r\\n - 便利店:妈妈\\r\\n - 游戏厅:灯山 雪\\r\\n - 书店: ]\\r\\n </map_data>\",\"mes_example\":\"\",\"creator_notes\":\"\",\"system_prompt\":\"\",\"post_history_instructions\":\"\",\"tags\":[],\"creator\":\"\",\"character_version\":\"\",\"alternate_greetings\":[],\"extensions\":{\"talkativeness\":\"0.5\",\"fav\":false,\"world\":\"\",\"depth_prompt\":{\"prompt\":\"\",\"depth\":4,\"role\":\"system\"},\"regex_scripts\":[{\"id\":\"b8af4f7e-c557-4871-b43e-bb0947d853f4\",\"scriptName\":\"[玻璃拟态风UI]脚本-导航模块[四选一]\",\"findRegex\":\"<map_data>([\\\\s\\\\S]*?)<\\\\/map_data>\",\"replaceString\":\"```\\n<!DOCTYPE html>\\n<html lang=\\\"zh-CN\\\">\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    <title>恋爱冒险地图</title>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\\\">\\n    <link href=\\\"https://fonts.googleapis.com/css2?family=ZCOOL+XiaoWei&family=ZCOOL+QingKe+HuangYou&display=swap\\\" rel=\\\"stylesheet\\\">\\n</head>\\n<body>\\n    <div id=\\\"map-data-source\\\" style=\\\"display:none;\\\">$1</div>\\n    <div class=\\\"map-interface\\\">\\n        <div class=\\\"map-header\\\">\\n            <h2 id=\\\"map-title\\\">通用地图导航</h2>\\n        </div>\\n\\n        <!-- 移动限制提示 -->\\n        <div id=\\\"movement-alert\\\" class=\\\"movement-alert hidden\\\">\\n            <i class=\\\"fas fa-exclamation-triangle\\\"></i> 提示：你现在无法移动        </div>\\n\\n        <!-- 主地点选择区域 -->\\n        <div id=\\\"main-locations\\\" class=\\\"location-grid\\\">\\n            <!-- 主要地点按钮将在这里动态生成 -->\\n        </div>\\n\\n        <!-- 次级地点选择区域 -->\\n        <div id=\\\"sub-locations\\\" class=\\\"sub-location-grid hidden\\\">\\n            <!-- 次级地点按钮将在这里动态生成 -->\\n        </div>\\n\\n        <!-- 地点详情区域 -->\\n        <div id=\\\"location-details\\\" class=\\\"location-details hidden\\\">\\n            <div class=\\\"detail-header\\\">\\n                <i class=\\\"fas fa-map-marker-alt\\\"></i> <span id=\\\"selected-location\\\">未选择</span>\\n            </div>\\n            <div class=\\\"detail-content\\\">\\n                <div class=\\\"character-section\\\">\\n                    <div class=\\\"section-title\\\"><i class=\\\"fas fa-user-friends\\\"></i> 可能遇见的人</div>\\n                    <div id=\\\"location-characters\\\" class=\\\"character-list\\\">\\n                        <!-- 角色列表将在这里动态生成 -->\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"action-section\\\">\\n                <button id=\\\"confirm-move-btn\\\" class=\\\"action-button\\\">\\n                    <i class=\\\"fas fa-walking\\\"></i> 前往此处\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <!-- 确认移动弹窗 -->\\n    <div id=\\\"confirm-overlay\\\" class=\\\"modal-overlay hidden\\\">\\n        <div class=\\\"confirm-dialog\\\">\\n            <h4>确认前往</h4>\\n            <p id=\\\"confirm-message\\\"></p>\\n            <div class=\\\"dialog-buttons\\\">\\n                <button id=\\\"cancel-move-btn\\\" class=\\\"dialog-button cancel-button\\\">\\n                    <i class=\\\"fas fa-times\\\"></i> 再想想\\n                </button>\\n                <button id=\\\"execute-move-btn\\\" class=\\\"dialog-button confirm-button\\\">\\n                    <i class=\\\"fas fa-check\\\"></i> 出发吧\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <script>\\n        // 全局变量\\n        let mapData = null;\\n        let selectedMain = null;\\n        let selectedSub = null;\\n        let selectedCharacters = [];\\n        let hasMoveBlock = false;\\n\\n        // 解析地图数据\\n        function parseMapData(text) {\\n            if (!text || typeof text !== 'string') {\\n                console.error(\\\"无效的地图数据\\\", text);\\n                return null;\\n            }\\n\\n            console.log(\\\"开始解析地图数据:\\\", text.substring(0, 50) + \\\"...\\\");\\n\\n            const data = {\\n                moveBlocked: false,\\n                locations: []\\n            };\\n\\n            try {\\n                // 解析移动限制状态\\n                const moveBlockMatch = /\\\\[MOVEBLOCK:(YES|NO)\\\\]/.exec(text);\\n                if (moveBlockMatch) {\\n                    data.moveBlocked = moveBlockMatch[1] === 'YES';\\n                }\\n\\n                // 解析地点数据\\n                const locationMatches = Array.from(text.matchAll(/\\\\[(.*?)(?=\\\\]|\\\\[(?!.*\\\\[))/gs));\\n                console.log(`找到 ${locationMatches.length} 个位置匹配项`);\\n                \\n                for (const match of locationMatches) {\\n                    const locationText = match[1].trim();\\n                    \\n                    // 跳过MOVEBLOCK行\\n                    if (locationText.startsWith('MOVEBLOCK:')) {\\n                        console.log(\\\"跳过MOVEBLOCK行\\\");\\n                        continue;\\n                    }\\n                    \\n                    const lines = locationText.split('\\\\n');\\n                    if (lines.length < 1) continue;\\n                    \\n                    const mainLocation = lines[0].trim();\\n                    console.log(\\\"处理主地点:\\\", mainLocation);\\n                    const subLocations = [];\\n                    \\n                    // 解析子地点\\n                    for (let i = 1; i < lines.length; i++) {\\n                        const subLine = lines[i].trim();\\n                        if (!subLine.startsWith('-')) continue;\\n                        \\n                        // 格式: - 地点X: 角色1, 角色2\\n                        const subMatch = /- (.*?):(.*?)$/.exec(subLine);\\n                        if (subMatch) {\\n                            const subName = subMatch[1].trim();\\n                            const charactersText = subMatch[2].trim();\\n                            const characters = charactersText.split(',').map(c => c.trim()).filter(c => c);\\n                            \\n                            console.log(`  子地点: ${subName}, 角色: ${characters.join(', ')}`);\\n                            \\n                            subLocations.push({\\n                                name: subName,\\n                                characters: characters\\n                            });\\n                        }\\n                    }\\n                    \\n                    if (mainLocation) {\\n                        data.locations.push({\\n                            name: mainLocation,\\n                            subLocations: subLocations\\n                        });\\n                    }\\n                }\\n                \\n                console.log(\\\"解析后的地图数据:\\\", data);\\n                return data;\\n            } catch (error) {\\n                console.error(\\\"解析地图数据时出错:\\\", error);\\n                return null;\\n            }\\n        }\\n\\n        // 渲染地图界面\\n        function renderMapInterface(mapData) {\\n            if (!mapData) return;\\n            \\n            hasMoveBlock = mapData.moveBlocked;\\n            \\n            // 显示/隐藏移动限制提示\\n            const movementAlert = document.getElementById('movement-alert');\\n            if (hasMoveBlock) {\\n                movementAlert.classList.remove('hidden');\\n            } else {\\n                movementAlert.classList.add('hidden');\\n            }\\n            \\n            // 渲染主地点按钮\\n            const mainLocationsContainer = document.getElementById('main-locations');\\n            mainLocationsContainer.innerHTML = '';\\n            \\n            mapData.locations.forEach(location => {\\n                const button = document.createElement('button');\\n                button.className = 'location-button';\\n                \\n                // 为不同地点设置不同的图标\\n                let icon = 'fa-map';\\n                if (location.name.includes('学校')) icon = 'fa-school';\\n                else if (location.name.includes('公园')) icon = 'fa-tree';\\n                else if (location.name.includes('商业')) icon = 'fa-store';\\n                else if (location.name.includes('住宅')) icon = 'fa-home';\\n                else if (location.name.includes('站')) icon = 'fa-train';\\n                \\n                button.innerHTML = `<i class=\\\"fas ${icon}\\\"></i> ${location.name}`;\\n                button.dataset.location = location.name;\\n                \\n                button.addEventListener('click', () => selectMainLocation(location));\\n                \\n                if (hasMoveBlock) {\\n                    button.disabled = true;\\n                    button.classList.add('disabled');\\n                }\\n                \\n                mainLocationsContainer.appendChild(button);\\n            });\\n            \\n            // 隐藏子地点和详情\\n            document.getElementById('sub-locations').classList.add('hidden');\\n            document.getElementById('location-details').classList.add('hidden');\\n        }\\n        \\n        // 选择主地点\\n        function selectMainLocation(location) {\\n            if (hasMoveBlock) return;\\n            \\n            selectedMain = location;\\n            \\n            // 高亮选中的主地点按钮\\n            const allMainButtons = document.querySelectorAll('#main-locations .location-button');\\n            allMainButtons.forEach(btn => {\\n                btn.classList.remove('selected');\\n                if (btn.dataset.location === location.name) {\\n                    btn.classList.add('selected');\\n                }\\n            });\\n            \\n            // 渲染子地点\\n            const subLocationsContainer = document.getElementById('sub-locations');\\n            subLocationsContainer.innerHTML = '';\\n            \\n            location.subLocations.forEach(subLocation => {\\n                const button = document.createElement('button');\\n                button.className = 'sub-location-button';\\n                \\n                // 为不同子地点设置不同的图标\\n                let icon = 'fa-map-pin';\\n                if (subLocation.name.includes('教室')) icon = 'fa-chalkboard';\\n                else if (subLocation.name.includes('咖啡')) icon = 'fa-coffee';\\n                else if (subLocation.name.includes('图书')) icon = 'fa-book';\\n                else if (subLocation.name.includes('商店')) icon = 'fa-shopping-bag';\\n                else if (subLocation.name.includes('广场')) icon = 'fa-clock';\\n                \\n                button.innerHTML = `<i class=\\\"fas ${icon}\\\"></i> ${subLocation.name}`;\\n                button.dataset.sublocation = subLocation.name;\\n                \\n                button.addEventListener('click', () => selectSubLocation(subLocation));\\n                \\n                subLocationsContainer.appendChild(button);\\n            });\\n            \\n            // 显示子地点区域\\n            subLocationsContainer.classList.remove('hidden');\\n            \\n            // 隐藏详情区域\\n            document.getElementById('location-details').classList.add('hidden');\\n            \\n            // 重置子地点选择\\n            selectedSub = null;\\n        }\\n        \\n        // 选择子地点\\n        function selectSubLocation(subLocation) {\\n            if (hasMoveBlock) return;\\n            \\n            selectedSub = subLocation;\\n            selectedCharacters = subLocation.characters;\\n            \\n            // 高亮选中的子地点按钮\\n            const allSubButtons = document.querySelectorAll('#sub-locations .sub-location-button');\\n            allSubButtons.forEach(btn => {\\n                btn.classList.remove('selected');\\n                if (btn.dataset.sublocation === subLocation.name) {\\n                    btn.classList.add('selected');\\n                }\\n            });\\n            \\n            // 更新地点详情\\n            document.getElementById('selected-location').textContent = `${selectedMain.name} - ${subLocation.name}`;\\n            \\n            // 更新角色列表\\n            const charactersContainer = document.getElementById('location-characters');\\n            charactersContainer.innerHTML = '';\\n            \\n            if (subLocation.characters.length > 0) {\\n                subLocation.characters.forEach(character => {\\n                    const charElement = document.createElement('div');\\n                    charElement.className = 'character-item';\\n                    charElement.innerHTML = `<i class=\\\"fas fa-user\\\"></i> ${character}`;\\n                    charactersContainer.appendChild(charElement);\\n                });\\n            } else {\\n                const noCharElement = document.createElement('div');\\n                noCharElement.className = 'character-item empty';\\n                noCharElement.innerHTML = `<i class=\\\"fas fa-user-slash\\\"></i> 这里没有人`;\\n                charactersContainer.appendChild(noCharElement);\\n            }\\n            \\n            // 显示详情区域\\n            document.getElementById('location-details').classList.remove('hidden');\\n        }\\n        \\n        // 确认移动\\n        function confirmMove() {\\n            if (hasMoveBlock || !selectedMain || !selectedSub) return;\\n            \\n            const locationName = `${selectedMain.name} - ${selectedSub.name}`;\\n            const characters = selectedCharacters.join(', ');\\n            \\n            // 显示确认对话框\\n            const confirmMessage = document.getElementById('confirm-message');\\n            if (characters) {\\n                confirmMessage.textContent = `前往 ${locationName}？你可能会遇见：${characters}`;\\n            } else {\\n                confirmMessage.textContent = `前往 ${locationName}？那里好像没有人。`;\\n            }\\n            \\n            document.getElementById('confirm-overlay').classList.remove('hidden');\\n        }\\n        \\n        // 执行移动\\n        function executeMove() {\\n            if (hasMoveBlock || !selectedMain || !selectedSub) return;\\n            \\n            const locationName = `${selectedMain.name} - ${selectedSub.name}`;\\n            const characters = selectedCharacters.join(',');\\n            \\n            // 构建移动消息\\n            let message = `<request:{{user}}前往了${locationName}.`;\\n            if (characters) {\\n                message += `${characters}在那里`;\\n            }\\n            message += \\\">\\\";\\n            \\n            // 如果存在 triggerSlash 函数，发送消息\\n            if (typeof triggerSlash === 'function') {\\n                try {\\n                    triggerSlash(`/send ${message} || /trigger`);\\n                } catch (e) {\\n                    console.error(\\\"发送消息时出错:\\\", e);\\n                    alert(\\\"发送消息失败，请重试。\\\");\\n                }\\n            } else {\\n                console.log(\\\"移动命令:\\\", message);\\n                alert(\\\"移动请求已生成。在实际环境中，这将发送到AI。\\\");\\n            }\\n            \\n            // 隐藏确认对话框\\n            document.getElementById('confirm-overlay').classList.add('hidden');\\n            \\n            // 重置选择\\n            resetSelection();\\n        }\\n        \\n        // 重置选择\\n        function resetSelection() {\\n            selectedMain = null;\\n            selectedSub = null;\\n            selectedCharacters = [];\\n            \\n            // 清除所有选中状态\\n            document.querySelectorAll('.location-button, .sub-location-button').forEach(btn => {\\n                btn.classList.remove('selected');\\n            });\\n            \\n            // 隐藏子地点和详情\\n            document.getElementById('sub-locations').classList.add('hidden');\\n            document.getElementById('location-details').classList.add('hidden');\\n        }\\n        \\n        // 处理地图数据\\n        function processMapData() {\\n            const dataSource = document.getElementById('map-data-source');\\n            if (!dataSource) {\\n                console.error(\\\"未找到地图数据源元素\\\");\\n                return;\\n            }\\n            \\n            let mapText = dataSource.textContent || dataSource.innerText;\\n            console.log(\\\"获取到的地图数据文本:\\\", mapText ? \\\"有数据\\\" : \\\"无数据\\\", \\\"长度:\\\", mapText ? mapText.length : 0);\\n            \\n            // 尝试从父窗口获取数据（SillyTavern环境）\\n            try {\\n                if (window.parent && window.parent !== window) {\\n                    console.log(\\\"在iframe中运行，尝试从SillyTavern获取数据\\\");\\n                    \\n                    // 尝试获取所有消息元素\\n                    const allMessages = window.parent.document.querySelectorAll('.mes_text, .mes_content, .message-content, .message_text');\\n                    console.log(`找到 ${allMessages.length} 个可能的消息元素`);\\n                    \\n                    // 检查最近的几条消息\\n                    let foundMapData = false;\\n                    for (let i = allMessages.length - 1; i >= 0 && i >= allMessages.length - 5; i--) {\\n                        const messageText = allMessages[i].textContent || allMessages[i].innerText;\\n                        console.log(`检查消息 #${i}，长度: ${messageText.length}，前30个字符: ${messageText.substring(0, 30)}...`);\\n                        \\n                        // 同时检查旧格式[EMOTION:]和新格式[MOVEBLOCK:]\\n                        if (messageText && (messageText.includes('[EMOTION:') || messageText.includes('[MOVEBLOCK:'))) {\\n                            console.log(`在消息 #${i} 中找到地图数据`);\\n                            mapText = messageText;\\n                            foundMapData = true;\\n                            break;\\n                        }\\n                    }\\n                    \\n                    if (!foundMapData) {\\n                        console.log(\\\"在消息中未找到地图数据，尝试直接在页面中搜索\\\");\\n                        // 尝试在整个文档中搜索地图数据格式\\n                        const bodyText = window.parent.document.body.textContent || window.parent.document.body.innerText;\\n                        \\n                        // 先尝试查找新格式\\n                        let mapDataStart = bodyText.indexOf('[MOVEBLOCK:');\\n                        \\n                        // 如果没找到新格式，尝试查找旧格式\\n                        if (mapDataStart === -1) {\\n                            mapDataStart = bodyText.indexOf('[EMOTION:');\\n                        }\\n                        \\n                        if (mapDataStart !== -1) {\\n                            // 找到开始标记，现在找到结束位置（假设地图数据以 ']' 结尾且后面不是另一个地图数据块）\\n                            let mapDataEnd = bodyText.indexOf(']', mapDataStart);\\n                            while (bodyText.charAt(mapDataEnd + 1) === '[') {\\n                                mapDataEnd = bodyText.indexOf(']', mapDataEnd + 1);\\n                            }\\n                            \\n                            if (mapDataEnd !== -1) {\\n                                const extractedData = bodyText.substring(mapDataStart, mapDataEnd + 1);\\n                                console.log(\\\"从页面提取的地图数据:\\\", extractedData.substring(0, 50) + \\\"...\\\");\\n                                if (extractedData.includes('\\\\n')) {\\n                                    mapText = extractedData;\\n                                }\\n                            }\\n                        }\\n                    }\\n                }\\n            } catch (e) {\\n                console.log(\\\"无法从父窗口获取数据:\\\", e);\\n            }\\n            \\n            // 如果提供了URL参数中的数据，使用它\\n            try {\\n                const urlParams = new URLSearchParams(window.location.search);\\n                const urlData = urlParams.get('data');\\n                if (urlData) {\\n                    const decodedData = decodeURIComponent(urlData);\\n                    console.log(\\\"从URL参数获取数据:\\\", decodedData.substring(0, 30) + \\\"...\\\");\\n                    if (decodedData.includes('[EMOTION:') || decodedData.includes('[MOVEBLOCK:')) {\\n                        mapText = decodedData;\\n                    }\\n                }\\n            } catch (e) {\\n                console.log(\\\"无法从URL参数获取数据:\\\", e);\\n            }\\n            \\n            // 直接尝试使用用户提供的测试数据\\n            if (!mapText || (!mapText.includes('[EMOTION:') && !mapText.includes('[MOVEBLOCK:'))) {\\n                console.log(\\\"尝试使用测试数据\\\");\\n                mapText = `[MOVEBLOCK:NO]\\n[校园区域\\n- 教学楼: 班主任, 数学老师\\n- 图书馆: 文学社社长, 图书管理员\\n- 操场: 体育老师, 田径队队长]\\n[商业街\\n- 咖啡厅: 服务员小雅, 钢琴少女\\n- 游戏厅: 游戏高手小明, 不良少年\\n- 书店: 眼镜店主, 神秘顾客]\\n[住宅区\\n- 公寓楼: 邻居阿姨, 宠物猫咪\\n- 小公园: 晨练老人, 遛狗少年\\n- 便利店: 店长, 兼职学生]`;\\n                \\n                dataSource.textContent = mapText;\\n                console.log(\\\"已设置测试数据\\\");\\n            }\\n            \\n            // 兼容旧版数据格式（EMOTION -> MOVEBLOCK）\\n            if (mapText && mapText.includes('[EMOTION:')) {\\n                console.log(\\\"转换旧版数据格式（EMOTION -> MOVEBLOCK）\\\");\\n                mapText = mapText.replace(/\\\\[EMOTION:(BAD|GOOD)\\\\]/g, function(match, state) {\\n                    return `[MOVEBLOCK:${state === 'BAD' ? 'YES' : 'NO'}]`;\\n                });\\n            }\\n            \\n            // 现在解析和渲染地图数据\\n            mapData = parseMapData(mapText);\\n            \\n            if (mapData) {\\n                renderMapInterface(mapData);\\n            } else {\\n                console.error(\\\"地图数据解析失败\\\");\\n            }\\n        }\\n        \\n        // 注册事件监听器\\n        function setupEventListeners() {\\n            // 确认移动按钮\\n            document.getElementById('confirm-move-btn').addEventListener('click', confirmMove);\\n            \\n            // 确认对话框按钮\\n            document.getElementById('cancel-move-btn').addEventListener('click', () => {\\n                document.getElementById('confirm-overlay').classList.add('hidden');\\n            });\\n            \\n            document.getElementById('execute-move-btn').addEventListener('click', executeMove);\\n        }\\n        \\n        // 初始化\\n        function init() {\\n            // 设置事件监听器\\n            setupEventListeners();\\n            \\n            // 处理地图数据\\n            processMapData();\\n            \\n            // 监听SillyTavern消息更新\\n            if (window.parent && window.parent !== window && typeof window.parent.eventOn === 'function' && window.parent.tavern_events) {\\n                window.parent.eventOn(window.parent.tavern_events.MESSAGE_UPDATED, () => {\\n                    setTimeout(processMapData, 300);\\n                });\\n                window.parent.eventOn(window.parent.tavern_events.MESSAGE_RECEIVED, () => {\\n                    setTimeout(processMapData, 300);\\n                });\\n            }\\n        }\\n        \\n        // 页面加载完成后初始化\\n        document.addEventListener('DOMContentLoaded', init);\\n    </script>\\n    \\n    <style>\\n        @import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css'); /* Re-ensure FontAwesome */\\n        @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+SC:wght@300;400;500&display=swap'); /* Modern Chinese font */\\n        @import url('https://fonts.googleapis.com/css2?family=ZCOOL+XiaoWei&family=ZCOOL+QingKe+HuangYou&display=swap'); /* Fallback */\\n\\n        :root {\\n            /* Glassmorphism Palette & Properties */\\n            --glass-bg: rgba(255, 255, 255, 0.35);         /* 主背景 - 半透明白 */\\n            --glass-bg-hover: rgba(255, 255, 255, 0.5);    /* 悬停背景 */\\n            --glass-bg-selected: rgba(255, 255, 255, 0.6); /* 选中背景 */\\n            --glass-border: rgba(255, 255, 255, 0.5);      /* 边框 - 半透明白 */\\n            --glass-border-strong: rgba(255, 255, 255, 0.8); /* 强边框 */\\n            --glass-text-dark: #1f1f1f;                    /* 深色文字 - 近黑 */\\n            --glass-text-medium: #555555;                  /* 中色文字 */\\n            --glass-text-light: #ffffff;                   /* 浅色文字 */\\n            --glass-primary: #3b82f6;                     /* 主色 - 活力蓝 */\\n            --glass-primary-light: #93c5fd;               /* 浅主色 */\\n            --glass-success: #10b981;                     /* 成功 - 活力绿 */\\n            --glass-warning: #f59e0b;                     /* 警告 - 活力黄 */\\n            --glass-danger: #ef4444;                      /* 危险 - 活力红 */\\n            --glass-accent: #8b5cf6;                      /* 强调色 - 紫罗兰 */\\n            \\n            --font-main: 'Noto Sans SC', 'ZCOOL XiaoWei', \\\"Microsoft YaHei\\\", sans-serif; /* 主字体 */\\n            --font-title: 'ZCOOL QingKe HuangYou', 'Noto Sans SC', sans-serif; /* 标题字体 */\\n            \\n            /* Glassmorphism Effects */\\n            --glass-blur: 12px;                           /* 背景模糊度 */\\n            --glass-border-radius-large: 24px;           /* 大圆角 */\\n            --glass-border-radius-medium: 16px;          /* 中圆角 */\\n            --glass-border-radius-small: 12px;           /* 小圆角 */\\n            --glass-shadow: 0 8px 32px rgba(31, 38, 135, 0.15); /* 柔和阴影 */\\n            --glass-shadow-hover: 0 12px 36px rgba(31, 38, 135, 0.2); /* 悬停阴影 */\\n        }\\n\\n        body {\\n            background-color: transparent; \\n            /* For Glassmorphism demo, add a background to the parent or body */\\n            /* Example: background: linear-gradient(to right top, #65dfc9, #6cdbeb); */\\n            /* Example: background-image: url('your-background-image.jpg'); background-size: cover; */\\n            margin: 0;\\n            padding: 10px;\\n            font-family: var(--font-main);\\n            color: var(--glass-text-dark);\\n            box-sizing: border-box;\\n            font-weight: 400; /* Regular weight */\\n        }\\n\\n        /* 地图界面容器 */\\n        .map-interface {\\n            max-width: 100%;\\n            width: 100%;\\n            margin: 10px auto; /* Add some margin */\\n            background: var(--glass-bg);\\n            backdrop-filter: blur(var(--glass-blur));\\n            -webkit-backdrop-filter: blur(var(--glass-blur)); /* Safari support */\\n            border: 1px solid var(--glass-border);\\n            border-radius: var(--glass-border-radius-large);\\n            box-shadow: var(--glass-shadow);\\n            padding: 25px;\\n            box-sizing: border-box;\\n            position: relative;\\n            overflow: hidden; /* Important for border-radius with backdrop-filter */\\n        }\\n\\n        /* 地图标题 */\\n        .map-header {\\n            text-align: center;\\n            margin-bottom: 25px;\\n            padding-bottom: 15px;\\n            border-bottom: 1px solid var(--glass-border);\\n        }\\n\\n        .map-header h2 {\\n            font-size: 24px;\\n            margin: 0;\\n            padding: 5px;\\n            line-height: 1.4;\\n            color: var(--glass-text-dark);\\n            font-family: var(--font-title);\\n            position: relative;\\n            font-weight: 500; /* Medium weight */\\n        }\\n\\n        .map-header h2:before,\\n        .map-header h2:after {\\n             content: '✨'; /* Sparkle icon */\\n             display: inline-block;\\n             margin: 0 12px;\\n             color: var(--glass-primary);\\n             font-size: 20px;\\n             opacity: 0.8;\\n        }\\n\\n        /* 移动限制提示 */\\n        .movement-alert {\\n            background: rgba(245, 158, 11, 0.3); /* Semi-transparent warning bg */\\n            backdrop-filter: blur(5px);\\n            -webkit-backdrop-filter: blur(5px);\\n            border: 1px solid rgba(245, 158, 11, 0.5);\\n            border-radius: var(--glass-border-radius-medium);\\n            padding: 15px;\\n            margin-bottom: 25px;\\n            text-align: center;\\n            color: var(--glass-text-dark);\\n            font-weight: 500;\\n            box-shadow: none;\\n            animation: subtle-pulse 3s infinite ease-in-out;\\n        }\\n        \\n        @keyframes subtle-pulse {\\n             0%, 100% { opacity: 0.9; }\\n             50% { opacity: 1; }\\n        }\\n\\n        .movement-alert i {\\n            margin-right: 8px;\\n            color: var(--glass-warning);\\n            font-size: 16px;\\n            display: inline-block; /* Ensure icon is shown */\\n        }\\n        /* Remove text indicator if icon is used */\\n         .movement-alert::before {\\n            content: \\\"\\\";\\n         }\\n\\n\\n        /* 地点选择网格 */\\n        .location-grid {\\n            display: grid;\\n            grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));\\n            gap: 15px;\\n            margin-bottom: 25px;\\n        }\\n\\n        .location-button {\\n            background: var(--glass-bg);\\n            border: 1px solid var(--glass-border);\\n            border-radius: var(--glass-border-radius-medium);\\n            padding: 15px;\\n            color: var(--glass-text-dark);\\n            font-family: var(--font-main);\\n            font-size: 15px;\\n            cursor: pointer;\\n            transition: background-color 0.25s ease, border-color 0.25s ease, transform 0.2s ease, box-shadow 0.25s ease;\\n            text-align: center;\\n            box-shadow: none;\\n            line-height: 1.4;\\n             backdrop-filter: blur(3px); /* Subtle blur on buttons */\\n            -webkit-backdrop-filter: blur(3px);\\n        }\\n\\n        .location-button:hover:not(.disabled) {\\n            background: var(--glass-bg-hover);\\n            border-color: var(--glass-border-strong);\\n            transform: translateY(-3px) scale(1.02); /* 微交互 */\\n            box-shadow: var(--glass-shadow-hover);\\n        }\\n\\n        .location-button.selected {\\n            background: var(--glass-bg-selected);\\n            border-color: var(--glass-primary);\\n            color: var(--glass-primary);\\n            font-weight: 500;\\n            transform: translateY(-3px) scale(1.02);\\n            box-shadow: var(--glass-shadow-hover);\\n            border-width: 1.5px;\\n             border-style: solid; /* Reset pixel inset */\\n        }\\n\\n\\n        .location-button.disabled {\\n            opacity: 0.5;\\n            cursor: not-allowed;\\n            background: rgba(200, 200, 200, 0.2);\\n            color: var(--glass-text-medium);\\n            box-shadow: none;\\n            border-color: rgba(200, 200, 200, 0.3);\\n            backdrop-filter: none;\\n            -webkit-backdrop-filter: none;\\n             border-style: solid; /* Reset pixel inset */\\n        }\\n\\n        .location-button i {\\n            margin-right: 8px;\\n            color: var(--glass-primary);\\n            font-size: 16px;\\n            transition: color 0.25s ease;\\n             display: inline-block; /* Show icons */\\n        }\\n\\n        .location-button.selected i {\\n            color: var(--glass-primary);\\n        }\\n\\n        /* 次级地点选择 */\\n        .sub-location-grid {\\n            display: grid;\\n            grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\\n            gap: 12px;\\n            margin-bottom: 25px;\\n            padding: 20px;\\n            background: rgba(255, 255, 255, 0.15); /* Slightly less opaque */\\n            border-radius: var(--glass-border-radius-medium);\\n            border: 1px solid var(--glass-border);\\n             backdrop-filter: blur(var(--glass-blur));\\n            -webkit-backdrop-filter: blur(var(--glass-blur));\\n        }\\n\\n        .sub-location-button {\\n            background: var(--glass-bg);\\n            border: 1px solid var(--glass-border);\\n            border-radius: var(--glass-border-radius-small);\\n            padding: 12px 18px;\\n            color: var(--glass-text-dark);\\n            font-family: var(--font-main);\\n            font-size: 14px;\\n            cursor: pointer;\\n            transition: background-color 0.25s ease, border-color 0.25s ease, transform 0.2s ease, box-shadow 0.25s ease;\\n            text-align: left;\\n            box-shadow: none;\\n            line-height: 1.3;\\n        }\\n\\n        .sub-location-button:hover {\\n            background: var(--glass-bg-hover);\\n            border-color: var(--glass-border-strong);\\n            transform: translateY(-2px);\\n            box-shadow: var(--glass-shadow);\\n        }\\n\\n        .sub-location-button.selected {\\n            background: var(--glass-bg-selected);\\n            border-color: var(--glass-primary);\\n            color: var(--glass-primary);\\n            font-weight: 500;\\n            transform: translateY(-2px);\\n            box-shadow: var(--glass-shadow);\\n            border-width: 1.5px;\\n             border-style: solid; /* Reset pixel inset */\\n        }\\n\\n        .sub-location-button i {\\n            margin-right: 10px;\\n            color: var(--glass-primary);\\n            transition: color 0.25s ease;\\n             font-size: 14px;\\n             display: inline-block;\\n        }\\n\\n        .sub-location-button.selected i {\\n            color: var(--glass-primary);\\n        }\\n\\n        /* 地点详情 */\\n        .location-details {\\n            margin-top: 25px;\\n            padding: 25px;\\n            background: rgba(255, 255, 255, 0.2); /* More transparent */\\n            border-radius: var(--glass-border-radius-large);\\n            border: 1px solid var(--glass-border);\\n            box-shadow: var(--glass-shadow);\\n             backdrop-filter: blur(var(--glass-blur));\\n            -webkit-backdrop-filter: blur(var(--glass-blur));\\n        }\\n\\n        .detail-header {\\n            font-size: 18px;\\n            font-weight: 500;\\n            margin-bottom: 20px;\\n            padding-bottom: 15px;\\n            border-bottom: 1px solid var(--glass-border);\\n            color: var(--glass-text-dark);\\n            text-align: center;\\n            font-family: var(--font-main);\\n            text-transform: none; /* Normal case */\\n        }\\n\\n        .detail-header i {\\n            color: var(--glass-accent);\\n            margin-right: 10px;\\n            display: inline-block;\\n        }\\n\\n        .section-title {\\n            font-size: 16px;\\n            color: var(--glass-text-medium);\\n            margin-bottom: 15px;\\n            font-weight: 500;\\n            font-family: var(--font-main);\\n            border-bottom: none;\\n            padding-bottom: 0;\\n            text-transform: none;\\n        }\\n\\n        .section-title i {\\n            color: var(--glass-accent);\\n            margin-right: 8px;\\n            display: inline-block;\\n        }\\n\\n        .character-list {\\n            display: grid;\\n            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\\n            gap: 12px;\\n            margin-bottom: 25px;\\n        }\\n\\n        .character-item {\\n            background: rgba(255, 255, 255, 0.4); /* Character background */\\n            border: 1px solid rgba(255, 255, 255, 0.6);\\n            border-radius: var(--glass-border-radius-small);\\n            padding: 12px;\\n            font-size: 14px;\\n            transition: background-color 0.25s ease, transform 0.2s ease;\\n            font-family: var(--font-main);\\n            line-height: 1.4;\\n            color: var(--glass-text-dark);\\n        }\\n\\n        .character-item:hover {\\n            transform: scale(1.03);\\n            background-color: var(--glass-bg-hover);\\n            box-shadow: none;\\n        }\\n\\n        .character-item i {\\n            color: var(--glass-accent);\\n            margin-right: 8px;\\n            display: inline-block;\\n         }\\n        /* Remove simple marker */\\n        .character-item::before {\\n            content: \\\"\\\";\\n         }\\n\\n        .character-item.empty {\\n            color: var(--glass-text-medium);\\n            opacity: 0.7;\\n            background: rgba(200, 200, 200, 0.2);\\n            text-align: center;\\n            border-style: dashed;\\n            font-family: var(--font-main);\\n            border-color: rgba(200, 200, 200, 0.4);\\n        }\\n         .character-item.empty i {\\n            display: block;\\n            margin: 0 auto 5px auto;\\n             color: var(--glass-text-medium);\\n        }\\n         .character-item.empty::before {\\n             content: \\\"\\\";\\n         }\\n\\n\\n        .action-section {\\n            margin-top: 25px;\\n            text-align: center;\\n        }\\n\\n        .action-button {\\n            background: linear-gradient(to right, var(--glass-success), #15803d); /* Gradient */\\n            color: var(--glass-text-light);\\n            border: none;\\n            border-radius: 50px; /* Fully rounded */\\n            padding: 12px 35px;\\n            font-size: 16px;\\n            font-weight: 500;\\n            cursor: pointer;\\n            transition: transform 0.2s ease, box-shadow 0.25s ease;\\n            box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);\\n            letter-spacing: 0.5px;\\n            font-family: var(--font-main);\\n            text-transform: none;\\n        }\\n\\n        .action-button:hover {\\n            transform: translateY(-3px) scale(1.05);\\n            box-shadow: 0 8px 25px rgba(16, 185, 129, 0.4);\\n            background: linear-gradient(to right, #10b981, #059669); /* Slightly different gradient */\\n        }\\n\\n        .action-button i {\\n            margin-right: 8px;\\n            display: inline-block;\\n        }\\n\\n        /* 确认对话框 */\\n        .modal-overlay {\\n            position: fixed;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n            background-color: rgba(0, 0, 0, 0.3); /* Lighter overlay */\\n            backdrop-filter: blur(8px);\\n            -webkit-backdrop-filter: blur(8px);\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n            z-index: 1000;\\n            opacity: 0;\\n            transition: opacity 0.3s ease;\\n            pointer-events: none;\\n        }\\n\\n        .modal-overlay:not(.hidden) {\\n           opacity: 1;\\n           pointer-events: auto;\\n        }\\n\\n        .confirm-dialog {\\n            background: rgba(255, 255, 255, 0.6); /* Dialog background */\\n            backdrop-filter: blur(15px); /* Stronger blur for dialog */\\n            -webkit-backdrop-filter: blur(15px);\\n            border: 1px solid rgba(255, 255, 255, 0.7);\\n            border-radius: var(--glass-border-radius-large);\\n            padding: 30px;\\n            width: 90%;\\n            max-width: 400px;\\n            box-shadow: 0 10px 40px rgba(31, 38, 135, 0.2);\\n            transform: scale(0.95);\\n            transition: transform 0.3s ease, opacity 0.3s ease;\\n             opacity: 0; /* Start hidden for transition */\\n        }\\n\\n        .modal-overlay:not(.hidden) .confirm-dialog {\\n           transform: scale(1);\\n           opacity: 1;\\n        }\\n\\n        .confirm-dialog h4 {\\n            color: var(--glass-text-dark);\\n            margin-top: 0;\\n            margin-bottom: 20px;\\n            font-family: var(--font-title);\\n            text-align: center;\\n            font-size: 20px;\\n            text-transform: none;\\n        }\\n\\n        .confirm-dialog p {\\n            margin-bottom: 30px;\\n            line-height: 1.7;\\n            text-align: center;\\n            font-size: 15px;\\n            color: var(--glass-text-medium);\\n             font-family: var(--font-main);\\n        }\\n\\n        .dialog-buttons {\\n            display: flex;\\n            justify-content: space-between;\\n            gap: 15px;\\n        }\\n\\n        .dialog-button {\\n            flex-grow: 1;\\n            padding: 10px 20px;\\n            border-radius: 50px;\\n            cursor: pointer;\\n            transition: transform 0.2s ease, box-shadow 0.25s ease, background-color 0.25s ease;\\n            border: none;\\n            font-family: var(--font-main);\\n            font-size: 15px;\\n            font-weight: 500;\\n            text-align: center;\\n             box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\\n             text-transform: none;\\n        }\\n\\n        .cancel-button {\\n            background-color: rgba(255, 255, 255, 0.7);\\n            color: var(--glass-text-medium);\\n            border: 1px solid rgba(200, 200, 200, 0.5);\\n        }\\n\\n        .cancel-button:hover {\\n            background-color: rgba(255, 255, 255, 0.9);\\n            color: var(--glass-text-dark);\\n            transform: translateY(-2px);\\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\\n        }\\n\\n        .confirm-button {\\n            background-color: var(--glass-success);\\n            color: var(--glass-text-light);\\n        }\\n\\n        .confirm-button:hover {\\n            background-color: #059669; /* Darker success */\\n            transform: translateY(-2px);\\n            box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);\\n        }\\n\\n        .dialog-button i {\\n            margin-right: 6px;\\n            display: inline-block;\\n        }\\n\\n        /* 通用辅助类 */\\n        .hidden {\\n            display: none;\\n        }\\n\\n        /* 响应式样式 */\\n        @media (max-width: 700px) {\\n            .location-grid,\\n            .sub-location-grid {\\n                grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\\n            }\\n\\n            .character-list {\\n                grid-template-columns: repeat(auto-fill, minmax(110px, 1fr));\\n            }\\n             .map-interface {\\n                padding: 20px;\\n                 border-radius: var(--glass-border-radius-medium);\\n            }\\n            .confirm-dialog {\\n                padding: 25px;\\n                max-width: 90%;\\n                 border-radius: var(--glass-border-radius-medium);\\n            }\\n             .location-button { font-size: 14px; padding: 12px; }\\n             .sub-location-button { font-size: 13px; padding: 10px 15px; }\\n             .character-item { font-size: 13px; padding: 10px; }\\n             .action-button { font-size: 15px; padding: 10px 30px; }\\n             .dialog-button { font-size: 14px; padding: 8px 18px;}\\n             .confirm-dialog h4 { font-size: 18px;}\\n             .confirm-dialog p { font-size: 14px;}\\n             .map-header h2 { font-size: 22px; }\\n        }\\n\\n        @media (max-width: 480px) {\\n             body {\\n                 padding: 5px;\\n             }\\n            .map-interface {\\n                padding: 15px;\\n                margin: 5px auto;\\n                 border-radius: var(--glass-border-radius-small);\\n            }\\n            .location-grid,\\n            .sub-location-grid {\\n                grid-template-columns: repeat(2, 1fr);\\n                gap: 10px;\\n            }\\n             .sub-location-grid {\\n                padding: 15px;\\n                 border-radius: var(--glass-border-radius-medium);\\n            }\\n             .location-button, .sub-location-button, .character-item {\\n                 border-radius: var(--glass-border-radius-small);\\n             }\\n              .location-details {\\n                  border-radius: var(--glass-border-radius-medium);\\n                  padding: 20px;\\n              }\\n              .confirm-dialog {\\n                   border-radius: var(--glass-border-radius-medium);\\n                   padding: 20px;\\n              }\\n\\n            .character-list {\\n                grid-template-columns: repeat(2, 1fr);\\n                 gap: 10px;\\n            }\\n\\n             .map-header h2 { font-size: 20px; }\\n             .map-header h2:before, .map-header h2:after { font-size: 18px; margin: 0 8px;}\\n             .movement-alert { padding: 12px; font-size: 14px; }\\n             .detail-header { font-size: 16px; }\\n             .section-title { font-size: 15px; }\\n             .action-button { font-size: 14px; padding: 10px 25px; }\\n\\n             .confirm-dialog h4 { font-size: 17px; margin-bottom: 15px; }\\n             .confirm-dialog p { font-size: 13px; margin-bottom: 25px;}\\n             .dialog-buttons {\\n                flex-direction: column;\\n                gap: 10px;\\n            }\\n             .dialog-button { font-size: 14px; padding: 10px;}\\n             .cancel-button { order: 2; }\\n             .confirm-button { order: 1; }\\n        }\\n    </style>\\n</body>\\n</html>\\n```\",\"trimStrings\":[],\"placement\":[2],\"disabled\":true,\"markdownOnly\":true,\"promptOnly\":false,\"runOnEdit\":true,\"substituteRegex\":0,\"minDepth\":null,\"maxDepth\":null},{\"id\":\"941e1aa2-be2c-4b2c-a6b7-6b416cd56692\",\"scriptName\":\"[GALGAME风UI]脚本-导航模块[四选一]\",\"findRegex\":\"<map_data>([\\\\s\\\\S]*?)<\\\\/map_data>\",\"replaceString\":\"```\\n<!DOCTYPE html>\\n<html lang=\\\"zh-CN\\\">\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    <title>恋爱冒险地图</title>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\\\">\\n    <link href=\\\"https://fonts.googleapis.com/css2?family=ZCOOL+XiaoWei&family=ZCOOL+QingKe+HuangYou&display=swap\\\" rel=\\\"stylesheet\\\">\\n</head>\\n<body>\\n    <div id=\\\"map-data-source\\\" style=\\\"display:none;\\\">$1</div>\\n    <div class=\\\"map-interface\\\">\\n        <div class=\\\"map-header\\\">\\n            <h2 id=\\\"map-title\\\">通用地图导航</h2>\\n        </div>\\n\\n        <!-- 移动限制提示 -->\\n        <div id=\\\"movement-alert\\\" class=\\\"movement-alert hidden\\\">\\n            <i class=\\\"fas fa-exclamation-triangle\\\"></i> 提示：你现在无法移动        </div>\\n\\n        <!-- 主地点选择区域 -->\\n        <div id=\\\"main-locations\\\" class=\\\"location-grid\\\">\\n            <!-- 主要地点按钮将在这里动态生成 -->\\n        </div>\\n\\n        <!-- 次级地点选择区域 -->\\n        <div id=\\\"sub-locations\\\" class=\\\"sub-location-grid hidden\\\">\\n            <!-- 次级地点按钮将在这里动态生成 -->\\n        </div>\\n\\n        <!-- 地点详情区域 -->\\n        <div id=\\\"location-details\\\" class=\\\"location-details hidden\\\">\\n            <div class=\\\"detail-header\\\">\\n                <i class=\\\"fas fa-map-marker-alt\\\"></i> <span id=\\\"selected-location\\\">未选择</span>\\n            </div>\\n            <div class=\\\"detail-content\\\">\\n                <div class=\\\"character-section\\\">\\n                    <div class=\\\"section-title\\\"><i class=\\\"fas fa-user-friends\\\"></i> 可能遇见的人</div>\\n                    <div id=\\\"location-characters\\\" class=\\\"character-list\\\">\\n                        <!-- 角色列表将在这里动态生成 -->\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"action-section\\\">\\n                <button id=\\\"confirm-move-btn\\\" class=\\\"action-button\\\">\\n                    <i class=\\\"fas fa-walking\\\"></i> 前往此处\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <!-- 确认移动弹窗 -->\\n    <div id=\\\"confirm-overlay\\\" class=\\\"modal-overlay hidden\\\">\\n        <div class=\\\"confirm-dialog\\\">\\n            <h4>确认前往</h4>\\n            <p id=\\\"confirm-message\\\"></p>\\n            <div class=\\\"dialog-buttons\\\">\\n                <button id=\\\"cancel-move-btn\\\" class=\\\"dialog-button cancel-button\\\">\\n                    <i class=\\\"fas fa-times\\\"></i> 再想想\\n                </button>\\n                <button id=\\\"execute-move-btn\\\" class=\\\"dialog-button confirm-button\\\">\\n                    <i class=\\\"fas fa-check\\\"></i> 出发吧\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <script>\\n        // 全局变量\\n        let mapData = null;\\n        let selectedMain = null;\\n        let selectedSub = null;\\n        let selectedCharacters = [];\\n        let hasMoveBlock = false;\\n\\n        // 解析地图数据\\n        function parseMapData(text) {\\n            if (!text || typeof text !== 'string') {\\n                console.error(\\\"无效的地图数据\\\", text);\\n                return null;\\n            }\\n\\n            console.log(\\\"开始解析地图数据:\\\", text.substring(0, 50) + \\\"...\\\");\\n\\n            const data = {\\n                moveBlocked: false,\\n                locations: []\\n            };\\n\\n            try {\\n                // 解析移动限制状态\\n                const moveBlockMatch = /\\\\[MOVEBLOCK:(YES|NO)\\\\]/.exec(text);\\n                if (moveBlockMatch) {\\n                    data.moveBlocked = moveBlockMatch[1] === 'YES';\\n                }\\n\\n                // 解析地点数据\\n                const locationMatches = Array.from(text.matchAll(/\\\\[(.*?)(?=\\\\]|\\\\[(?!.*\\\\[))/gs));\\n                console.log(`找到 ${locationMatches.length} 个位置匹配项`);\\n                \\n                for (const match of locationMatches) {\\n                    const locationText = match[1].trim();\\n                    \\n                    // 跳过MOVEBLOCK行\\n                    if (locationText.startsWith('MOVEBLOCK:')) {\\n                        console.log(\\\"跳过MOVEBLOCK行\\\");\\n                        continue;\\n                    }\\n                    \\n                    const lines = locationText.split('\\\\n');\\n                    if (lines.length < 1) continue;\\n                    \\n                    const mainLocation = lines[0].trim();\\n                    console.log(\\\"处理主地点:\\\", mainLocation);\\n                    const subLocations = [];\\n                    \\n                    // 解析子地点\\n                    for (let i = 1; i < lines.length; i++) {\\n                        const subLine = lines[i].trim();\\n                        if (!subLine.startsWith('-')) continue;\\n                        \\n                        // 格式: - 地点X: 角色1, 角色2\\n                        const subMatch = /- (.*?):(.*?)$/.exec(subLine);\\n                        if (subMatch) {\\n                            const subName = subMatch[1].trim();\\n                            const charactersText = subMatch[2].trim();\\n                            const characters = charactersText.split(',').map(c => c.trim()).filter(c => c);\\n                            \\n                            console.log(`  子地点: ${subName}, 角色: ${characters.join(', ')}`);\\n                            \\n                            subLocations.push({\\n                                name: subName,\\n                                characters: characters\\n                            });\\n                        }\\n                    }\\n                    \\n                    if (mainLocation) {\\n                        data.locations.push({\\n                            name: mainLocation,\\n                            subLocations: subLocations\\n                        });\\n                    }\\n                }\\n                \\n                console.log(\\\"解析后的地图数据:\\\", data);\\n                return data;\\n            } catch (error) {\\n                console.error(\\\"解析地图数据时出错:\\\", error);\\n                return null;\\n            }\\n        }\\n\\n        // 渲染地图界面\\n        function renderMapInterface(mapData) {\\n            if (!mapData) return;\\n            \\n            hasMoveBlock = mapData.moveBlocked;\\n            \\n            // 显示/隐藏移动限制提示\\n            const movementAlert = document.getElementById('movement-alert');\\n            if (hasMoveBlock) {\\n                movementAlert.classList.remove('hidden');\\n            } else {\\n                movementAlert.classList.add('hidden');\\n            }\\n            \\n            // 渲染主地点按钮\\n            const mainLocationsContainer = document.getElementById('main-locations');\\n            mainLocationsContainer.innerHTML = '';\\n            \\n            mapData.locations.forEach(location => {\\n                const button = document.createElement('button');\\n                button.className = 'location-button';\\n                \\n                // 为不同地点设置不同的图标\\n                let icon = 'fa-map';\\n                if (location.name.includes('学校')) icon = 'fa-school';\\n                else if (location.name.includes('公园')) icon = 'fa-tree';\\n                else if (location.name.includes('商业')) icon = 'fa-store';\\n                else if (location.name.includes('住宅')) icon = 'fa-home';\\n                else if (location.name.includes('站')) icon = 'fa-train';\\n                \\n                button.innerHTML = `<i class=\\\"fas ${icon}\\\"></i> ${location.name}`;\\n                button.dataset.location = location.name;\\n                \\n                button.addEventListener('click', () => selectMainLocation(location));\\n                \\n                if (hasMoveBlock) {\\n                    button.disabled = true;\\n                    button.classList.add('disabled');\\n                }\\n                \\n                mainLocationsContainer.appendChild(button);\\n            });\\n            \\n            // 隐藏子地点和详情\\n            document.getElementById('sub-locations').classList.add('hidden');\\n            document.getElementById('location-details').classList.add('hidden');\\n        }\\n        \\n        // 选择主地点\\n        function selectMainLocation(location) {\\n            if (hasMoveBlock) return;\\n            \\n            selectedMain = location;\\n            \\n            // 高亮选中的主地点按钮\\n            const allMainButtons = document.querySelectorAll('#main-locations .location-button');\\n            allMainButtons.forEach(btn => {\\n                btn.classList.remove('selected');\\n                if (btn.dataset.location === location.name) {\\n                    btn.classList.add('selected');\\n                }\\n            });\\n            \\n            // 渲染子地点\\n            const subLocationsContainer = document.getElementById('sub-locations');\\n            subLocationsContainer.innerHTML = '';\\n            \\n            location.subLocations.forEach(subLocation => {\\n                const button = document.createElement('button');\\n                button.className = 'sub-location-button';\\n                \\n                // 为不同子地点设置不同的图标\\n                let icon = 'fa-map-pin';\\n                if (subLocation.name.includes('教室')) icon = 'fa-chalkboard';\\n                else if (subLocation.name.includes('咖啡')) icon = 'fa-coffee';\\n                else if (subLocation.name.includes('图书')) icon = 'fa-book';\\n                else if (subLocation.name.includes('商店')) icon = 'fa-shopping-bag';\\n                else if (subLocation.name.includes('广场')) icon = 'fa-clock';\\n                \\n                button.innerHTML = `<i class=\\\"fas ${icon}\\\"></i> ${subLocation.name}`;\\n                button.dataset.sublocation = subLocation.name;\\n                \\n                button.addEventListener('click', () => selectSubLocation(subLocation));\\n                \\n                subLocationsContainer.appendChild(button);\\n            });\\n            \\n            // 显示子地点区域\\n            subLocationsContainer.classList.remove('hidden');\\n            \\n            // 隐藏详情区域\\n            document.getElementById('location-details').classList.add('hidden');\\n            \\n            // 重置子地点选择\\n            selectedSub = null;\\n        }\\n        \\n        // 选择子地点\\n        function selectSubLocation(subLocation) {\\n            if (hasMoveBlock) return;\\n            \\n            selectedSub = subLocation;\\n            selectedCharacters = subLocation.characters;\\n            \\n            // 高亮选中的子地点按钮\\n            const allSubButtons = document.querySelectorAll('#sub-locations .sub-location-button');\\n            allSubButtons.forEach(btn => {\\n                btn.classList.remove('selected');\\n                if (btn.dataset.sublocation === subLocation.name) {\\n                    btn.classList.add('selected');\\n                }\\n            });\\n            \\n            // 更新地点详情\\n            document.getElementById('selected-location').textContent = `${selectedMain.name} - ${subLocation.name}`;\\n            \\n            // 更新角色列表\\n            const charactersContainer = document.getElementById('location-characters');\\n            charactersContainer.innerHTML = '';\\n            \\n            if (subLocation.characters.length > 0) {\\n                subLocation.characters.forEach(character => {\\n                    const charElement = document.createElement('div');\\n                    charElement.className = 'character-item';\\n                    charElement.innerHTML = `<i class=\\\"fas fa-user\\\"></i> ${character}`;\\n                    charactersContainer.appendChild(charElement);\\n                });\\n            } else {\\n                const noCharElement = document.createElement('div');\\n                noCharElement.className = 'character-item empty';\\n                noCharElement.innerHTML = `<i class=\\\"fas fa-user-slash\\\"></i> 这里没有人`;\\n                charactersContainer.appendChild(noCharElement);\\n            }\\n            \\n            // 显示详情区域\\n            document.getElementById('location-details').classList.remove('hidden');\\n        }\\n        \\n        // 确认移动\\n        function confirmMove() {\\n            if (hasMoveBlock || !selectedMain || !selectedSub) return;\\n            \\n            const locationName = `${selectedMain.name} - ${selectedSub.name}`;\\n            const characters = selectedCharacters.join(', ');\\n            \\n            // 显示确认对话框\\n            const confirmMessage = document.getElementById('confirm-message');\\n            if (characters) {\\n                confirmMessage.textContent = `前往 ${locationName}？你可能会遇见：${characters}`;\\n            } else {\\n                confirmMessage.textContent = `前往 ${locationName}？那里好像没有人。`;\\n            }\\n            \\n            document.getElementById('confirm-overlay').classList.remove('hidden');\\n        }\\n        \\n        // 执行移动\\n        function executeMove() {\\n            if (hasMoveBlock || !selectedMain || !selectedSub) return;\\n            \\n            const locationName = `${selectedMain.name} - ${selectedSub.name}`;\\n            const characters = selectedCharacters.join(',');\\n            \\n            // 构建移动消息\\n            let message = `<request:{{user}}前往了${locationName}.`;\\n            if (characters) {\\n                message += `${characters}在那里`;\\n            }\\n            message += \\\">\\\";\\n            \\n            // 如果存在 triggerSlash 函数，发送消息\\n            if (typeof triggerSlash === 'function') {\\n                try {\\n                    triggerSlash(`/send ${message} || /trigger`);\\n                } catch (e) {\\n                    console.error(\\\"发送消息时出错:\\\", e);\\n                    alert(\\\"发送消息失败，请重试。\\\");\\n                }\\n            } else {\\n                console.log(\\\"移动命令:\\\", message);\\n                alert(\\\"移动请求已生成。在实际环境中，这将发送到AI。\\\");\\n            }\\n            \\n            // 隐藏确认对话框\\n            document.getElementById('confirm-overlay').classList.add('hidden');\\n            \\n            // 重置选择\\n            resetSelection();\\n        }\\n        \\n        // 重置选择\\n        function resetSelection() {\\n            selectedMain = null;\\n            selectedSub = null;\\n            selectedCharacters = [];\\n            \\n            // 清除所有选中状态\\n            document.querySelectorAll('.location-button, .sub-location-button').forEach(btn => {\\n                btn.classList.remove('selected');\\n            });\\n            \\n            // 隐藏子地点和详情\\n            document.getElementById('sub-locations').classList.add('hidden');\\n            document.getElementById('location-details').classList.add('hidden');\\n        }\\n        \\n        // 处理地图数据\\n        function processMapData() {\\n            const dataSource = document.getElementById('map-data-source');\\n            if (!dataSource) {\\n                console.error(\\\"未找到地图数据源元素\\\");\\n                return;\\n            }\\n            \\n            let mapText = dataSource.textContent || dataSource.innerText;\\n            console.log(\\\"获取到的地图数据文本:\\\", mapText ? \\\"有数据\\\" : \\\"无数据\\\", \\\"长度:\\\", mapText ? mapText.length : 0);\\n            \\n            // 尝试从父窗口获取数据（SillyTavern环境）\\n            try {\\n                if (window.parent && window.parent !== window) {\\n                    console.log(\\\"在iframe中运行，尝试从SillyTavern获取数据\\\");\\n                    \\n                    // 尝试获取所有消息元素\\n                    const allMessages = window.parent.document.querySelectorAll('.mes_text, .mes_content, .message-content, .message_text');\\n                    console.log(`找到 ${allMessages.length} 个可能的消息元素`);\\n                    \\n                    // 检查最近的几条消息\\n                    let foundMapData = false;\\n                    for (let i = allMessages.length - 1; i >= 0 && i >= allMessages.length - 5; i--) {\\n                        const messageText = allMessages[i].textContent || allMessages[i].innerText;\\n                        console.log(`检查消息 #${i}，长度: ${messageText.length}，前30个字符: ${messageText.substring(0, 30)}...`);\\n                        \\n                        // 同时检查旧格式[EMOTION:]和新格式[MOVEBLOCK:]\\n                        if (messageText && (messageText.includes('[EMOTION:') || messageText.includes('[MOVEBLOCK:'))) {\\n                            console.log(`在消息 #${i} 中找到地图数据`);\\n                            mapText = messageText;\\n                            foundMapData = true;\\n                            break;\\n                        }\\n                    }\\n                    \\n                    if (!foundMapData) {\\n                        console.log(\\\"在消息中未找到地图数据，尝试直接在页面中搜索\\\");\\n                        // 尝试在整个文档中搜索地图数据格式\\n                        const bodyText = window.parent.document.body.textContent || window.parent.document.body.innerText;\\n                        \\n                        // 先尝试查找新格式\\n                        let mapDataStart = bodyText.indexOf('[MOVEBLOCK:');\\n                        \\n                        // 如果没找到新格式，尝试查找旧格式\\n                        if (mapDataStart === -1) {\\n                            mapDataStart = bodyText.indexOf('[EMOTION:');\\n                        }\\n                        \\n                        if (mapDataStart !== -1) {\\n                            // 找到开始标记，现在找到结束位置（假设地图数据以 ']' 结尾且后面不是另一个地图数据块）\\n                            let mapDataEnd = bodyText.indexOf(']', mapDataStart);\\n                            while (bodyText.charAt(mapDataEnd + 1) === '[') {\\n                                mapDataEnd = bodyText.indexOf(']', mapDataEnd + 1);\\n                            }\\n                            \\n                            if (mapDataEnd !== -1) {\\n                                const extractedData = bodyText.substring(mapDataStart, mapDataEnd + 1);\\n                                console.log(\\\"从页面提取的地图数据:\\\", extractedData.substring(0, 50) + \\\"...\\\");\\n                                if (extractedData.includes('\\\\n')) {\\n                                    mapText = extractedData;\\n                                }\\n                            }\\n                        }\\n                    }\\n                }\\n            } catch (e) {\\n                console.log(\\\"无法从父窗口获取数据:\\\", e);\\n            }\\n            \\n            // 如果提供了URL参数中的数据，使用它\\n            try {\\n                const urlParams = new URLSearchParams(window.location.search);\\n                const urlData = urlParams.get('data');\\n                if (urlData) {\\n                    const decodedData = decodeURIComponent(urlData);\\n                    console.log(\\\"从URL参数获取数据:\\\", decodedData.substring(0, 30) + \\\"...\\\");\\n                    if (decodedData.includes('[EMOTION:') || decodedData.includes('[MOVEBLOCK:')) {\\n                        mapText = decodedData;\\n                    }\\n                }\\n            } catch (e) {\\n                console.log(\\\"无法从URL参数获取数据:\\\", e);\\n            }\\n            \\n            // 直接尝试使用用户提供的测试数据\\n            if (!mapText || (!mapText.includes('[EMOTION:') && !mapText.includes('[MOVEBLOCK:'))) {\\n                console.log(\\\"尝试使用测试数据\\\");\\n                mapText = `[MOVEBLOCK:NO]\\n[校园区域\\n- 教学楼: 班主任, 数学老师\\n- 图书馆: 文学社社长, 图书管理员\\n- 操场: 体育老师, 田径队队长]\\n[商业街\\n- 咖啡厅: 服务员小雅, 钢琴少女\\n- 游戏厅: 游戏高手小明, 不良少年\\n- 书店: 眼镜店主, 神秘顾客]\\n[住宅区\\n- 公寓楼: 邻居阿姨, 宠物猫咪\\n- 小公园: 晨练老人, 遛狗少年\\n- 便利店: 店长, 兼职学生]`;\\n                \\n                dataSource.textContent = mapText;\\n                console.log(\\\"已设置测试数据\\\");\\n            }\\n            \\n            // 兼容旧版数据格式（EMOTION -> MOVEBLOCK）\\n            if (mapText && mapText.includes('[EMOTION:')) {\\n                console.log(\\\"转换旧版数据格式（EMOTION -> MOVEBLOCK）\\\");\\n                mapText = mapText.replace(/\\\\[EMOTION:(BAD|GOOD)\\\\]/g, function(match, state) {\\n                    return `[MOVEBLOCK:${state === 'BAD' ? 'YES' : 'NO'}]`;\\n                });\\n            }\\n            \\n            // 现在解析和渲染地图数据\\n            mapData = parseMapData(mapText);\\n            \\n            if (mapData) {\\n                renderMapInterface(mapData);\\n            } else {\\n                console.error(\\\"地图数据解析失败\\\");\\n            }\\n        }\\n        \\n        // 注册事件监听器\\n        function setupEventListeners() {\\n            // 确认移动按钮\\n            document.getElementById('confirm-move-btn').addEventListener('click', confirmMove);\\n            \\n            // 确认对话框按钮\\n            document.getElementById('cancel-move-btn').addEventListener('click', () => {\\n                document.getElementById('confirm-overlay').classList.add('hidden');\\n            });\\n            \\n            document.getElementById('execute-move-btn').addEventListener('click', executeMove);\\n        }\\n        \\n        // 初始化\\n        function init() {\\n            // 设置事件监听器\\n            setupEventListeners();\\n            \\n            // 处理地图数据\\n            processMapData();\\n            \\n            // 监听SillyTavern消息更新\\n            if (window.parent && window.parent !== window && typeof window.parent.eventOn === 'function' && window.parent.tavern_events) {\\n                window.parent.eventOn(window.parent.tavern_events.MESSAGE_UPDATED, () => {\\n                    setTimeout(processMapData, 300);\\n                });\\n                window.parent.eventOn(window.parent.tavern_events.MESSAGE_RECEIVED, () => {\\n                    setTimeout(processMapData, 300);\\n                });\\n            }\\n        }\\n        \\n        // 页面加载完成后初始化\\n        document.addEventListener('DOMContentLoaded', init);\\n    </script>\\n    \\n    <style>\\n        @import url('https://fonts.googleapis.com/css2?family=ZCOOL+XiaoWei&family=ZCOOL+QingKe+HuangYou&display=swap');\\n        \\n        /* galgame 风格调色板 */\\n        :root {\\n            /* 柔和粉彩 Galgame 风格 */\\n            --gal-bg-light: #fff5f8;      /* 背景 - 极浅粉红 */\\n            --gal-bg-medium: #ffe8f0;     /* 中等背景 - 柔粉 */\\n            --gal-border: #f0d0e0;       /* 边框/点缀 - 淡粉紫 */\\n            --gal-text-dark: #6d505d;     /* 深色文字 - 暗玫瑰色 */\\n            --gal-text-muted: #a89097;    /* 浅色文字 - 柔和玫瑰灰 */\\n            --gal-primary: #e6a8d7;       /* 主色 - 兰花粉 */\\n            --gal-primary-light: #f5d8ea; /* 浅主色 - 亮兰花粉 */\\n            --gal-success: #a8d8b0;       /* 成功 - 柔和薄荷绿 */\\n            --gal-warning: #f8e0a0;       /* 警告 - 柔和奶油黄 */\\n            --gal-danger: #f0a8a8;        /* 危险 - 柔和珊瑚粉 */\\n            --gal-pink: #f4c2c2;          /* 粉色 - 经典柔粉 */\\n            --gal-purple: #d6b4e0;        /* 紫色 - 淡薰衣草紫 */\\n            --gal-accent: #ffd7a0;        /* 点缀色 - 柔和杏黄 (新增) */\\n\\n            --font-title: 'ZCOOL QingKe HuangYou', sans-serif;\\n            --font-main: 'ZCOOL XiaoWei', \\\"Microsoft YaHei\\\", sans-serif;\\n\\n            /* Material Design 风格，稍微柔和化 */\\n            --md-border-radius-large: 24px; /* 更大的圆角 */\\n            --md-border-radius-medium: 18px;/* 中圆角 */\\n            --md-border-radius-small: 14px; /* 小圆角 */\\n            /* 阴影调整为带一点颜色倾向 */\\n            --md-shadow-1: 0 2px 4px rgba(180, 150, 170, 0.08); /* 细微柔和阴影 (带粉紫调) */\\n            --md-shadow-2: 0 4px 8px rgba(180, 150, 170, 0.12);  /* 轻度柔和阴影 */\\n            --md-shadow-3: 0 6px 12px rgba(180, 150, 170, 0.15); /* 中度柔和阴影 */\\n            --md-shadow-hover: 0 8px 16px rgba(180, 150, 170, 0.18); /* 悬停柔和阴影 */\\n        }\\n        \\n        body {\\n            background-color: transparent; /* or var(--gal-bg-light) if not transparent */\\n            margin: 0;\\n            padding: 15px; /* Increased padding */\\n            font-family: var(--font-main);\\n            color: var(--gal-text-dark);\\n            box-sizing: border-box;\\n            /* 添加全局柔和背景（如果不在透明环境中使用） */\\n            /* background: linear-gradient(135deg, var(--gal-bg-light), var(--gal-bg-medium)); */\\n        }\\n        \\n        /* 地图界面容器 */\\n        .map-interface {\\n            max-width: 100%;\\n            width: 100%;\\n            margin: 0 auto;\\n            background: linear-gradient(135deg, rgba(255, 255, 255, 0.8), rgba(255, 245, 248, 0.9)), var(--gal-bg-light); /* 微妙的渐变背景 */\\n            border: 2px solid var(--gal-primary-light); /* 更柔和的主色边框 */\\n            border-radius: var(--md-border-radius-large);\\n            box-shadow: 0 0 15px rgba(230, 168, 215, 0.2), var(--md-shadow-2); /* 增加柔和辉光效果 */\\n            padding: 30px; /* Increased padding */\\n            box-sizing: border-box;\\n            position: relative;\\n            overflow: hidden;\\n            backdrop-filter: blur(2px); /* 如果背景允许，增加模糊效果 */\\n        }\\n        \\n        /* 地图标题 */\\n        .map-header {\\n            text-align: center;\\n            margin-bottom: 30px; /* Increased margin */\\n            padding-bottom: 20px; /* Increased padding */\\n            border-bottom: 1px dashed var(--gal-border); /* 虚线分隔线 */\\n        }\\n        \\n        .map-header h2 {\\n            font-size: 28px; /* Slightly larger */\\n            margin: 0;\\n            padding: 8px;\\n            line-height: 1.5;\\n            color: var(--gal-primary);\\n            font-family: var(--font-title);\\n            position: relative;\\n            text-shadow: 1px 1px 3px rgba(255, 255, 255, 0.5); /* 添加柔和文字阴影 */\\n        }\\n        \\n        .map-header h2:before,\\n        .map-header h2:after {\\n            content: '🌸'; /* Changed icon to flower */\\n            display: inline-block;\\n            margin: 0 12px;\\n            color: var(--gal-pink);\\n            font-size: 20px; /* Slightly larger icon */\\n            opacity: 0.9;\\n            text-shadow: 1px 1px 2px rgba(255, 255, 255, 0.7);\\n        }\\n        \\n        /* 移动限制提示 */\\n        .movement-alert {\\n            background-color: var(--gal-warning);\\n            border: 1px solid rgba(248, 224, 160, 0.8);\\n            border-radius: var(--md-border-radius-medium);\\n            padding: 18px; /* Increased padding */\\n            margin-bottom: 30px; /* Increased margin */\\n            text-align: center;\\n            color: var(--gal-text-dark);\\n            font-weight: normal;\\n            box-shadow: var(--md-shadow-1);\\n            animation: pulse-movement 2.5s infinite ease-in-out;\\n            font-size: 15px;\\n        }\\n        \\n        @keyframes pulse-movement {\\n            0%, 100% { opacity: 0.9; }\\n            50% { opacity: 1; transform: scale(1.01); }\\n        }\\n        \\n        .movement-alert i {\\n            margin-right: 8px;\\n            color: var(--gal-text-muted); /* Muted icon color */\\n        }\\n        \\n        /* 地点选择网格 */\\n        .location-grid {\\n            display: grid;\\n            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); /* Slightly larger min */\\n            gap: 18px; /* Increased gap */\\n            margin-bottom: 30px; /* Increased margin */\\n        }\\n        \\n        .location-button {\\n            background: linear-gradient(180deg, white, #fff8fa); /* Subtle gradient */\\n            border: 1px solid var(--gal-border);\\n            border-radius: var(--md-border-radius-medium);\\n            padding: 18px; /* Increased padding */\\n            color: var(--gal-text-dark);\\n            font-family: var(--font-main);\\n            font-size: 16px; /* Slightly larger */\\n            cursor: pointer;\\n            transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1); /* Enhanced transition */\\n            text-align: center;\\n            box-shadow: var(--md-shadow-1);\\n            position: relative;\\n            overflow: hidden;\\n        }\\n        \\n        .location-button:hover:not(.disabled) {\\n            background: linear-gradient(180deg, #fff8fa, var(--gal-primary-light));\\n            border-color: var(--gal-primary);\\n            transform: translateY(-3px) scale(1.02); /* More noticeable lift */\\n            box-shadow: 0 0 10px rgba(230, 168, 215, 0.3), var(--md-shadow-hover); /* Added glow */\\n        }\\n        \\n        .location-button.selected {\\n            background: linear-gradient(135deg, var(--gal-primary), var(--gal-pink)); /* Gradient for selected */\\n            border-color: var(--gal-primary);\\n            color: white;\\n            transform: translateY(-2px);\\n            box-shadow: 0 0 12px rgba(230, 168, 215, 0.5), var(--md-shadow-3);\\n            font-weight: bold; /* Bold text when selected */\\n        }\\n        \\n        .location-button.disabled {\\n            opacity: 0.6;\\n            cursor: not-allowed;\\n            background-color: var(--gal-bg-medium);\\n            box-shadow: none;\\n        }\\n        \\n        .location-button i {\\n            margin-right: 8px;\\n            color: var(--gal-primary);\\n            transition: color 0.2s ease;\\n        }\\n        \\n        .location-button.selected i {\\n            color: white;\\n        }\\n        \\n        /* 次级地点选择 */\\n        .sub-location-grid {\\n            display: grid;\\n            grid-template-columns: repeat(auto-fill, minmax(170px, 1fr)); /* Slightly larger */\\n            gap: 15px; /* Increased gap */\\n            margin-bottom: 30px; /* Increased margin */\\n            padding: 25px; /* Increased padding */\\n            background-color: rgba(255, 248, 252, 0.6); /* Lighter bg */\\n            border-radius: var(--md-border-radius-medium);\\n            border: 1px dashed var(--gal-border); /* Dashed border */\\n        }\\n        \\n        .sub-location-button {\\n            background-color: var(--gal-bg-light);\\n            border: 1px solid var(--gal-border);\\n            border-radius: var(--md-border-radius-small);\\n            padding: 14px 20px; /* Increased padding */\\n            color: var(--gal-text-dark);\\n            font-family: var(--font-main);\\n            font-size: 15px; /* Slightly larger */\\n            cursor: pointer;\\n            transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1); /* Enhanced transition */\\n            text-align: left;\\n            box-shadow: var(--md-shadow-1);\\n        }\\n        \\n        .sub-location-button:hover {\\n            background-color: white;\\n            border-color: var(--gal-primary);\\n            transform: translateY(-3px) scale(1.01); /* More noticeable lift */\\n            box-shadow: 0 0 8px rgba(230, 168, 215, 0.2), var(--md-shadow-hover); /* Added glow */\\n        }\\n        \\n        .sub-location-button.selected {\\n            background: linear-gradient(135deg, var(--gal-primary), var(--gal-pink)); /* Gradient */\\n            border-color: var(--gal-primary);\\n            color: white;\\n            transform: translateY(-2px);\\n            box-shadow: 0 0 10px rgba(230, 168, 215, 0.4), var(--md-shadow-3);\\n            font-weight: bold;\\n        }\\n        \\n        .sub-location-button i {\\n            margin-right: 10px;\\n            color: var(--gal-primary);\\n            transition: color 0.2s ease;\\n        }\\n        \\n        .sub-location-button.selected i {\\n            color: white;\\n        }\\n        \\n        /* 地点详情 */\\n        .location-details {\\n            margin-top: 30px; /* Increased margin */\\n            padding: 30px; /* Increased padding */\\n            background: linear-gradient(180deg, white, #fff8fa); /* Subtle gradient */\\n            border-radius: var(--md-border-radius-large);\\n            border: 1px solid var(--gal-border);\\n            box-shadow: var(--md-shadow-2);\\n            border-left: 5px solid var(--gal-primary-light); /* Add a side accent */\\n        }\\n        \\n        .detail-header {\\n            font-size: 20px; /* Slightly larger */\\n            font-weight: normal;\\n            margin-bottom: 25px; /* Increased margin */\\n            padding-bottom: 18px; /* Increased padding */\\n            border-bottom: 1px dashed var(--gal-border); /* Dashed border */\\n            color: var(--gal-primary);\\n            text-align: center;\\n            text-shadow: 1px 1px 3px rgba(255, 255, 255, 0.5);\\n        }\\n        \\n        .detail-header i {\\n            margin-right: 8px;\\n        }\\n        \\n        .section-title {\\n            font-size: 16px; /* Slightly larger */\\n            color: var(--gal-text-muted);\\n            margin-bottom: 18px; /* Increased margin */\\n            font-weight: normal;\\n            border-left: 4px solid var(--gal-primary-light);\\n            padding-left: 10px;\\n        }\\n        \\n        .section-title i {\\n            margin-right: 8px;\\n            color: var(--gal-primary);\\n        }\\n        \\n        .character-list {\\n            display: grid;\\n            grid-template-columns: repeat(auto-fill, minmax(130px, 1fr)); /* Slightly larger */\\n            gap: 15px; /* Increased gap */\\n            margin-bottom: 30px; /* Increased margin */\\n        }\\n        \\n        .character-item {\\n            background-color: var(--gal-bg-light);\\n            border: 1px solid var(--gal-border);\\n            border-radius: var(--md-border-radius-small);\\n            padding: 14px; /* Increased padding */\\n            font-size: 14px;\\n            transition: all 0.2s ease;\\n            box-shadow: inset 0 0 5px rgba(240, 208, 224, 0.1); /* Subtle inner shadow */\\n        }\\n        \\n        .character-item:hover {\\n            transform: translateY(-2px) scale(1.03);\\n            box-shadow: 0 2px 6px rgba(180, 150, 170, 0.15), inset 0 0 8px rgba(240, 208, 224, 0.2);\\n            border-color: var(--gal-primary-light);\\n            background-color: white;\\n        }\\n        \\n        .character-item i {\\n            margin-right: 8px;\\n            color: var(--gal-primary);\\n        }\\n        \\n        .character-item.empty {\\n            color: var(--gal-text-muted);\\n            opacity: 0.7;\\n            background-color: var(--gal-bg-medium);\\n            text-align: center;\\n        }\\n         .character-item.empty i {\\n            display: block;\\n            margin: 0 auto 5px auto; /* Center icon */\\n            color: var(--gal-text-muted);\\n        }\\n        \\n        .action-section {\\n            margin-top: 25px;\\n            text-align: center;\\n        }\\n        \\n        .action-button {\\n            background: linear-gradient(45deg, var(--gal-success), #bce2c4); /* Gradient success */\\n            color: white;\\n            border: none;\\n            border-radius: 50px;\\n            padding: 14px 40px; /* Adjusted padding */\\n            font-size: 17px; /* Slightly larger */\\n            font-weight: bold; /* Bold action */\\n            cursor: pointer;\\n            transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\\n            box-shadow: 0 4px 8px rgba(168, 216, 176, 0.3), var(--md-shadow-2); /* Enhanced shadow */\\n            letter-spacing: 1px;\\n            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\\n        }\\n        \\n        .action-button:hover {\\n            background: linear-gradient(45deg, #96b09b, #a8d8b0);\\n            transform: translateY(-3px) scale(1.03);\\n            box-shadow: 0 6px 12px rgba(168, 216, 176, 0.4), var(--md-shadow-hover); /* Enhanced hover shadow */\\n        }\\n        \\n        .action-button i {\\n            margin-right: 8px;\\n        }\\n        \\n        /* 确认对话框 */\\n        .modal-overlay {\\n            position: fixed;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n            background-color: rgba(50, 50, 50, 0.6); /* Darker overlay */\\n            backdrop-filter: blur(4px); /* Stronger blur */\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n            z-index: 1000;\\n            opacity: 0;\\n            transition: opacity 0.3s ease;\\n            pointer-events: none;\\n        }\\n        \\n        .modal-overlay:not(.hidden) {\\n           opacity: 1;\\n           pointer-events: auto;\\n        }\\n\\n        .confirm-dialog {\\n            background: linear-gradient(160deg, white, var(--gal-bg-light)); /* Subtle gradient */\\n            border: 3px solid var(--gal-primary-light); /* Thicker, lighter border */\\n            border-radius: var(--md-border-radius-large);\\n            padding: 35px; /* Increased padding */\\n            width: 90%;\\n            max-width: 400px; /* Slightly wider */\\n            box-shadow: 0 0 20px rgba(230, 168, 215, 0.25), var(--md-shadow-3);\\n            transform: scale(0.95);\\n            transition: transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275); /* Bouncier transition */\\n            position: relative;\\n            /* Add corner decoration */\\n            /* background-image: url('...'); */ /* Optional: add corner image */\\n        }\\n\\n        .modal-overlay:not(.hidden) .confirm-dialog {\\n           transform: scale(1);\\n        }\\n        \\n        .confirm-dialog h4 {\\n            color: var(--gal-primary);\\n            margin-top: 0;\\n            margin-bottom: 20px;\\n            font-family: var(--font-title);\\n            text-align: center;\\n            font-size: 20px; /* Slightly smaller */\\n        }\\n        \\n        .confirm-dialog p {\\n            margin-bottom: 30px; /* More space */\\n            line-height: 1.7;\\n            text-align: center;\\n            font-size: 15px;\\n            color: var(--gal-text-muted);\\n        }\\n        \\n        .dialog-buttons {\\n            display: flex;\\n            justify-content: space-around; /* Space around */\\n            gap: 15px;\\n        }\\n        \\n        .dialog-button {\\n            flex-grow: 1; /* Buttons take equal space */\\n            padding: 10px 20px;\\n            border-radius: 50px; /* Fully rounded */\\n            cursor: pointer;\\n            transition: background-color 0.2s ease, box-shadow 0.3s ease, transform 0.2s ease; /* Smooth transitions */\\n            border: none;\\n            font-family: var(--font-main);\\n            font-size: 15px;\\n            font-weight: normal; /* Normal weight */\\n            text-align: center;\\n        }\\n        \\n        .cancel-button {\\n            background-color: var(--gal-bg-medium); /* Muted background */\\n            color: var(--gal-text-dark);\\n            box-shadow: var(--md-shadow-1);\\n        }\\n        \\n        .cancel-button:hover {\\n            background-color: var(--gal-border); /* Slightly darker */\\n            transform: translateY(-2px); /* 微交互 */\\n            box-shadow: var(--md-shadow-2); /* 微交互 */\\n        }\\n        \\n        .confirm-button {\\n            background-color: var(--gal-success);\\n            color: white; /* White text */\\n            box-shadow: var(--md-shadow-2);\\n        }\\n        \\n        .confirm-button:hover {\\n            background-color: #96b09b; /* Darker success */\\n            transform: translateY(-2px); /* 微交互 */\\n            box-shadow: var(--md-shadow-hover); /* 微交互 */\\n        }\\n\\n        .dialog-button i {\\n            margin-right: 6px;\\n        }\\n        \\n        /* 通用辅助类 */\\n        .hidden {\\n            /* Keep display: none, but handle overlay visibility with opacity */\\n            display: none;\\n        }\\n        \\n        /* 响应式样式 */\\n        @media (max-width: 700px) {\\n            .location-grid,\\n            .sub-location-grid {\\n                grid-template-columns: repeat(auto-fill, minmax(120px, 1fr)); /* Adjust for smaller screens */\\n            }\\n            \\n            .character-list {\\n                grid-template-columns: repeat(auto-fill, minmax(110px, 1fr));\\n            }\\n\\n             .map-interface {\\n                padding: 20px;\\n            }\\n            .confirm-dialog {\\n                padding: 25px;\\n            }\\n        }\\n        \\n        @media (max-width: 480px) {\\n            body {\\n                padding: 5px;\\n            }\\n            .map-interface {\\n                padding: 15px;\\n                border-radius: var(--md-border-radius-medium);\\n            }\\n            .location-grid,\\n            .sub-location-grid {\\n                grid-template-columns: repeat(2, 1fr); /* Two columns */\\n                gap: 10px;\\n            }\\n             .sub-location-grid {\\n                padding: 15px;\\n            }\\n            .location-button {\\n                padding: 12px;\\n                font-size: 14px;\\n            }\\n             .sub-location-button {\\n                padding: 10px 15px;\\n                font-size: 13px;\\n            }\\n\\n            .character-list {\\n                grid-template-columns: repeat(2, 1fr); /* Two columns */\\n                 gap: 10px;\\n            }\\n             .character-item {\\n                padding: 10px;\\n                font-size: 13px;\\n            }\\n            \\n            .map-header h2 {\\n                font-size: 22px;\\n            }\\n            .map-header h2:before,\\n            .map-header h2:after {\\n                font-size: 16px;\\n                margin: 0 5px;\\n            }\\n            .movement-alert {\\n                 padding: 12px;\\n                 font-size: 14px;\\n            }\\n             .detail-header {\\n                font-size: 16px;\\n            }\\n            .section-title {\\n                font-size: 14px;\\n            }\\n            .action-button {\\n                padding: 10px 30px;\\n                font-size: 15px;\\n            }\\n\\n            .confirm-dialog {\\n                padding: 20px;\\n                width: 95%;\\n                 border-radius: var(--md-border-radius-medium);\\n            }\\n             .confirm-dialog h4 {\\n                font-size: 18px;\\n            }\\n             .confirm-dialog p {\\n                 font-size: 14px;\\n                 margin-bottom: 25px;\\n            }\\n             .dialog-buttons {\\n                flex-direction: column;\\n                gap: 12px;\\n            }\\n             .dialog-button {\\n                font-size: 14px;\\n            }\\n            .cancel-button {\\n                order: 2;\\n            }\\n            .confirm-button {\\n                order: 1;\\n            }\\n        }\\n    </style>\\n</body>\\n</html>\\n```\",\"trimStrings\":[],\"placement\":[2],\"disabled\":true,\"markdownOnly\":true,\"promptOnly\":false,\"runOnEdit\":true,\"substituteRegex\":0,\"minDepth\":null,\"maxDepth\":null},{\"id\":\"5777542f-1921-4345-9e36-a6b9f483c2a0\",\"scriptName\":\"[羊皮纸西幻风UI]脚本-导航模块[四选一]\",\"findRegex\":\"<map_data>([\\\\s\\\\S]*?)<\\\\/map_data>\",\"replaceString\":\"```\\n<!DOCTYPE html>\\n<html lang=\\\"zh-CN\\\">\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    <title>恋爱冒险地图</title>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\\\">\\n    <link href=\\\"https://fonts.googleapis.com/css2?family=ZCOOL+XiaoWei&family=ZCOOL+QingKe+HuangYou&display=swap\\\" rel=\\\"stylesheet\\\">\\n    <link href=\\\"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Merriweather:ital,wght@0,400;0,700;1,400&display=swap\\\" rel=\\\"stylesheet\\\">\\n</head>\\n<body>\\n    <div id=\\\"map-data-source\\\" style=\\\"display:none;\\\">$1</div>\\n    <div class=\\\"map-interface\\\">\\n        <div class=\\\"map-header\\\">\\n            <h2 id=\\\"map-title\\\">通用地图导航</h2>\\n        </div>\\n\\n        <!-- 移动限制提示 -->\\n        <div id=\\\"movement-alert\\\" class=\\\"movement-alert hidden\\\">\\n            <i class=\\\"fas fa-exclamation-triangle\\\"></i> 提示：你现在无法移动        </div>\\n\\n        <!-- 主地点选择区域 -->\\n        <div id=\\\"main-locations\\\" class=\\\"location-grid\\\">\\n            <!-- 主要地点按钮将在这里动态生成 -->\\n        </div>\\n\\n        <!-- 次级地点选择区域 -->\\n        <div id=\\\"sub-locations\\\" class=\\\"sub-location-grid hidden\\\">\\n            <!-- 次级地点按钮将在这里动态生成 -->\\n        </div>\\n\\n        <!-- 地点详情区域 -->\\n        <div id=\\\"location-details\\\" class=\\\"location-details hidden\\\">\\n            <div class=\\\"detail-header\\\">\\n                <i class=\\\"fas fa-map-marker-alt\\\"></i> <span id=\\\"selected-location\\\">未选择</span>\\n            </div>\\n            <div class=\\\"detail-content\\\">\\n                <div class=\\\"character-section\\\">\\n                    <div class=\\\"section-title\\\"><i class=\\\"fas fa-user-friends\\\"></i> 可能遇见的人</div>\\n                    <div id=\\\"location-characters\\\" class=\\\"character-list\\\">\\n                        <!-- 角色列表将在这里动态生成 -->\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"action-section\\\">\\n                <button id=\\\"confirm-move-btn\\\" class=\\\"action-button\\\">\\n                    <i class=\\\"fas fa-walking\\\"></i> 前往此处\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <!-- 确认移动弹窗 -->\\n    <div id=\\\"confirm-overlay\\\" class=\\\"modal-overlay hidden\\\">\\n        <div class=\\\"confirm-dialog\\\">\\n            <h4>确认前往</h4>\\n            <p id=\\\"confirm-message\\\"></p>\\n            <div class=\\\"dialog-buttons\\\">\\n                <button id=\\\"cancel-move-btn\\\" class=\\\"dialog-button cancel-button\\\">\\n                    <i class=\\\"fas fa-times\\\"></i> 再想想\\n                </button>\\n                <button id=\\\"execute-move-btn\\\" class=\\\"dialog-button confirm-button\\\">\\n                    <i class=\\\"fas fa-check\\\"></i> 出发吧\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <script>\\n        // 全局变量\\n        let mapData = null;\\n        let selectedMain = null;\\n        let selectedSub = null;\\n        let selectedCharacters = [];\\n        let hasMoveBlock = false;\\n\\n        // 解析地图数据\\n        function parseMapData(text) {\\n            if (!text || typeof text !== 'string') {\\n                console.error(\\\"无效的地图数据\\\", text);\\n                return null;\\n            }\\n\\n            console.log(\\\"开始解析地图数据:\\\", text.substring(0, 50) + \\\"...\\\");\\n\\n            const data = {\\n                moveBlocked: false,\\n                locations: []\\n            };\\n\\n            try {\\n                // 解析移动限制状态\\n                const moveBlockMatch = /\\\\[MOVEBLOCK:(YES|NO)\\\\]/.exec(text);\\n                if (moveBlockMatch) {\\n                    data.moveBlocked = moveBlockMatch[1] === 'YES';\\n                }\\n\\n                // 解析地点数据\\n                const locationMatches = Array.from(text.matchAll(/\\\\[(.*?)(?=\\\\]|\\\\[(?!.*\\\\[))/gs));\\n                console.log(`找到 ${locationMatches.length} 个位置匹配项`);\\n                \\n                for (const match of locationMatches) {\\n                    const locationText = match[1].trim();\\n                    \\n                    // 跳过MOVEBLOCK行\\n                    if (locationText.startsWith('MOVEBLOCK:')) {\\n                        console.log(\\\"跳过MOVEBLOCK行\\\");\\n                        continue;\\n                    }\\n                    \\n                    const lines = locationText.split('\\\\n');\\n                    if (lines.length < 1) continue;\\n                    \\n                    const mainLocation = lines[0].trim();\\n                    console.log(\\\"处理主地点:\\\", mainLocation);\\n                    const subLocations = [];\\n                    \\n                    // 解析子地点\\n                    for (let i = 1; i < lines.length; i++) {\\n                        const subLine = lines[i].trim();\\n                        if (!subLine.startsWith('-')) continue;\\n                        \\n                        // 格式: - 地点X: 角色1, 角色2\\n                        const subMatch = /- (.*?):(.*?)$/.exec(subLine);\\n                        if (subMatch) {\\n                            const subName = subMatch[1].trim();\\n                            const charactersText = subMatch[2].trim();\\n                            const characters = charactersText.split(',').map(c => c.trim()).filter(c => c);\\n                            \\n                            console.log(`  子地点: ${subName}, 角色: ${characters.join(', ')}`);\\n                            \\n                            subLocations.push({\\n                                name: subName,\\n                                characters: characters\\n                            });\\n                        }\\n                    }\\n                    \\n                    if (mainLocation) {\\n                        data.locations.push({\\n                            name: mainLocation,\\n                            subLocations: subLocations\\n                        });\\n                    }\\n                }\\n                \\n                console.log(\\\"解析后的地图数据:\\\", data);\\n                return data;\\n            } catch (error) {\\n                console.error(\\\"解析地图数据时出错:\\\", error);\\n                return null;\\n            }\\n        }\\n\\n        // 渲染地图界面\\n        function renderMapInterface(mapData) {\\n            if (!mapData) return;\\n            \\n            hasMoveBlock = mapData.moveBlocked;\\n            \\n            // 显示/隐藏移动限制提示\\n            const movementAlert = document.getElementById('movement-alert');\\n            if (hasMoveBlock) {\\n                movementAlert.classList.remove('hidden');\\n            } else {\\n                movementAlert.classList.add('hidden');\\n            }\\n            \\n            // 渲染主地点按钮\\n            const mainLocationsContainer = document.getElementById('main-locations');\\n            mainLocationsContainer.innerHTML = '';\\n            \\n            mapData.locations.forEach(location => {\\n                const button = document.createElement('button');\\n                button.className = 'location-button';\\n                \\n                // 为不同地点设置不同的图标\\n                let icon = 'fa-map';\\n                if (location.name.includes('学校')) icon = 'fa-school';\\n                else if (location.name.includes('公园')) icon = 'fa-tree';\\n                else if (location.name.includes('商业')) icon = 'fa-store';\\n                else if (location.name.includes('住宅')) icon = 'fa-home';\\n                else if (location.name.includes('站')) icon = 'fa-train';\\n                \\n                button.innerHTML = `<i class=\\\"fas ${icon}\\\"></i> ${location.name}`;\\n                button.dataset.location = location.name;\\n                \\n                button.addEventListener('click', () => selectMainLocation(location));\\n                \\n                if (hasMoveBlock) {\\n                    button.disabled = true;\\n                    button.classList.add('disabled');\\n                }\\n                \\n                mainLocationsContainer.appendChild(button);\\n            });\\n            \\n            // 隐藏子地点和详情\\n            document.getElementById('sub-locations').classList.add('hidden');\\n            document.getElementById('location-details').classList.add('hidden');\\n        }\\n        \\n        // 选择主地点\\n        function selectMainLocation(location) {\\n            if (hasMoveBlock) return;\\n            \\n            selectedMain = location;\\n            \\n            // 高亮选中的主地点按钮\\n            const allMainButtons = document.querySelectorAll('#main-locations .location-button');\\n            allMainButtons.forEach(btn => {\\n                btn.classList.remove('selected');\\n                if (btn.dataset.location === location.name) {\\n                    btn.classList.add('selected');\\n                }\\n            });\\n            \\n            // 渲染子地点\\n            const subLocationsContainer = document.getElementById('sub-locations');\\n            subLocationsContainer.innerHTML = '';\\n            \\n            location.subLocations.forEach(subLocation => {\\n                const button = document.createElement('button');\\n                button.className = 'sub-location-button';\\n                \\n                // 为不同子地点设置不同的图标\\n                let icon = 'fa-map-pin';\\n                if (subLocation.name.includes('教室')) icon = 'fa-chalkboard';\\n                else if (subLocation.name.includes('咖啡')) icon = 'fa-coffee';\\n                else if (subLocation.name.includes('图书')) icon = 'fa-book';\\n                else if (subLocation.name.includes('商店')) icon = 'fa-shopping-bag';\\n                else if (subLocation.name.includes('广场')) icon = 'fa-clock';\\n                \\n                button.innerHTML = `<i class=\\\"fas ${icon}\\\"></i> ${subLocation.name}`;\\n                button.dataset.sublocation = subLocation.name;\\n                \\n                button.addEventListener('click', () => selectSubLocation(subLocation));\\n                \\n                subLocationsContainer.appendChild(button);\\n            });\\n            \\n            // 显示子地点区域\\n            subLocationsContainer.classList.remove('hidden');\\n            \\n            // 隐藏详情区域\\n            document.getElementById('location-details').classList.add('hidden');\\n            \\n            // 重置子地点选择\\n            selectedSub = null;\\n        }\\n        \\n        // 选择子地点\\n        function selectSubLocation(subLocation) {\\n            if (hasMoveBlock) return;\\n            \\n            selectedSub = subLocation;\\n            selectedCharacters = subLocation.characters;\\n            \\n            // 高亮选中的子地点按钮\\n            const allSubButtons = document.querySelectorAll('#sub-locations .sub-location-button');\\n            allSubButtons.forEach(btn => {\\n                btn.classList.remove('selected');\\n                if (btn.dataset.sublocation === subLocation.name) {\\n                    btn.classList.add('selected');\\n                }\\n            });\\n            \\n            // 更新地点详情\\n            document.getElementById('selected-location').textContent = `${selectedMain.name} - ${subLocation.name}`;\\n            \\n            // 更新角色列表\\n            const charactersContainer = document.getElementById('location-characters');\\n            charactersContainer.innerHTML = '';\\n            \\n            if (subLocation.characters.length > 0) {\\n                subLocation.characters.forEach(character => {\\n                    const charElement = document.createElement('div');\\n                    charElement.className = 'character-item';\\n                    charElement.innerHTML = `<i class=\\\"fas fa-user\\\"></i> ${character}`;\\n                    charactersContainer.appendChild(charElement);\\n                });\\n            } else {\\n                const noCharElement = document.createElement('div');\\n                noCharElement.className = 'character-item empty';\\n                noCharElement.innerHTML = `<i class=\\\"fas fa-user-slash\\\"></i> 这里没有人`;\\n                charactersContainer.appendChild(noCharElement);\\n            }\\n            \\n            // 显示详情区域\\n            document.getElementById('location-details').classList.remove('hidden');\\n        }\\n        \\n        // 确认移动\\n        function confirmMove() {\\n            if (hasMoveBlock || !selectedMain || !selectedSub) return;\\n            \\n            const locationName = `${selectedMain.name} - ${selectedSub.name}`;\\n            const characters = selectedCharacters.join(', ');\\n            \\n            // 显示确认对话框\\n            const confirmMessage = document.getElementById('confirm-message');\\n            if (characters) {\\n                confirmMessage.textContent = `前往 ${locationName}？你可能会遇见：${characters}`;\\n            } else {\\n                confirmMessage.textContent = `前往 ${locationName}？那里好像没有人。`;\\n            }\\n            \\n            document.getElementById('confirm-overlay').classList.remove('hidden');\\n        }\\n        \\n        // 执行移动\\n        function executeMove() {\\n            if (hasMoveBlock || !selectedMain || !selectedSub) return;\\n            \\n            const locationName = `${selectedMain.name} - ${selectedSub.name}`;\\n            const characters = selectedCharacters.join(',');\\n            \\n            // 构建移动消息\\n            let message = `<request:{{user}}前往了${locationName}.`;\\n            if (characters) {\\n                message += `${characters}在那里`;\\n            }\\n            message += \\\">\\\";\\n            \\n            // 如果存在 triggerSlash 函数，发送消息\\n            if (typeof triggerSlash === 'function') {\\n                try {\\n                    triggerSlash(`/send ${message} || /trigger`);\\n                } catch (e) {\\n                    console.error(\\\"发送消息时出错:\\\", e);\\n                    alert(\\\"发送消息失败，请重试。\\\");\\n                }\\n            } else {\\n                console.log(\\\"移动命令:\\\", message);\\n                alert(\\\"移动请求已生成。在实际环境中，这将发送到AI。\\\");\\n            }\\n            \\n            // 隐藏确认对话框\\n            document.getElementById('confirm-overlay').classList.add('hidden');\\n            \\n            // 重置选择\\n            resetSelection();\\n        }\\n        \\n        // 重置选择\\n        function resetSelection() {\\n            selectedMain = null;\\n            selectedSub = null;\\n            selectedCharacters = [];\\n            \\n            // 清除所有选中状态\\n            document.querySelectorAll('.location-button, .sub-location-button').forEach(btn => {\\n                btn.classList.remove('selected');\\n            });\\n            \\n            // 隐藏子地点和详情\\n            document.getElementById('sub-locations').classList.add('hidden');\\n            document.getElementById('location-details').classList.add('hidden');\\n        }\\n        \\n        // 处理地图数据\\n        function processMapData() {\\n            const dataSource = document.getElementById('map-data-source');\\n            if (!dataSource) {\\n                console.error(\\\"未找到地图数据源元素\\\");\\n                return;\\n            }\\n            \\n            let mapText = dataSource.textContent || dataSource.innerText;\\n            console.log(\\\"获取到的地图数据文本:\\\", mapText ? \\\"有数据\\\" : \\\"无数据\\\", \\\"长度:\\\", mapText ? mapText.length : 0);\\n            \\n            // 尝试从父窗口获取数据（SillyTavern环境）\\n            try {\\n                if (window.parent && window.parent !== window) {\\n                    console.log(\\\"在iframe中运行，尝试从SillyTavern获取数据\\\");\\n                    \\n                    // 尝试获取所有消息元素\\n                    const allMessages = window.parent.document.querySelectorAll('.mes_text, .mes_content, .message-content, .message_text');\\n                    console.log(`找到 ${allMessages.length} 个可能的消息元素`);\\n                    \\n                    // 检查最近的几条消息\\n                    let foundMapData = false;\\n                    for (let i = allMessages.length - 1; i >= 0 && i >= allMessages.length - 5; i--) {\\n                        const messageText = allMessages[i].textContent || allMessages[i].innerText;\\n                        console.log(`检查消息 #${i}，长度: ${messageText.length}，前30个字符: ${messageText.substring(0, 30)}...`);\\n                        \\n                        // 同时检查旧格式[EMOTION:]和新格式[MOVEBLOCK:]\\n                        if (messageText && (messageText.includes('[EMOTION:') || messageText.includes('[MOVEBLOCK:'))) {\\n                            console.log(`在消息 #${i} 中找到地图数据`);\\n                            mapText = messageText;\\n                            foundMapData = true;\\n                            break;\\n                        }\\n                    }\\n                    \\n                    if (!foundMapData) {\\n                        console.log(\\\"在消息中未找到地图数据，尝试直接在页面中搜索\\\");\\n                        // 尝试在整个文档中搜索地图数据格式\\n                        const bodyText = window.parent.document.body.textContent || window.parent.document.body.innerText;\\n                        \\n                        // 先尝试查找新格式\\n                        let mapDataStart = bodyText.indexOf('[MOVEBLOCK:');\\n                        \\n                        // 如果没找到新格式，尝试查找旧格式\\n                        if (mapDataStart === -1) {\\n                            mapDataStart = bodyText.indexOf('[EMOTION:');\\n                        }\\n                        \\n                        if (mapDataStart !== -1) {\\n                            // 找到开始标记，现在找到结束位置（假设地图数据以 ']' 结尾且后面不是另一个地图数据块）\\n                            let mapDataEnd = bodyText.indexOf(']', mapDataStart);\\n                            while (bodyText.charAt(mapDataEnd + 1) === '[') {\\n                                mapDataEnd = bodyText.indexOf(']', mapDataEnd + 1);\\n                            }\\n                            \\n                            if (mapDataEnd !== -1) {\\n                                const extractedData = bodyText.substring(mapDataStart, mapDataEnd + 1);\\n                                console.log(\\\"从页面提取的地图数据:\\\", extractedData.substring(0, 50) + \\\"...\\\");\\n                                if (extractedData.includes('\\\\n')) {\\n                                    mapText = extractedData;\\n                                }\\n                            }\\n                        }\\n                    }\\n                }\\n            } catch (e) {\\n                console.log(\\\"无法从父窗口获取数据:\\\", e);\\n            }\\n            \\n            // 如果提供了URL参数中的数据，使用它\\n            try {\\n                const urlParams = new URLSearchParams(window.location.search);\\n                const urlData = urlParams.get('data');\\n                if (urlData) {\\n                    const decodedData = decodeURIComponent(urlData);\\n                    console.log(\\\"从URL参数获取数据:\\\", decodedData.substring(0, 30) + \\\"...\\\");\\n                    if (decodedData.includes('[EMOTION:') || decodedData.includes('[MOVEBLOCK:')) {\\n                        mapText = decodedData;\\n                    }\\n                }\\n            } catch (e) {\\n                console.log(\\\"无法从URL参数获取数据:\\\", e);\\n            }\\n            \\n            // 直接尝试使用用户提供的测试数据\\n            if (!mapText || (!mapText.includes('[EMOTION:') && !mapText.includes('[MOVEBLOCK:'))) {\\n                console.log(\\\"尝试使用测试数据\\\");\\n                mapText = `[MOVEBLOCK:NO]\\n[校园区域\\n- 教学楼: 班主任, 数学老师\\n- 图书馆: 文学社社长, 图书管理员\\n- 操场: 体育老师, 田径队队长]\\n[商业街\\n- 咖啡厅: 服务员小雅, 钢琴少女\\n- 游戏厅: 游戏高手小明, 不良少年\\n- 书店: 眼镜店主, 神秘顾客]\\n[住宅区\\n- 公寓楼: 邻居阿姨, 宠物猫咪\\n- 小公园: 晨练老人, 遛狗少年\\n- 便利店: 店长, 兼职学生]`;\\n                \\n                dataSource.textContent = mapText;\\n                console.log(\\\"已设置测试数据\\\");\\n            }\\n            \\n            // 兼容旧版数据格式（EMOTION -> MOVEBLOCK）\\n            if (mapText && mapText.includes('[EMOTION:')) {\\n                console.log(\\\"转换旧版数据格式（EMOTION -> MOVEBLOCK）\\\");\\n                mapText = mapText.replace(/\\\\[EMOTION:(BAD|GOOD)\\\\]/g, function(match, state) {\\n                    return `[MOVEBLOCK:${state === 'BAD' ? 'YES' : 'NO'}]`;\\n                });\\n            }\\n            \\n            // 现在解析和渲染地图数据\\n            mapData = parseMapData(mapText);\\n            \\n            if (mapData) {\\n                renderMapInterface(mapData);\\n            } else {\\n                console.error(\\\"地图数据解析失败\\\");\\n            }\\n        }\\n        \\n        // 注册事件监听器\\n        function setupEventListeners() {\\n            // 确认移动按钮\\n            document.getElementById('confirm-move-btn').addEventListener('click', confirmMove);\\n            \\n            // 确认对话框按钮\\n            document.getElementById('cancel-move-btn').addEventListener('click', () => {\\n                document.getElementById('confirm-overlay').classList.add('hidden');\\n            });\\n            \\n            document.getElementById('execute-move-btn').addEventListener('click', executeMove);\\n        }\\n        \\n        // 初始化\\n        function init() {\\n            // 设置事件监听器\\n            setupEventListeners();\\n            \\n            // 处理地图数据\\n            processMapData();\\n            \\n            // 监听SillyTavern消息更新\\n            if (window.parent && window.parent !== window && typeof window.parent.eventOn === 'function' && window.parent.tavern_events) {\\n                window.parent.eventOn(window.parent.tavern_events.MESSAGE_UPDATED, () => {\\n                    setTimeout(processMapData, 300);\\n                });\\n                window.parent.eventOn(window.parent.tavern_events.MESSAGE_RECEIVED, () => {\\n                    setTimeout(processMapData, 300);\\n                });\\n            }\\n        }\\n        \\n        // 页面加载完成后初始化\\n        document.addEventListener('DOMContentLoaded', init);\\n    </script>\\n    \\n    <style>\\n        /* @import url('https://fonts.googleapis.com/css2?family=ZCOOL+XiaoWei&family=ZCOOL+QingKe+HuangYou&display=swap'); */\\n        /* @import url('https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Merriweather:ital,wght@0,400;0,700;1,400&display=swap'); */ /* Import moved to <head> */\\n        \\n        /* 西幻羊皮纸风格调色板 - 强化版 */\\n        :root {\\n            /* 羊皮纸与古籍色调 */\\n            --fantasy-bg-parchment: #f5eeda; /* 背景 - 羊皮纸色 */\\n            --fantasy-bg-light: #efe8d8;     /* 浅背景 - 略深的羊皮纸 */\\n            --fantasy-bg-medium: #d8ccb8;    /* 中等背景/边框 - 略深灰褐 */\\n            --fantasy-border: #a0937d;       /* 边框 - 更深米灰 */\\n            --fantasy-text-dark: #3d3226;    /* 深色文字 - 更深棕色 */\\n            --fantasy-text-medium: #605140;   /* 中等文字 - 略深棕褐 */\\n            --fantasy-text-muted: #827667;   /* 浅色文字 - 略深灰褐色 */\\n            --fantasy-primary: #7a3c0f;      /* 主色 - 更深的鞍褐色 */\\n            --fantasy-primary-light: #994d1e;/* 浅主色 - 略深黄褐色 */\\n            --fantasy-accent-gold: #c8a44f;  /* 点缀 - 调整为更亮的、类似参考图按钮的金色 */\\n            --fantasy-accent-gold-dark: #ae8a2e; /* 点缀 - 较暗的金色 */\\n            --fantasy-accent-red: #8b0000;   /* 点缀 - 更深的红色 */\\n            --fantasy-accent-green: #556b2f; /* 点缀 - 暗橄榄绿 */\\n            --fantasy-highlight-bg: #fffdf7; /* 高亮背景 - 略带米黄的白 */\\n            \\n            /* 字体 */\\n            --font-title: 'Cinzel', serif;\\n            --font-main: 'Merriweather', serif;\\n\\n            /* 边框与阴影 */\\n            --fantasy-border-radius-sharp: 4px;  /* 锐利边角 */\\n            --fantasy-border-radius-slight: 8px; /* 轻微圆角 */\\n            --fantasy-shadow-dark: 0 3px 6px rgba(74, 63, 48, 0.25); /* 深沉阴影 */\\n            --fantasy-shadow-medium: 0 2px 4px rgba(74, 63, 48, 0.2);  /* 中等阴影 */\\n            --fantasy-shadow-light: 0 1px 2px rgba(74, 63, 48, 0.15); /* 轻微阴影 */\\n            --fantasy-shadow-inset: inset 0 1px 3px rgba(74, 63, 48, 0.2); /* 内阴影 */\\n        }\\n        \\n        body {\\n            /* background-color: var(--fantasy-bg-parchment); */ /* Removed solid color */\\n            background-image: url('https://files.catbox.moe/qu564u.webp');\\n            background-size: cover; /* Cover the entire viewport */\\n            background-repeat: no-repeat; /* Prevent tiling */\\n            background-attachment: fixed; /* Keep background fixed during scroll */\\n            margin: 0;\\n            padding: 15px;\\n            font-family: var(--font-main);\\n            color: var(--fantasy-text-dark);\\n            box-sizing: border-box;\\n        }\\n        \\n        /* 地图界面容器 */\\n        .map-interface {\\n            max-width: 100%;\\n            width: 100%;\\n            margin: 20px auto; /* Add top/bottom margin */\\n            /* Adjusted background for better blending with image */\\n            background: rgba(239, 232, 216, 0.85); /* Adjusted opacity for readability */\\n            border: 4px solid var(--fantasy-primary); /* Thicker border */\\n            border-radius: 12px; /* More rounded corners */\\n            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3), inset 0 0 8px rgba(0, 0, 0, 0.2); /* Outer shadow + Inner shadow for frame effect */\\n            padding: 30px; /* Adjusted padding */\\n            box-sizing: border-box;\\n            position: relative;\\n            overflow: visible; /* Allow potential overflow from shadows/borders */\\n            /* Removed border-image */\\n        }\\n        \\n        /* 地图标题 */\\n        .map-header {\\n            text-align: center;\\n            margin-bottom: 30px;\\n            padding-bottom: 20px;\\n            border-bottom: 2px solid var(--fantasy-primary); /* 主要颜色实线 */\\n            position: relative;\\n        }\\n\\n        /* 添加标题装饰线 */\\n        .map-header::before, \\n        .map-header::after {\\n            content: '';\\n            position: absolute;\\n            bottom: -6px;\\n            height: 4px;\\n            width: 30%;\\n            background: linear-gradient(to right, transparent, var(--fantasy-accent-gold), transparent);\\n            opacity: 0.7;\\n        }\\n        .map-header::before {\\n            left: 0;\\n        }\\n        .map-header::after {\\n            right: 0;\\n        }\\n        \\n        .map-header h2 {\\n            font-size: 36px; /* Further increase size */\\n            margin: 0;\\n            padding: 10px;\\n            line-height: 1.4;\\n            color: var(--fantasy-primary);\\n            font-family: var(--font-title);\\n            font-weight: 700;\\n            position: relative;\\n            text-shadow: 1px 1px 0px var(--fantasy-highlight-bg), 2px 2px 2px rgba(0, 0, 0, 0.3); /* Sharper text shadow */\\n        }\\n        \\n        .map-header h2:before,\\n        .map-header h2:after {\\n            /* content: '⚜️'; */ /* Fleur-de-lis (may not render) or use FA icon */\\n            content: ''; /* Removed default icon */\\n            /* display: inline-block;\\n            margin: 0 15px;\\n            color: var(--fantasy-accent-gold);\\n            font-size: 22px;\\n            opacity: 0.9; */\\n        }\\n        \\n        /* 移动限制提示 */\\n        .movement-alert {\\n            background-color: rgba(139, 69, 19, 0.1); /* 浅褐色背景 */\\n            border: 1px solid var(--fantasy-accent-red); /* 深红色边框 */\\n            border-radius: var(--fantasy-border-radius-sharp);\\n            padding: 18px;\\n            margin-bottom: 30px;\\n            text-align: center;\\n            color: var(--fantasy-accent-red);\\n            font-weight: normal;\\n            box-shadow: var(--fantasy-shadow-inset);\\n            font-size: 15px;\\n            font-style: italic; /* 斜体提示 */\\n        }\\n        \\n        .movement-alert i {\\n            margin-right: 8px;\\n            color: inherit;\\n        }\\n        \\n        /* 地点选择网格 - 内嵌框架效果 */\\n        .location-grid {\\n            display: grid;\\n            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); /* Adjusted minmax */\\n            gap: 15px; /* Adjusted gap */\\n            margin-bottom: 30px;\\n            background-color: var(--fantasy-bg-light);\\n            padding: 20px; /* Padding for inset effect */\\n            border-radius: 8px; /* Rounded corners for inner frame */\\n            box-shadow: inset 0 2px 5px rgba(74, 63, 48, 0.2); /* Inner shadow for inset effect */\\n            border: 1px solid var(--fantasy-border);\\n        }\\n        \\n        .location-button {\\n            background: linear-gradient(180deg, var(--fantasy-highlight-bg), var(--fantasy-bg-light)); /* Lighter gradient */\\n            border: 1px solid var(--fantasy-border);\\n            border-radius: 8px; /* Rounded corners */\\n            padding: 15px 10px; /* Adjusted padding */\\n            color: var(--fantasy-text-medium);\\n            font-family: var(--font-main);\\n            font-size: 15px; /* Slightly smaller */\\n            font-weight: 400; /* Normal weight */\\n            cursor: pointer;\\n            transition: all 0.2s ease-out;\\n            text-align: center;\\n            box-shadow: 0 2px 3px rgba(74, 63, 48, 0.15); /* Softer drop shadow */\\n            position: relative;\\n        }\\n        \\n        .location-button:hover:not(.disabled) {\\n            background: var(--fantasy-highlight-bg);\\n            border-color: var(--fantasy-accent-gold-dark);\\n            color: var(--fantasy-text-dark);\\n            transform: translateY(-2px);\\n            box-shadow: 0 4px 6px rgba(74, 63, 48, 0.2);\\n            /* border-style: solid; */\\n        }\\n        \\n        .location-button.selected {\\n            background: var(--fantasy-highlight-bg);\\n            border-color: var(--fantasy-accent-gold);\\n            /* border-style: solid; */\\n            border-width: 2px; /* Slightly thicker border when selected */\\n            color: var(--fantasy-text-dark);\\n            transform: translateY(0);\\n            box-shadow: inset 0 1px 3px rgba(74, 63, 48, 0.2); /* Inset shadow when selected */\\n            font-weight: 700;\\n        }\\n        \\n        .location-button i {\\n            margin-right: 6px; /* Reduced margin */\\n            color: var(--fantasy-primary-light);\\n            transition: color 0.2s ease;\\n            text-shadow: none; /* Remove text shadow from icon */\\n            font-size: 1.1em; /* Slightly larger icon */\\n            vertical-align: middle; /* Align icon better */\\n        }\\n        \\n        .location-button.disabled {\\n            opacity: 0.6;\\n            cursor: not-allowed;\\n            background-color: var(--fantasy-bg-medium);\\n            box-shadow: none;\\n            color: var(--fantasy-text-muted);\\n            border-color: var(--fantasy-bg-medium);\\n        }\\n        \\n        /* 次级地点选择 - 简化 */\\n        .sub-location-grid {\\n            display: grid;\\n            grid-template-columns: repeat(auto-fill, minmax(170px, 1fr)); /* Adjusted */\\n            gap: 10px;\\n            margin-bottom: 30px;\\n            padding: 15px 10px;\\n            background-color: transparent; /* Remove background */\\n            border-radius: 0;\\n            border: none; /* Remove border */\\n            border-image: none; /* Remove border image */\\n        }\\n        \\n        .sub-location-button {\\n            background-color: rgba(239, 232, 216, 0.1); /* Very subtle background */\\n            border: 1px solid transparent;\\n            border-radius: var(--fantasy-border-radius-sharp);\\n            padding: 10px 15px;\\n            color: var(--fantasy-text-medium);\\n            font-family: var(--font-main);\\n            font-size: 14px;\\n            cursor: pointer;\\n            transition: all 0.2s ease-out;\\n            text-align: left;\\n            box-shadow: none;\\n            position: relative;\\n            border-left: none; /* Remove left border */\\n        }\\n\\n        .sub-location-button::before { \\n             content: none; /* Remove decorative bullet */\\n        }\\n        \\n        .sub-location-button:hover {\\n            background-color: rgba(174, 138, 46, 0.1); /* Lighter gold hover */\\n            color: var(--fantasy-text-dark);\\n            transform: translateX(0);\\n            box-shadow: none;\\n             border: 1px solid var(--fantasy-accent-gold-dark); /* Add border on hover */\\n        }\\n         .sub-location-button:hover::before {\\n             content: none;\\n         }\\n        \\n        .sub-location-button.selected {\\n            background-color: rgba(174, 138, 46, 0.15); /* Darker selected bg */\\n            border-color: var(--fantasy-accent-gold); /* Gold border when selected */\\n            color: var(--fantasy-text-dark);\\n            transform: translateX(0);\\n            box-shadow: none;\\n            font-weight: 700;\\n            border-left: none; /* Ensure no left border */\\n            padding-left: 15px; /* Reset padding */\\n        }\\n        .sub-location-button.selected::before {\\n             content: none;\\n         }\\n        \\n        /* 地点详情 */\\n        .location-details {\\n            margin-top: 30px;\\n            padding: 30px;\\n            background: var(--fantasy-bg-parchment);\\n            border-radius: var(--fantasy-border-radius-slight);\\n            border: 1px solid var(--fantasy-border);\\n            box-shadow: var(--fantasy-shadow-medium);\\n            border-left: 5px solid var(--fantasy-primary);\\n        }\\n        \\n        .detail-header {\\n            font-size: 26px; /* Increased size */\\n            font-weight: 700; /* Bolder */\\n            margin-bottom: 25px;\\n            padding-bottom: 18px;\\n            border-bottom: 1px solid var(--fantasy-border); /* Solid border */\\n            color: var(--fantasy-primary);\\n            text-align: center;\\n            font-family: var(--font-title);\\n            text-shadow: none;\\n        }\\n        \\n        .detail-header i {\\n            margin-right: 8px;\\n            color: var(--fantasy-accent-gold);\\n        }\\n        \\n        .section-title {\\n            font-size: 20px; /* Increased size */\\n            color: var(--fantasy-text-medium);\\n            margin-bottom: 20px;\\n            font-weight: 700; /* Bolder */\\n            border-left: none;\\n            padding-left: 0;\\n            border-bottom: 1px solid var(--fantasy-border); /* Solid border */\\n            padding-bottom: 8px;\\n            font-family: var(--font-title);\\n        }\\n        \\n        .section-title i {\\n            margin-right: 8px;\\n            color: var(--fantasy-primary-light);\\n        }\\n        \\n        .character-list {\\n            display: grid;\\n            grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));\\n            gap: 15px;\\n            margin-bottom: 30px;\\n        }\\n        \\n        .character-item {\\n            background-color: var(--fantasy-bg-light); /* Light bg */\\n            border: 1px solid var(--fantasy-border);\\n            border-radius: var(--fantasy-border-radius-sharp);\\n            padding: 12px; /* Adjusted padding */\\n            font-size: 14px;\\n            transition: all 0.2s ease;\\n            box-shadow: var(--fantasy-shadow-light);\\n            color: var(--fantasy-text-medium);\\n        }\\n        \\n        .character-item:hover {\\n            transform: none;\\n            box-shadow: var(--fantasy-shadow-medium);\\n            border-color: var(--fantasy-primary-light);\\n            background-color: var(--fantasy-highlight-bg);\\n            color: var(--fantasy-text-dark);\\n        }\\n        \\n        .character-item i {\\n            margin-right: 8px;\\n            color: var(--fantasy-text-muted);\\n        }\\n         .character-item:hover i {\\n             color: var(--fantasy-primary);\\n         }\\n        \\n        .character-item.empty {\\n            color: var(--fantasy-text-muted);\\n            opacity: 0.7;\\n            background-color: transparent;\\n            text-align: center;\\n            border-style: dashed;\\n        }\\n         .character-item.empty i {\\n            display: block;\\n            margin: 0 auto 5px auto; /* Center icon */\\n            color: var(--fantasy-text-muted);\\n        }\\n        \\n        .action-section {\\n            margin-top: 25px;\\n            text-align: center;\\n        }\\n        \\n        .action-button {\\n            background: linear-gradient(to bottom, var(--fantasy-accent-gold), var(--fantasy-accent-gold-dark)); /* Gold gradient */\\n            color: var(--fantasy-text-dark); /* Dark text on gold */\\n            border: 1px solid var(--fantasy-primary); /* Brown border */\\n            border-radius: 16px; /* Rounded corners like reference */\\n            padding: 10px 35px; /* Adjusted padding */\\n            font-size: 16px; /* Adjusted size */\\n            font-weight: 700;\\n            cursor: pointer;\\n            transition: all 0.2s ease-out;\\n            box-shadow: 0 2px 4px rgba(0,0,0,0.2), inset 0 -2px 3px rgba(0,0,0,0.1); /* Outer + Inner shadow for 3D */\\n            letter-spacing: 1px; /* Adjusted spacing */\\n            text-shadow: 1px 1px 0px rgba(255, 255, 255, 0.3); /* Light text shadow */\\n            font-family: var(--font-title);\\n        }\\n        \\n        .action-button:hover {\\n            background: linear-gradient(to bottom, #d4b261, var(--fantasy-accent-gold)); /* Lighter gold on hover */\\n            transform: translateY(-1px);\\n            box-shadow: 0 3px 6px rgba(0,0,0,0.25), inset 0 -1px 2px rgba(0,0,0,0.1); \\n            border-color: var(--fantasy-text-dark);\\n            /* border-style: solid; */\\n        }\\n        \\n        .action-button i {\\n            margin-right: 8px;\\n            filter: brightness(1.1); /* 让图标亮一点 */\\n        }\\n        \\n        /* 确认对话框 */\\n        .modal-overlay {\\n            position: fixed;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n            /* Slightly reduced opacity to see background texture */\\n            background-color: rgba(74, 63, 48, 0.65);\\n            backdrop-filter: blur(3px);\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n            z-index: 1000;\\n            opacity: 0;\\n            transition: opacity 0.3s ease;\\n            pointer-events: none;\\n        }\\n        \\n        .modal-overlay:not(.hidden) {\\n           opacity: 1;\\n           pointer-events: auto;\\n        }\\n\\n        .confirm-dialog {\\n            /* Adjusted background for texture visibility */\\n            background: rgba(239, 232, 216, 0.95); /* Slightly less transparent than main */\\n            border: 4px solid var(--fantasy-primary); /* Thicker border */\\n            border-radius: 12px; /* More rounded corners */\\n            padding: 35px; /* Adjusted padding */\\n            width: 90%;\\n            max-width: 450px; /* Wider */\\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.5), inset 0 0 10px rgba(0, 0, 0, 0.2); /* Deeper shadow + Inner shadow */\\n            transform: scale(0.95);\\n            transition: transform 0.3s ease-out;\\n            position: relative;\\n            color: var(--fantasy-text-dark);\\n            border-image: none; /* Ensure no border image */\\n        }\\n\\n        .confirm-dialog h4 {\\n            color: var(--fantasy-primary);\\n            margin-top: 0;\\n            margin-bottom: 25px; /* Increased margin */\\n            font-family: var(--font-title);\\n            text-align: center;\\n            font-size: 28px; /* Larger title */\\n            border-bottom: 1px solid var(--fantasy-border);\\n            padding-bottom: 15px;\\n            text-shadow: 1px 1px 1px var(--fantasy-highlight-bg);\\n        }\\n        \\n        .confirm-dialog p {\\n            margin-bottom: 30px;\\n            line-height: 1.8; /* 增加行高 */\\n            text-align: justify; /* 两端对齐 */\\n            font-size: 16px;\\n            color: var(--fantasy-text-medium);\\n        }\\n        \\n        .dialog-buttons {\\n            display: flex;\\n            justify-content: space-around; /* Space around */\\n            gap: 15px;\\n            margin-top: 10px; /* Add margin */\\n        }\\n        \\n        .dialog-button {\\n            flex-grow: 1; \\n            padding: 8px 15px; /* Adjusted padding */\\n            border-radius: 16px; /* Rounded corners */\\n            cursor: pointer;\\n            transition: all 0.2s ease-out;\\n            border-width: 1px;\\n            border-style: solid;\\n            font-family: var(--font-title); /* Use title font? Or main? */\\n            font-size: 15px;\\n            font-weight: 700;\\n            text-align: center;\\n            box-shadow: 0 2px 3px rgba(0,0,0,0.15), inset 0 -2px 2px rgba(0,0,0,0.1);\\n             text-shadow: 1px 1px 0px rgba(255, 255, 255, 0.2);\\n        }\\n        \\n        .cancel-button {\\n            background: linear-gradient(to bottom, #e0d8c8, #c8bca8);\\n            border-color: var(--fantasy-border);\\n            color: var(--fantasy-text-medium);\\n        }\\n        \\n        .cancel-button:hover {\\n            background: linear-gradient(to bottom, #efe8d8, #d8ccb8);\\n            border-color: var(--fantasy-text-medium);\\n            color: var(--fantasy-text-dark);\\n            transform: translateY(-1px);\\n            box-shadow: 0 3px 5px rgba(0,0,0,0.2), inset 0 -1px 1px rgba(0,0,0,0.1);\\n        }\\n        \\n        .confirm-button {\\n            background: linear-gradient(to bottom, var(--fantasy-accent-gold), var(--fantasy-accent-gold-dark));\\n            border-color: var(--fantasy-primary);\\n            color: var(--fantasy-text-dark);\\n        }\\n        \\n        .confirm-button:hover {\\n            background: linear-gradient(to bottom, #d4b261, var(--fantasy-accent-gold));\\n            border-color: var(--fantasy-text-dark);\\n            transform: translateY(-1px);\\n            box-shadow: 0 3px 5px rgba(0,0,0,0.2), inset 0 -1px 1px rgba(0,0,0,0.1);\\n        }\\n\\n        .dialog-button i {\\n            margin-right: 6px;\\n        }\\n        \\n        /* 通用辅助类 */\\n        .hidden {\\n            /* Keep display: none, but handle overlay visibility with opacity */\\n            display: none;\\n        }\\n        \\n        /* 响应式样式 */\\n        @media (max-width: 700px) {\\n            .location-grid,\\n            .sub-location-grid {\\n                grid-template-columns: repeat(auto-fill, minmax(120px, 1fr)); /* Adjust for smaller screens */\\n            }\\n            \\n            .character-list {\\n                grid-template-columns: repeat(auto-fill, minmax(110px, 1fr));\\n            }\\n\\n             .map-interface {\\n                padding: 20px;\\n            }\\n            .confirm-dialog {\\n                padding: 25px;\\n            }\\n        }\\n        \\n        @media (max-width: 480px) {\\n            body {\\n                padding: 5px;\\n            }\\n            .map-interface {\\n                padding: 15px;\\n                border-radius: var(--fantasy-border-radius-slight);\\n            }\\n            .location-grid,\\n            .sub-location-grid {\\n                grid-template-columns: repeat(2, 1fr); /* Two columns */\\n                gap: 10px;\\n            }\\n             .sub-location-grid {\\n                padding: 15px;\\n            }\\n            .location-button {\\n                padding: 12px;\\n                font-size: 14px;\\n            }\\n             .sub-location-button {\\n                padding: 10px 15px;\\n                font-size: 13px;\\n            }\\n\\n            .character-list {\\n                grid-template-columns: repeat(2, 1fr); /* Two columns */\\n                 gap: 10px;\\n            }\\n             .character-item {\\n                padding: 10px;\\n                font-size: 13px;\\n            }\\n            \\n            .map-header h2 {\\n                font-size: 22px;\\n            }\\n            .map-header h2:before,\\n            .map-header h2:after {\\n                font-size: 16px;\\n                margin: 0 5px;\\n            }\\n            .movement-alert {\\n                 padding: 12px;\\n                 font-size: 14px;\\n            }\\n             .detail-header {\\n                font-size: 16px;\\n            }\\n            .section-title {\\n                font-size: 14px;\\n            }\\n            .action-button {\\n                padding: 10px 30px;\\n                font-size: 15px;\\n            }\\n\\n            .confirm-dialog {\\n                padding: 20px;\\n                width: 95%;\\n                 border-radius: var(--fantasy-border-radius-slight);\\n            }\\n             .confirm-dialog h4 {\\n                font-size: 18px;\\n            }\\n             .confirm-dialog p {\\n                 font-size: 14px;\\n                 margin-bottom: 25px;\\n            }\\n             .dialog-buttons {\\n                flex-direction: column;\\n                gap: 12px;\\n            }\\n             .dialog-button {\\n                font-size: 14px;\\n            }\\n            .cancel-button {\\n                order: 2;\\n            }\\n            .confirm-button {\\n                order: 1;\\n            }\\n        }\\n    </style>\\n</body>\\n</html>\\n```\",\"trimStrings\":[],\"placement\":[2],\"disabled\":true,\"markdownOnly\":true,\"promptOnly\":false,\"runOnEdit\":true,\"substituteRegex\":0,\"minDepth\":null,\"maxDepth\":null}]},\"group_only_greetings\":[],\"character_book\":{\"entries\":[{\"id\":0,\"keys\":[],\"secondary_keys\":[],\"comment\":\"\",\"content\":\"## 地图导航模块\\n\\n请根据故事与前文,于</content>后或者正文结束后生成一个地图导航数据，需要折叠起来,包含以下元素：\\n\\n1. 3-5个主要地点区域\\n2. 当{{user}}因为各种不可抗力无法移动,比如被绑架,被锁在体育仓库,则输出MOVEBLOCK:YES\\n3. 每个主要地点下包含2-4个次级地点\\n4. 每个次级地点可能存在的角色,要尽可能合理地包含故事中的登场角色（用逗号分隔，如果没有角色可以留空）\\n5. 移动主体为{{user}},所以地图上不能出现{{user}}\\n6. 当前场景内的角色不应该出现在其他地方\\n7. 角色不应该重复出现在复数地点,可适当生成一些NPC\\n8. 冒险类故事可适当生成一些非角色,例如宝箱,怪物,敌人等\\n\\n数据格式要求：\\n<details><summary>**地图导航**</summary>\\n<map_data>\\n[MOVEBLOCK:NO]\\n[主地点1\\n- 次级地点A: 角色1, 角色2\\n- 次级地点B: 角色3\\n- 次级地点C: ]\\n[主地点2\\n- 次级地点D: 角色4, 角色5\\n- 次级地点E: 角色6]\\n</map_data>\\n</details>\\n\\n示范:\\n<details><summary>**地图导航**</summary>\\n <map_data>\\n [MOVEBLOCK:NO]\\n [哲的家\\n - 哲的房间:\\n - 客厅:\\n - 玄关: ]\\n [住宅区街道\\n - 哲家门口: 哲\\n - 千纱家门口:千纱\\n - 公园入口: ]\\n [商业街\\n - 便利店:\\n - 游戏厅:灯山 雪\\n - 书店: ]\\n </map_data>\\n</details>\\n#请根据故事的设定、场景和人物关系生成这个数据，使其符合故事情境和角色分布。\\n\",\"constant\":true,\"selective\":true,\"insertion_order\":100,\"enabled\":true,\"position\":\"after_char\",\"use_regex\":true,\"extensions\":{\"position\":4,\"exclude_recursion\":false,\"display_index\":0,\"probability\":100,\"useProbability\":true,\"depth\":0,\"selectiveLogic\":0,\"group\":\"\",\"group_override\":false,\"group_weight\":100,\"prevent_recursion\":false,\"delay_until_recursion\":false,\"scan_depth\":null,\"match_whole_words\":null,\"use_group_scoring\":false,\"case_sensitive\":null,\"automation_id\":\"\",\"role\":0,\"vectorized\":false,\"sticky\":0,\"cooldown\":0,\"delay\":0}}],\"name\":\"地图导航模块\"}},\"create_date\":\"2025-4-17 @08h 51m 09s 798ms\"}"}